{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"\u6d59\u6c5f\u5927\u5b6622\u5e74\u79cb\u7cfb\u7edf\u8d2f\u901a\u4e8c\u5b9e\u9a8c \u672c \u4ed3\u5e93 \u662f\u6d59\u6c5f\u5927\u5b6622\u5e74\u79cb \u7cfb\u7edf\u8d2f\u901a\u4e8c \u8bfe\u7a0b\u7684\u6559\u5b66\u4ed3\u5e93\uff0c\u5305\u542b\u6240\u6709\u5b9e\u9a8c\u6587\u6863\u548c\u516c\u5f00\u4ee3\u7801\u3002\u4ed3\u5e93\u76ee\u5f55\u7ed3\u6784\uff1a 1 2 3 4 \u251c\u2500\u2500 README.md \u251c\u2500\u2500 docs/ # \u5b9e\u9a8c\u6587\u6863 \u251c\u2500\u2500 mkdocs.yml \u2514\u2500\u2500 src/ # \u516c\u5f00\u4ee3\u7801 \u5b9e\u9a8c\u6587\u6863\u5df2\u7ecf\u90e8\u7f72\u5728\u4e86 zju-git pages \u4e0a\uff0c\u65b9\u4fbf\u5927\u5bb6\u9605\u8bfb\u3002 \u672c\u5730\u6e32\u67d3\u6587\u6863 \u6587\u6863\u91c7\u7528\u4e86 mkdocs-material \u5de5\u5177\u6784\u5efa\u548c\u90e8\u7f72\u3002\u5982\u679c\u60f3\u5728\u672c\u5730\u6e32\u67d3\uff1a 1 2 3 4 5 6 7 $ pip3 install mkdocs-material # \u5b89\u88c5 mkdocs-material $ git clone http://git.zju.edu.cn/zju-sys/sys2lab-22fall-stu/ # clone \u672c repo $ mkdocs serve # \u672c\u5730\u6e32\u67d3 INFO - Building documentation... INFO - Cleaning site directory ... INFO - [ 11 :00:57 ] Serving on http://127.0.0.1:8000/sys2lab-22fall/","title":"\u6d59\u6c5f\u5927\u5b6622\u5e74\u79cb\u7cfb\u7edf\u8d2f\u901a\u4e8c\u5b9e\u9a8c"},{"location":"#22","text":"\u672c \u4ed3\u5e93 \u662f\u6d59\u6c5f\u5927\u5b6622\u5e74\u79cb \u7cfb\u7edf\u8d2f\u901a\u4e8c \u8bfe\u7a0b\u7684\u6559\u5b66\u4ed3\u5e93\uff0c\u5305\u542b\u6240\u6709\u5b9e\u9a8c\u6587\u6863\u548c\u516c\u5f00\u4ee3\u7801\u3002\u4ed3\u5e93\u76ee\u5f55\u7ed3\u6784\uff1a 1 2 3 4 \u251c\u2500\u2500 README.md \u251c\u2500\u2500 docs/ # \u5b9e\u9a8c\u6587\u6863 \u251c\u2500\u2500 mkdocs.yml \u2514\u2500\u2500 src/ # \u516c\u5f00\u4ee3\u7801 \u5b9e\u9a8c\u6587\u6863\u5df2\u7ecf\u90e8\u7f72\u5728\u4e86 zju-git pages \u4e0a\uff0c\u65b9\u4fbf\u5927\u5bb6\u9605\u8bfb\u3002","title":"\u6d59\u6c5f\u5927\u5b6622\u5e74\u79cb\u7cfb\u7edf\u8d2f\u901a\u4e8c\u5b9e\u9a8c"},{"location":"#_1","text":"\u6587\u6863\u91c7\u7528\u4e86 mkdocs-material \u5de5\u5177\u6784\u5efa\u548c\u90e8\u7f72\u3002\u5982\u679c\u60f3\u5728\u672c\u5730\u6e32\u67d3\uff1a 1 2 3 4 5 6 7 $ pip3 install mkdocs-material # \u5b89\u88c5 mkdocs-material $ git clone http://git.zju.edu.cn/zju-sys/sys2lab-22fall-stu/ # clone \u672c repo $ mkdocs serve # \u672c\u5730\u6e32\u67d3 INFO - Building documentation... INFO - Cleaning site directory ... INFO - [ 11 :00:57 ] Serving on http://127.0.0.1:8000/sys2lab-22fall/","title":"\u672c\u5730\u6e32\u67d3\u6587\u6863"},{"location":"faq/","text":"\u5e38\u89c1\u95ee\u9898\u53ca\u89e3\u7b54 1 \u4eff\u771f\u548c\u4e0a\u677f\u7ed3\u679c\u5bf9\u4e0d\u4e0a\u600e\u4e48\u529e \u5f80\u5f80\u662f\u4e00\u4e9b Verilog \u4ee3\u7801\u7684\u7ec6\u8282\u4e0d\u5f53\uff0c\u5bfc\u81f4\u4e86\u7efc\u5408\u5668\u65e0\u6cd5\u7efc\u5408\u51fa\u4e0e\u4f60\u9884\u671f\u7684\u4ee3\u7801\u3002 \u9996\u5148\u53ef\u4ee5\u5c3d\u53ef\u80fd\u5730\u6d88\u9664\u4f60\u7684\u5de5\u7a0b\u4e2d\u7684 Warnings\u3002\u6b64\u5916\uff0c\u53ef\u4ee5\u53c2\u8003\u8fd9\u4efd slides \u7684 17-31 \u9875\u68c0\u67e5\u4f60\u7684\u5de5\u7a0b\u3002 2 Linux \u6e90\u7801\u653e\u5728\u5171\u4eab\u6587\u4ef6\u5939\u4e0b\u7f16\u8bd1\u5931\u8d25 \u8fd9\u79cd\u60c5\u51b5\u8bf7\u4f7f\u7528 wget \u7b49\u5de5\u5177\u5c06 Linux \u6e90\u7801\u4e0b\u8f7d\u81f3\u5bb9\u5668\u5185\u76ee\u5f55 \u800c\u975e\u5171\u4eab\u76ee\u5f55 \uff0c\u7136\u540e\u6267\u884c\u7f16\u8bd1\u3002 3 \u8fd0\u884c\u65f6\u51fa\u73b0 localhost:1234: Connection timed out. \u68c0\u67e5 qemu \u542f\u52a8\u65f6\u662f\u5426\u5f00\u542f\u4e86 -s \u9009\u9879\u3002 4 QEMU+GDB \u4f7f\u7528 si \u5355\u6307\u4ee4\u8c03\u8bd5\u9047\u5230\u6a21\u5f0f\u5207\u6362\u5931\u6548 \u5728\u9047\u5230\u8bf8\u5982 mret , sret \u7b49\u6307\u4ee4\u9020\u6210\u7684\u6a21\u5f0f\u5207\u6362\u65f6\uff0c si \u6307\u4ee4\u4f1a\u5931\u6548\uff0c\u53ef\u80fd\u8868\u73b0\u4e3a\u7a0b\u5e8f\u5f00\u59cb\u4e0d\u505c\u8dd1\uff0c\u5f71\u54cd\u5bf9\u7a0b\u5e8f\u8fd0\u884c\u884c\u4e3a\u7684\u5224\u65ad\u3002 \u4e00\u4e2a\u89e3\u51b3\u65b9\u6cd5\u662f\u5728\u7a0b\u5e8f \u9884\u671f\u8df3\u8f6c \u7684\u4f4d\u7f6e\u6253\u4e0a\u65ad\u70b9\uff0c\u65ad\u70b9\u4e0d\u4f1a\u53d7\u5230\u6a21\u5f0f\u5207\u6362\u7684\u5f71\u54cd\uff0c\u6bd4\u5982\uff1a 1 2 3 4 5 6 7 ( gdb ) i r sepc sepc 0x8000babe ( gdb ) b * 0x8000babe Breakpoint 1 at 0x8000babe ( gdb ) si # \u6216\u8005\u4f7f\u7528 c Breakpoint 1 , 0x000000008000babe in _never_gonna_give_you_up () ... \u8fd9\u6837\u5c31\u53ef\u4ee5\u770b\u5230\u65ad\u70b9\u88ab\u89e6\u53d1\uff0c\u53ef\u4ee5\u7ee7\u7eed\u8c03\u8bd5\u4e86\u3002 5. Function Prologue and Epilogue in C \u5728\u5b9e\u9a8c\u4e2dC\u8bed\u8a00\u7f16\u8bd1\u51fa\u7684\u51fd\u6570\u4f1a\u591a\u51fa\u4e00\u90e8\u5206\u975e\u7a0b\u5e8f\u7684\u4ee3\u7801\uff0c\u96c6\u4e2d\u5728\u51fd\u6570\u7684\u5f00\u5934\u4e0e\u7ed3\u5c3e\uff0c\u8fd9\u88ab\u79f0\u4f5c Prologue \u548c Epilogue \uff0c\u4ed6\u4eec\u8d77\u5230\u4e86\u5206\u914d\u6808\u7a7a\u95f4\u7b49\u4f5c\u7528\uff0c\u5177\u4f53\u7684\u4fe1\u606f\u53ef\u4ee5\u67e5\u770b\u8fd9\u4e2a \u56de\u7b54 \u3002 6. mtime & mtimecmp \u5728QEMU\u4e2d\u4e5f\u53ef\u4ee5\u65b9\u4fbf\u5730\u67e5\u770b mtime \u548c mtimecmp \u7684\u503c\uff0c mtime \u548c mtimecmp \u7684\u5b9e\u73b0\u662f\u901a\u8fc7MMIO(Memory-mapped I/O)\u7684\u65b9\u5f0f\u5b9e\u73b0\u7684\uff0c\u5728QEMU\u7684\u9ed8\u8ba4\u8bbe\u7f6e\u4e2d mtime \u7684\u5730\u5740\u4f4d\u4e8e 0x200bff8 \uff0c\u8bfb\u8fd9\u4e2a\u5730\u5740\u7684\u503c\u5c31\u662f mtime \u7684\u503c(\u5b9e\u9a8c\u4e2d\u662f\u4e00\u4e2a64bit\u7684\u91cf)\uff0c mtimecmp \u7684\u5730\u5740\u5728 0x2004000 \u3002 7. \u6742\u9879 \u8bbe\u7f6esp\u5bc4\u5b58\u5668\u662f\u4e3a\u4e86\u7ed9C\u8bed\u8a00\u63d0\u4f9b\u8fd0\u884c\u73af\u5883\uff0c\u9700\u8981\u5728\u6267\u884c\u4efb\u4f55C\u8bed\u8a00\u7f16\u5199\u7684\u51fd\u6570\u524d\u51c6\u5907\u597d\u6808 C\u8bed\u8a00\u9ed8\u8ba4\u7684\u6574\u6570\u5e38\u6570\u7c7b\u578b\u4e3a\u6574\u5f62\uff0c\u5982\u679c\u9700\u8981\u4f7f\u7528\u957f\u6574\u5f62\u4f7f\u7528 1L << 63 gdb\u5361\u4f4f\u65f6\u53ef\u4ee5\u901a\u8fc7 ctrl+C \u67e5\u770b\u7a0b\u5e8f\u5f53\u524d\u8fd0\u884c\u72b6\u6001\uff0c\u9047\u5230\u975e\u9884\u671f\u7684\u5f02\u5e38\u65f6\u53ef\u4ee5\u901a\u8fc7 scause, sepc \u7684\u503c\u8fdb\u884c\u8ddf\u8e2a\u548c\u8c03\u8bd5\uff0c\u6ce8\u610f\u5e76\u4e0d\u662f\u6240\u6709\u5730\u5740\u90fd\u662f\u53ef\u4f9b\u8bfb\u5199\u7684\uff0c\u8bf7\u5c3d\u91cf\u786e\u4fdd\u8bfb\u5199\u7684\u5730\u5740\u843d\u5728\u6808\u7a7a\u95f4\u548c\u7ed9\u6bcf\u4e2a\u8fdb\u7a0b\u5206\u914d\u7684\u7a7a\u95f4\u4e0a \u5728Makefile\u7684\u7f16\u8bd1\u9009\u9879 CFLAG \u4e2d\u52a0\u5165 -g \u9009\u9879\u53ef\u4ee5\u5728\u8c03\u8bd5\u65f6\u901a\u8fc7 layout src \u67e5\u770b\u6e90\u7801\uff0c\u4f46\u662f\u5728\u8fc7\u7a0b\u4e2d\u53ef\u80fd\u4f1a\u51fa\u73b0\u90e8\u5206\u53d8\u91cf\u663e\u793a\u4e3a <error reading variable: dwarf2_find_location_expression: Corrupted DWARF expression.> \u7684\u60c5\u51b5\uff0c\u8fd9\u662f gcc \u7684\u4e00\u4e2abug\uff0c\u5728\u65b0\u7248\u672c\u5df2\u7ecf\u4fee\u590d\uff0c\u5728\u672c\u6b21\u5b9e\u9a8c\u4e2d\u53ef\u4ee5\u901a\u8fc7\u5173\u95ed -O3 \u4f18\u5316\u9009\u9879\u6765\u89e3\u51b3","title":"\u5e38\u89c1\u95ee\u9898\u53ca\u89e3\u7b54"},{"location":"faq/#_1","text":"","title":"\u5e38\u89c1\u95ee\u9898\u53ca\u89e3\u7b54"},{"location":"faq/#1","text":"\u5f80\u5f80\u662f\u4e00\u4e9b Verilog \u4ee3\u7801\u7684\u7ec6\u8282\u4e0d\u5f53\uff0c\u5bfc\u81f4\u4e86\u7efc\u5408\u5668\u65e0\u6cd5\u7efc\u5408\u51fa\u4e0e\u4f60\u9884\u671f\u7684\u4ee3\u7801\u3002 \u9996\u5148\u53ef\u4ee5\u5c3d\u53ef\u80fd\u5730\u6d88\u9664\u4f60\u7684\u5de5\u7a0b\u4e2d\u7684 Warnings\u3002\u6b64\u5916\uff0c\u53ef\u4ee5\u53c2\u8003\u8fd9\u4efd slides \u7684 17-31 \u9875\u68c0\u67e5\u4f60\u7684\u5de5\u7a0b\u3002","title":"1 \u4eff\u771f\u548c\u4e0a\u677f\u7ed3\u679c\u5bf9\u4e0d\u4e0a\u600e\u4e48\u529e"},{"location":"faq/#2-linux","text":"\u8fd9\u79cd\u60c5\u51b5\u8bf7\u4f7f\u7528 wget \u7b49\u5de5\u5177\u5c06 Linux \u6e90\u7801\u4e0b\u8f7d\u81f3\u5bb9\u5668\u5185\u76ee\u5f55 \u800c\u975e\u5171\u4eab\u76ee\u5f55 \uff0c\u7136\u540e\u6267\u884c\u7f16\u8bd1\u3002","title":"2 Linux \u6e90\u7801\u653e\u5728\u5171\u4eab\u6587\u4ef6\u5939\u4e0b\u7f16\u8bd1\u5931\u8d25"},{"location":"faq/#3-localhost1234-connection-timed-out","text":"\u68c0\u67e5 qemu \u542f\u52a8\u65f6\u662f\u5426\u5f00\u542f\u4e86 -s \u9009\u9879\u3002","title":"3 \u8fd0\u884c\u65f6\u51fa\u73b0 localhost:1234: Connection timed out."},{"location":"faq/#4-qemugdb-si","text":"\u5728\u9047\u5230\u8bf8\u5982 mret , sret \u7b49\u6307\u4ee4\u9020\u6210\u7684\u6a21\u5f0f\u5207\u6362\u65f6\uff0c si \u6307\u4ee4\u4f1a\u5931\u6548\uff0c\u53ef\u80fd\u8868\u73b0\u4e3a\u7a0b\u5e8f\u5f00\u59cb\u4e0d\u505c\u8dd1\uff0c\u5f71\u54cd\u5bf9\u7a0b\u5e8f\u8fd0\u884c\u884c\u4e3a\u7684\u5224\u65ad\u3002 \u4e00\u4e2a\u89e3\u51b3\u65b9\u6cd5\u662f\u5728\u7a0b\u5e8f \u9884\u671f\u8df3\u8f6c \u7684\u4f4d\u7f6e\u6253\u4e0a\u65ad\u70b9\uff0c\u65ad\u70b9\u4e0d\u4f1a\u53d7\u5230\u6a21\u5f0f\u5207\u6362\u7684\u5f71\u54cd\uff0c\u6bd4\u5982\uff1a 1 2 3 4 5 6 7 ( gdb ) i r sepc sepc 0x8000babe ( gdb ) b * 0x8000babe Breakpoint 1 at 0x8000babe ( gdb ) si # \u6216\u8005\u4f7f\u7528 c Breakpoint 1 , 0x000000008000babe in _never_gonna_give_you_up () ... \u8fd9\u6837\u5c31\u53ef\u4ee5\u770b\u5230\u65ad\u70b9\u88ab\u89e6\u53d1\uff0c\u53ef\u4ee5\u7ee7\u7eed\u8c03\u8bd5\u4e86\u3002","title":"4 QEMU+GDB \u4f7f\u7528 si \u5355\u6307\u4ee4\u8c03\u8bd5\u9047\u5230\u6a21\u5f0f\u5207\u6362\u5931\u6548"},{"location":"faq/#5-function-prologue-and-epilogue-in-c","text":"\u5728\u5b9e\u9a8c\u4e2dC\u8bed\u8a00\u7f16\u8bd1\u51fa\u7684\u51fd\u6570\u4f1a\u591a\u51fa\u4e00\u90e8\u5206\u975e\u7a0b\u5e8f\u7684\u4ee3\u7801\uff0c\u96c6\u4e2d\u5728\u51fd\u6570\u7684\u5f00\u5934\u4e0e\u7ed3\u5c3e\uff0c\u8fd9\u88ab\u79f0\u4f5c Prologue \u548c Epilogue \uff0c\u4ed6\u4eec\u8d77\u5230\u4e86\u5206\u914d\u6808\u7a7a\u95f4\u7b49\u4f5c\u7528\uff0c\u5177\u4f53\u7684\u4fe1\u606f\u53ef\u4ee5\u67e5\u770b\u8fd9\u4e2a \u56de\u7b54 \u3002","title":"5. Function Prologue and Epilogue in C"},{"location":"faq/#6-mtime-mtimecmp","text":"\u5728QEMU\u4e2d\u4e5f\u53ef\u4ee5\u65b9\u4fbf\u5730\u67e5\u770b mtime \u548c mtimecmp \u7684\u503c\uff0c mtime \u548c mtimecmp \u7684\u5b9e\u73b0\u662f\u901a\u8fc7MMIO(Memory-mapped I/O)\u7684\u65b9\u5f0f\u5b9e\u73b0\u7684\uff0c\u5728QEMU\u7684\u9ed8\u8ba4\u8bbe\u7f6e\u4e2d mtime \u7684\u5730\u5740\u4f4d\u4e8e 0x200bff8 \uff0c\u8bfb\u8fd9\u4e2a\u5730\u5740\u7684\u503c\u5c31\u662f mtime \u7684\u503c(\u5b9e\u9a8c\u4e2d\u662f\u4e00\u4e2a64bit\u7684\u91cf)\uff0c mtimecmp \u7684\u5730\u5740\u5728 0x2004000 \u3002","title":"6. mtime &amp; mtimecmp"},{"location":"faq/#7","text":"\u8bbe\u7f6esp\u5bc4\u5b58\u5668\u662f\u4e3a\u4e86\u7ed9C\u8bed\u8a00\u63d0\u4f9b\u8fd0\u884c\u73af\u5883\uff0c\u9700\u8981\u5728\u6267\u884c\u4efb\u4f55C\u8bed\u8a00\u7f16\u5199\u7684\u51fd\u6570\u524d\u51c6\u5907\u597d\u6808 C\u8bed\u8a00\u9ed8\u8ba4\u7684\u6574\u6570\u5e38\u6570\u7c7b\u578b\u4e3a\u6574\u5f62\uff0c\u5982\u679c\u9700\u8981\u4f7f\u7528\u957f\u6574\u5f62\u4f7f\u7528 1L << 63 gdb\u5361\u4f4f\u65f6\u53ef\u4ee5\u901a\u8fc7 ctrl+C \u67e5\u770b\u7a0b\u5e8f\u5f53\u524d\u8fd0\u884c\u72b6\u6001\uff0c\u9047\u5230\u975e\u9884\u671f\u7684\u5f02\u5e38\u65f6\u53ef\u4ee5\u901a\u8fc7 scause, sepc \u7684\u503c\u8fdb\u884c\u8ddf\u8e2a\u548c\u8c03\u8bd5\uff0c\u6ce8\u610f\u5e76\u4e0d\u662f\u6240\u6709\u5730\u5740\u90fd\u662f\u53ef\u4f9b\u8bfb\u5199\u7684\uff0c\u8bf7\u5c3d\u91cf\u786e\u4fdd\u8bfb\u5199\u7684\u5730\u5740\u843d\u5728\u6808\u7a7a\u95f4\u548c\u7ed9\u6bcf\u4e2a\u8fdb\u7a0b\u5206\u914d\u7684\u7a7a\u95f4\u4e0a \u5728Makefile\u7684\u7f16\u8bd1\u9009\u9879 CFLAG \u4e2d\u52a0\u5165 -g \u9009\u9879\u53ef\u4ee5\u5728\u8c03\u8bd5\u65f6\u901a\u8fc7 layout src \u67e5\u770b\u6e90\u7801\uff0c\u4f46\u662f\u5728\u8fc7\u7a0b\u4e2d\u53ef\u80fd\u4f1a\u51fa\u73b0\u90e8\u5206\u53d8\u91cf\u663e\u793a\u4e3a <error reading variable: dwarf2_find_location_expression: Corrupted DWARF expression.> \u7684\u60c5\u51b5\uff0c\u8fd9\u662f gcc \u7684\u4e00\u4e2abug\uff0c\u5728\u65b0\u7248\u672c\u5df2\u7ecf\u4fee\u590d\uff0c\u5728\u672c\u6b21\u5b9e\u9a8c\u4e2d\u53ef\u4ee5\u901a\u8fc7\u5173\u95ed -O3 \u4f18\u5316\u9009\u9879\u6765\u89e3\u51b3","title":"7. \u6742\u9879"},{"location":"lab0/","text":"\u5b9e\u9a8c0: CPU\u521d\u6b65\u8bbe\u8ba1\u4e0e\u7a0b\u5e8f\u6267\u884c\u8fc7\u7a0b 1. \u5b9e\u9a8c\u76ee\u7684 \u56de\u987e\u5355\u5468\u671fCPU\u6570\u636e\u901a\u8def\u4e0e\u63a7\u5236\u5668\u8bbe\u8ba1\u8fc7\u7a0b \u56de\u987e\u7a0b\u5e8f\u6267\u884c\u8fc7\u7a0b \u4e3a\u4e4b\u540e\u642d\u5efa\u6d41\u6c34\u7ebfCPU\u6253\u4e0b\u57fa\u7840 2. \u5b9e\u9a8c\u73af\u5883 HDL \uff1aVerilog\u3001SystemVerilog IDE \uff1aVivado \u5f00\u53d1\u677f \uff1aNEXYS A7 3. \u5b9e\u9a8c\u539f\u7406 3.1 \u6982\u8ff0 \u5355\u5468\u671fCPU\u4e3b\u8981\u7279\u5f81\u662f\u5728\u4e00\u4e2a\u5468\u671f\u5185\u5b8c\u6210\u4e00\u6761\u6307\u4ee4\uff0c\u4e5f\u5c31\u610f\u5473\u7740\u5176CPI(cycle per instruction)\u662f1\u3002\u8003\u8651\u5230\u4e0d\u540c\u7684\u6307\u4ee4\u90fd\u9700\u8981\u5728\u4e00\u4e2a\u5468\u671f\u5185\u5b8c\u6210\uff0c\u56e0\u800c\u5355\u5468\u671fCPU\u65f6\u949f\u9891\u7387\u662f\u4ee5\u6267\u884c\u6700\u6162\u7684\u90a3\u6761\u6307\u4ee4\u4f5c\u4e3a\u57fa\u51c6\uff0c\u8fd9\u4e5f\u662f\u5355\u5468\u671fCPU\u6700\u5927\u7684\u7f3a\u9677\u4e4b\u4e00\u3002 \u6211\u4eec\u53ef\u4ee5\u628a\u5355\u5468\u671fCPU\u5206\u6210\u6570\u636e\u901a\u8def\u548c\u63a7\u5236\u5355\u5143\u4e24\u4e2a\u6a21\u5757\uff0c\u672c\u6b21\u5b9e\u9a8c\u5c06\u56de\u987e\u8fd9\u4e24\u4e2a\u6a21\u5757\u7684\u8bbe\u8ba1\u4e0e\u7ed3\u5408\u8fc7\u7a0b\u3002 3.2 \u7a0b\u5e8f\u6267\u884c\u6d41\u7a0b\u9636\u6bb5 \u4e3a\u4e86\u4e4b\u540e\u80fd\u548c\u6d41\u6c34\u7ebfCPU\u8fdb\u884c\u8854\u63a5\uff0c\u6211\u4eec\u628a\u5355\u5468\u671fCPU\u6570\u636e\u901a\u8def\u5212\u5206\u62105\u4e2a\u9636\u6bb5(stage): instruction fetch (IF) instruction decode (ID) execution (EX) memory access (MEM) register write back (WB) 3.3 \u6570\u636e\u901a\u8def\u56fe \u5177\u4f53\u7684\u8bbe\u8ba1\u8981\u70b9\u53c2\u89c1\u8ba1\u7b97\u673a\u7cfb\u7edf\u2160\u5b9e\u9a8c10\u7684\u5b9e\u9a8c\u6307\u5bfc\u4e66\u3002 3.4 \u63a7\u5236\u5355\u5143 \u63a7\u5236\u5355\u5143\uff0c\u4e5f\u79f0\u8bd1\u7801\u5668\uff0c\u5b83\u7684\u4f5c\u7528\u662f\u89e3\u7801\u6307\u4ee4\uff0c\u53d1\u51fa\u4fe1\u53f7\uff0c\u544a\u8bc9Datapath\u5e94\u8be5\u6267\u884c\u4ec0\u4e48\u64cd\u4f5c\u3002\u5176\u8bbe\u8ba1\u8fc7\u7a0b\u4e3b\u8981\u5305\u62ec\u5bf9\u6307\u4ee4\u683c\u5f0f\u7684\u89e3\u6790\uff0c\u4e0e\u76f8\u5e94\u63a7\u5236\u4fe1\u53f7\u7684\u8bbe\u8ba1\u3002 \u88681 \u548c \u88682 \u5217\u51fa\u4e86\u53c2\u8003\u7684\u63a7\u5236\u5355\u5143\u4fe1\u53f7\u8bbe\u8ba1\uff0c\u5927\u5bb6\u4e5f\u53ef\u4ee5\u81ea\u884c\u8bbe\u8ba1\u63a7\u5236\u4fe1\u53f7\u3002 \u4fe1\u53f7\u7ebf \u542b\u4e49 1'b0 1'b1 reg_write \u5199\u5bc4\u5b58\u5668 \u4e0d\u5199\u56de \u5199\u56de alu_src_b ALU B\u53e3\u7684\u6570\u636e\u6765\u6e90 \u6570\u636e\u6765\u81ea\u7acb\u5373\u6570imm \u6570\u636e\u6765\u81eaReg[rs2] mem_write data memory\u8bfb\u5199 \u8bfbdata memory \u5199data memory branch \u662f\u5426\u4e3abranch\u6307\u4ee4 \u4e0d\u662f \u662f b_type branch\u6307\u4ee4\u7684\u5177\u4f53\u7c7b\u578b bne beq \u88681\uff1a1\u4f4d\u4fe1\u53f7\u7ebf\u7684\u542b\u4e49 \u4fe1\u53f7\u7ebf \u542b\u4e49 2'b00 2'b01 2'b10 2'b11 pc_src pc\u7684\u6570\u636e\u6765\u6e90 pc+4\uff0cbranch\u8df3\u8f6c\u5730\u5740 jalr\u8df3\u8f6c\u5730\u5740 jal\u8df3\u8f6c\u5730\u5740 \u95f2\u7f6e mem_to_reg \u5199\u56deRegisters\u7684\u6570\u636e\u6765\u6e90 alu imm pc+4 data memory \u88682\uff1a2\u4f4d\u4fe1\u53f7\u7ebf\u7684\u542b\u4e49 3.5 \u5b9e\u73b0\u6307\u4ee4 \u5b9e\u73b0\u7684\u6307\u4ee4\u5206\u4e3a\u6574\u6570\u8fd0\u7b97\u6307\u4ee4\u3001\u8df3\u8f6c\u6307\u4ee4\u3001\u8bbf\u5b58\u6307\u4ee4\u4e09\u7c7b\uff0c\u5206\u522b\u5305\u542bADDI\u3001SLTI\u3001ANDI\u3001ORI\u3001LUI\u3001ADD\u3001SLT\u3001AND\u3001OR\u3001SLL\u3001JAL\u3001BEQ\u3001BNE\u3001LW\u3001SW\u3002\u5404\u6307\u4ee4\u8be6\u7ec6\u683c\u5f0f\u4e0e\u529f\u80fd\u5b9a\u4e49\u89c1\u8ba1\u7b97\u673a\u7cfb\u7edfI\u5b9e\u9a8c10\u5b9e\u9a8c\u6307\u5bfc\u4e66\u3002 4. \u5b9e\u9a8c\u8981\u6c42 \u590d\u73b032\u4f4d\u5355\u5468\u671fCPU\u6570\u636e\u901a\u8def\u8bbe\u8ba1\uff0c\u5b9e\u73b0 3.5 \u4e2d\u5217\u51fa\u7684\u6307\u4ee4 \u901a\u8fc7\u4eff\u771f\u6d4b\u8bd5\u548c\u4e0a\u677f\u9a8c\u6536 \u5b8c\u6210\u5b9e\u9a8c\u62a5\u544a\uff1a \u9610\u8ff0\u81ea\u5df1\u8bbe\u8ba1\u7684CPU\u80fd\u591f\u5b9e\u73b0\u7684\u6307\u4ee4\uff0c\u53ca\u5176\u8fd0\u884c\u8fc7\u7a0b\u548c\u529f\u80fd\u63cf\u8ff0 \u63cf\u8ff0\u8bbe\u8ba1\u7684\u6570\u636e\u901a\u8def\uff0c\u5305\u62ec\u8bbe\u8ba1\u7684\u4e3b\u8981\u6a21\u5757\u90e8\u4ef6\uff0c\u90e8\u4ef6\u95f4\u8fde\u63a5\u901a\u8def \u63cf\u8ff0\u8bbe\u8ba1\u7684\u63a7\u5236\u5668\uff0c\u5305\u62ec\u6570\u636e\u901a\u8def\u4e2d\u4e3b\u8981\u90e8\u4ef6\u6240\u9700\u7684\u63a7\u5236\u4fe1\u53f7\uff0c\u6307\u4ee4\u4e0e\u63a7\u5236\u4fe1\u53f7\u95f4\u7684\u8bd1\u7801\u8fc7\u7a0b","title":"\u5b9e\u9a8c\u6307\u5bfc\u96f6"},{"location":"lab0/#0-cpu","text":"","title":"\u5b9e\u9a8c0: CPU\u521d\u6b65\u8bbe\u8ba1\u4e0e\u7a0b\u5e8f\u6267\u884c\u8fc7\u7a0b"},{"location":"lab0/#1","text":"\u56de\u987e\u5355\u5468\u671fCPU\u6570\u636e\u901a\u8def\u4e0e\u63a7\u5236\u5668\u8bbe\u8ba1\u8fc7\u7a0b \u56de\u987e\u7a0b\u5e8f\u6267\u884c\u8fc7\u7a0b \u4e3a\u4e4b\u540e\u642d\u5efa\u6d41\u6c34\u7ebfCPU\u6253\u4e0b\u57fa\u7840","title":"1. \u5b9e\u9a8c\u76ee\u7684"},{"location":"lab0/#2","text":"HDL \uff1aVerilog\u3001SystemVerilog IDE \uff1aVivado \u5f00\u53d1\u677f \uff1aNEXYS A7","title":"2. \u5b9e\u9a8c\u73af\u5883"},{"location":"lab0/#3","text":"","title":"3. \u5b9e\u9a8c\u539f\u7406"},{"location":"lab0/#31","text":"\u5355\u5468\u671fCPU\u4e3b\u8981\u7279\u5f81\u662f\u5728\u4e00\u4e2a\u5468\u671f\u5185\u5b8c\u6210\u4e00\u6761\u6307\u4ee4\uff0c\u4e5f\u5c31\u610f\u5473\u7740\u5176CPI(cycle per instruction)\u662f1\u3002\u8003\u8651\u5230\u4e0d\u540c\u7684\u6307\u4ee4\u90fd\u9700\u8981\u5728\u4e00\u4e2a\u5468\u671f\u5185\u5b8c\u6210\uff0c\u56e0\u800c\u5355\u5468\u671fCPU\u65f6\u949f\u9891\u7387\u662f\u4ee5\u6267\u884c\u6700\u6162\u7684\u90a3\u6761\u6307\u4ee4\u4f5c\u4e3a\u57fa\u51c6\uff0c\u8fd9\u4e5f\u662f\u5355\u5468\u671fCPU\u6700\u5927\u7684\u7f3a\u9677\u4e4b\u4e00\u3002 \u6211\u4eec\u53ef\u4ee5\u628a\u5355\u5468\u671fCPU\u5206\u6210\u6570\u636e\u901a\u8def\u548c\u63a7\u5236\u5355\u5143\u4e24\u4e2a\u6a21\u5757\uff0c\u672c\u6b21\u5b9e\u9a8c\u5c06\u56de\u987e\u8fd9\u4e24\u4e2a\u6a21\u5757\u7684\u8bbe\u8ba1\u4e0e\u7ed3\u5408\u8fc7\u7a0b\u3002","title":"3.1 \u6982\u8ff0"},{"location":"lab0/#32","text":"\u4e3a\u4e86\u4e4b\u540e\u80fd\u548c\u6d41\u6c34\u7ebfCPU\u8fdb\u884c\u8854\u63a5\uff0c\u6211\u4eec\u628a\u5355\u5468\u671fCPU\u6570\u636e\u901a\u8def\u5212\u5206\u62105\u4e2a\u9636\u6bb5(stage): instruction fetch (IF) instruction decode (ID) execution (EX) memory access (MEM) register write back (WB)","title":"3.2 \u7a0b\u5e8f\u6267\u884c\u6d41\u7a0b\u9636\u6bb5"},{"location":"lab0/#33","text":"\u5177\u4f53\u7684\u8bbe\u8ba1\u8981\u70b9\u53c2\u89c1\u8ba1\u7b97\u673a\u7cfb\u7edf\u2160\u5b9e\u9a8c10\u7684\u5b9e\u9a8c\u6307\u5bfc\u4e66\u3002","title":"3.3 \u6570\u636e\u901a\u8def\u56fe"},{"location":"lab0/#34","text":"\u63a7\u5236\u5355\u5143\uff0c\u4e5f\u79f0\u8bd1\u7801\u5668\uff0c\u5b83\u7684\u4f5c\u7528\u662f\u89e3\u7801\u6307\u4ee4\uff0c\u53d1\u51fa\u4fe1\u53f7\uff0c\u544a\u8bc9Datapath\u5e94\u8be5\u6267\u884c\u4ec0\u4e48\u64cd\u4f5c\u3002\u5176\u8bbe\u8ba1\u8fc7\u7a0b\u4e3b\u8981\u5305\u62ec\u5bf9\u6307\u4ee4\u683c\u5f0f\u7684\u89e3\u6790\uff0c\u4e0e\u76f8\u5e94\u63a7\u5236\u4fe1\u53f7\u7684\u8bbe\u8ba1\u3002 \u88681 \u548c \u88682 \u5217\u51fa\u4e86\u53c2\u8003\u7684\u63a7\u5236\u5355\u5143\u4fe1\u53f7\u8bbe\u8ba1\uff0c\u5927\u5bb6\u4e5f\u53ef\u4ee5\u81ea\u884c\u8bbe\u8ba1\u63a7\u5236\u4fe1\u53f7\u3002 \u4fe1\u53f7\u7ebf \u542b\u4e49 1'b0 1'b1 reg_write \u5199\u5bc4\u5b58\u5668 \u4e0d\u5199\u56de \u5199\u56de alu_src_b ALU B\u53e3\u7684\u6570\u636e\u6765\u6e90 \u6570\u636e\u6765\u81ea\u7acb\u5373\u6570imm \u6570\u636e\u6765\u81eaReg[rs2] mem_write data memory\u8bfb\u5199 \u8bfbdata memory \u5199data memory branch \u662f\u5426\u4e3abranch\u6307\u4ee4 \u4e0d\u662f \u662f b_type branch\u6307\u4ee4\u7684\u5177\u4f53\u7c7b\u578b bne beq \u88681\uff1a1\u4f4d\u4fe1\u53f7\u7ebf\u7684\u542b\u4e49 \u4fe1\u53f7\u7ebf \u542b\u4e49 2'b00 2'b01 2'b10 2'b11 pc_src pc\u7684\u6570\u636e\u6765\u6e90 pc+4\uff0cbranch\u8df3\u8f6c\u5730\u5740 jalr\u8df3\u8f6c\u5730\u5740 jal\u8df3\u8f6c\u5730\u5740 \u95f2\u7f6e mem_to_reg \u5199\u56deRegisters\u7684\u6570\u636e\u6765\u6e90 alu imm pc+4 data memory \u88682\uff1a2\u4f4d\u4fe1\u53f7\u7ebf\u7684\u542b\u4e49","title":"3.4 \u63a7\u5236\u5355\u5143"},{"location":"lab0/#35","text":"\u5b9e\u73b0\u7684\u6307\u4ee4\u5206\u4e3a\u6574\u6570\u8fd0\u7b97\u6307\u4ee4\u3001\u8df3\u8f6c\u6307\u4ee4\u3001\u8bbf\u5b58\u6307\u4ee4\u4e09\u7c7b\uff0c\u5206\u522b\u5305\u542bADDI\u3001SLTI\u3001ANDI\u3001ORI\u3001LUI\u3001ADD\u3001SLT\u3001AND\u3001OR\u3001SLL\u3001JAL\u3001BEQ\u3001BNE\u3001LW\u3001SW\u3002\u5404\u6307\u4ee4\u8be6\u7ec6\u683c\u5f0f\u4e0e\u529f\u80fd\u5b9a\u4e49\u89c1\u8ba1\u7b97\u673a\u7cfb\u7edfI\u5b9e\u9a8c10\u5b9e\u9a8c\u6307\u5bfc\u4e66\u3002","title":"3.5 \u5b9e\u73b0\u6307\u4ee4"},{"location":"lab0/#4","text":"\u590d\u73b032\u4f4d\u5355\u5468\u671fCPU\u6570\u636e\u901a\u8def\u8bbe\u8ba1\uff0c\u5b9e\u73b0 3.5 \u4e2d\u5217\u51fa\u7684\u6307\u4ee4 \u901a\u8fc7\u4eff\u771f\u6d4b\u8bd5\u548c\u4e0a\u677f\u9a8c\u6536 \u5b8c\u6210\u5b9e\u9a8c\u62a5\u544a\uff1a \u9610\u8ff0\u81ea\u5df1\u8bbe\u8ba1\u7684CPU\u80fd\u591f\u5b9e\u73b0\u7684\u6307\u4ee4\uff0c\u53ca\u5176\u8fd0\u884c\u8fc7\u7a0b\u548c\u529f\u80fd\u63cf\u8ff0 \u63cf\u8ff0\u8bbe\u8ba1\u7684\u6570\u636e\u901a\u8def\uff0c\u5305\u62ec\u8bbe\u8ba1\u7684\u4e3b\u8981\u6a21\u5757\u90e8\u4ef6\uff0c\u90e8\u4ef6\u95f4\u8fde\u63a5\u901a\u8def \u63cf\u8ff0\u8bbe\u8ba1\u7684\u63a7\u5236\u5668\uff0c\u5305\u62ec\u6570\u636e\u901a\u8def\u4e2d\u4e3b\u8981\u90e8\u4ef6\u6240\u9700\u7684\u63a7\u5236\u4fe1\u53f7\uff0c\u6307\u4ee4\u4e0e\u63a7\u5236\u4fe1\u53f7\u95f4\u7684\u8bd1\u7801\u8fc7\u7a0b","title":"4. \u5b9e\u9a8c\u8981\u6c42"},{"location":"lab1-1/","text":"\u5b9e\u9a8c1-1: \u6d41\u6c34\u52a0\u6cd5\u673a 1. \u5b9e\u9a8c\u76ee\u7684 \u7406\u89e3\u6d41\u6c34\u7ebf\u7684\u57fa\u672c\u6982\u5ff5\u4e0e\u601d\u60f3 \u57fa\u4e8e\u5728\u5355\u5468\u671fCPU\u4e2d\u5df2\u7ecf\u5b9e\u73b0\u7684\u6a21\u5757\uff0c\u5b9e\u73b05\u7ea7\u6d41\u6c34\u7ebf\u6846\u67b6 \u7406\u89e3\u6d41\u6c34\u7ebf\u8bbe\u8ba1\u5728\u63d0\u9ad8CPU\u7684\u541e\u5410\u7387\uff0c\u63d0\u5347\u6574\u4f53\u6027\u80fd\u4e0a\u7684\u4f5c\u7528\u4e0e\u4f18\u8d8a\u6027 2. \u5b9e\u9a8c\u73af\u5883 HDL \uff1aVerilog IDE \uff1aVivado \u5f00\u53d1\u677f \uff1aNexys A7 \u63d0\u4f9b\u6d4b\u8bd5\u7a0b\u5e8f\u548c\u6d4b\u8bd5\u6846\u67b6 3. \u5b9e\u9a8c\u539f\u7406 3.1 \u6d41\u6c34\u7ebf\u4e0e\u5355\u5468\u671fCPU\u8bbe\u8ba1\u5bf9\u6bd4 \u5173\u4e8e\u6d41\u6c34\u7ebf\u7684\u57fa\u672c\u8bbe\u8ba1\u601d\u60f3\u5df2\u7ecf\u5728\u8ba1\u7b97\u673a\u4f53\u7cfb\u7ed3\u6784\u8bfe\u7a0b\u7684\u7406\u8bba\u90e8\u5206\u4e2d\u63d0\u53ca\uff0c\u8fd9\u91cc\u4e0d\u518d\u8d58\u8ff0\u3002\u4f46\u5b9e\u9645\u843d\u5b9e\u5230\u7535\u8def\u8bbe\u8ba1\uff0c\u4e0e\u6b64\u524d\u8ba1\u7b97\u673a\u7ec4\u6210\u4e2d\u8bbe\u8ba1\u7684\u5355\u5468\u671fCPU\u76f8\u6bd4\u8fd8\u662f\u6709\u5f88\u591a\u4e0d\u540c\u4e4b\u5904\u3002 \u5728\u540c\u4e00\u65f6\u523b\u4e0b\uff0c\u6d41\u6c34\u7ebf\u7684\u4e94\u4e2a\u6d41\u6c34\u7ea7\u8fd0\u884c\u7684\u6307\u4ee4\u5b9e\u9645\u5404\u4e0d\u76f8\u540c\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u4e00\u822c\u5c06\u4e00\u6761\u6307\u4ee4\u6240\u9700\u7684\u63a7\u5236\u4fe1\u53f7\u4e00\u8d77\u5b58\u5728\u6d41\u6c34\u6bb5\u95f4\u5bc4\u5b58\u5668\u4e2d\uff0c\u968f\u6307\u4ee4\u5176\u4ed6\u4fe1\u606f\u4e00\u8d77\u987a\u7740\u6d41\u6c34\u7ebf\u4f20\u9012\uff0c\u8fd9\u91cc\u7684\u6bb5\u95f4\u5bc4\u5b58\u5668\u662f\u6307\uff1aIF/ID\u5bc4\u5b58\u5668\u3001ID/EX\u5bc4\u5b58\u5668\u3001EX/MEM\u5bc4\u5b58\u5668\u3001MEM/WB\u5bc4\u5b58\u5668\u8fd9\u56db\u4e2a\u7528\u4e8e\u6d41\u6c34\u6bb5\u95f4\u4f20\u9012\u6307\u4ee4\u4fe1\u606f\u7684\u5bc4\u5b58\u5668\u7ec4\u3002\u4f8b\u5982add\u6307\u4ee4\uff0c\u5728ID\u9636\u6bb5\u5bf9\u6307\u4ee4\u89e3\u7801\uff0c\u5f97\u5230\u6240\u4f7f\u7528\u7684\u5bc4\u5b58\u5668rd, rs, rt\u9700\u8981\u7b49\u5f85\u5230WB\u9636\u6bb5\u5199\u56de\uff0c\u5c31\u9700\u8981\u7531\u6bb5\u95f4\u5bc4\u5b58\u5668\u5b58\u50a8rd, rs, rt\u7684\u503c\uff0c\u4e00\u7ea7\u4e00\u7ea7\u5730\u4f20\u9012\u5230WB\u9636\u6bb5\u3002 \u539f\u5219\u4e0a\u6bcf\u4e00\u62cd\u8fc7\u540e\uff0c\u6d41\u6c34\u7ebf\u90fd\u4f1a\u5411\u524d\u6d41\u52a8\u4e00\u6bb5\u3002\u7b2cx\u62cdIF\u6bb5\u5185\u53d6\u51fa\u6307\u4ee4\uff0c\u7b2cx+1\u62cd\u8be5\u6307\u4ee4\u6d41\u5165ID\u6bb5\u8fdb\u884c\u8bd1\u7801\uff0c\u4f8b\u5982\u8bd1\u7801\u5f97\u5230\u7684\u662flw\u6307\u4ee4\uff0c\u90a3\u4e48\u7b2cx+2\u62cd\u6d41\u5165EX\u6bb5\u5185\u6307\u4ee4lw\u5b8c\u6210\u5730\u5740\u8ba1\u7b97\uff0c\u7b2cx+3\u62cdlw\u6d41\u5165MEM\u6bb5\u5b8c\u6210\u8bbf\u5b58\u7684\u8bfb\u53d6\uff0c\u7b2cx+4\u62cd\u6d41\u5165WB\u9636\u6bb5\u5c06\u8bbf\u5b58\u4e2d\u7684\u503c\u5199\u56de\u5bc4\u5b58\u5668\u3002\u4e00\u822c\u800c\u8a00\u6bb5\u5185\u4efb\u52a1\u9700\u8981\u5f53\u62cd\u5b8c\u6210\uff0c\u56e0\u4e3a\u5728\u4e0b\u4e00\u62cd\u65f6\uff0c\u6bb5\u5185\u7684\u4fe1\u53f7\u5c31\u4f1a\u53d8\u4e3a\u4e0b\u4e00\u6761\u6d41\u5165\u6307\u4ee4\u9700\u8981\u7684\u4fe1\u53f7\uff0c\u5728\u4f7f\u7528\u6bb5\u95f4\u5bc4\u5b58\u5668\u4ee5\u5916\u7684\u5bc4\u5b58\u5668\u65f6\uff0c\u52a1\u5fc5\u8981\u6ce8\u610f\u53ef\u80fd\u4ea7\u751f\u7684\u65f6\u5e8f\u95ee\u9898\u3002 \u5176\u4ed6\u5173\u4e8e\u5355\u5468\u671f\u3001\u6d41\u6c34\u7ebfCPU\u7684\u7279\u70b9\u5bf9\u6bd4\u5982\u88681\u6240\u793a\uff0c\u8bf7\u5728\u8ba4\u771f\u7406\u89e3\u4e09\u8005\u7684\u533a\u522b\u4e4b\u540e\u518d\u8fdb\u884c\u5b9e\u9a8c\u3002 Single-cycle Pipeline \u6a21\u5757\u590d\u7528 \u7ed3\u6784\u51b2\u7a81 \u7ed3\u6784\u51b2\u7a81 \u8857\u6bb5\u5bc4\u5b58\u5668 \u65e0 \u6709 \u72b6\u6001\u673a \u65e0 \u65e0 \u65f6\u949f\u9891\u7387 \u53d6\u51b3\u4e8e\u6700\u957f\u6307\u4ee4 \u53d6\u51b3\u4e8e\u6700\u957f\u9636\u6bb5 CPI 1 1\uff08\u6781\u9650\u503c\uff09 \u88681\uff1a2\u79cd CPU \u8bbe\u8ba1\u5bf9\u6bd4 3.2 \u6d41\u6c34\u7ea7\u5212\u5206 \u6d41\u6c34\u7ea7\u5212\u5206\u7684\u4e00\u822c\u7ecf\u9a8c\u51c6\u5219\uff1a \u6309\u529f\u80fd\u5212\u5206 \u3002\u4e0d\u540c\u7684\u529f\u80fd\u6700\u597d\u5c5e\u4e8e\u4e0d\u540c\u7684\u6d41\u6c34\u7ea7\uff0c\u56e0\u4e3a\u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u5355\u4e2a\u6d41\u6c34\u7ea7\u529f\u80fd\u8d8a\u5c11\uff0c\u7ec4\u5408\u903b\u8f91\u8d8a\u7b80\u5355\uff0c\u5ef6\u8fdf\u8d8a\u4f4e\uff0c\u65f6\u949f\u9891\u7387\u8d8a\u9ad8\u3002 \u6309\u65f6\u95f4\u5212\u5206 \u3002\u5728\u6709\u4e9b\u7ec4\u4ef6\u4e2d\uff08\u4f8b\u5982\u8bd1\u7801\u5668\uff09\uff0c\u53ef\u80fd\u4f1a\u51fa\u73b0\u8f83\u957f\u8fde\u7eed\u7684\u7ec4\u5408\u7535\u8def\uff1b\u5b83\u4eec\u5f80\u5f80\u4f1a\u6210\u4e3a\u7cfb\u7edf\u6027\u80fd\u7684\u74f6\u9888\uff0c\u4f46\u62c6\u5206\u7ec4\u5408\u7535\u8def\u3001\u5728\u4e2d\u95f4\u63d2\u5165\u9636\u6bb5\u5bc4\u5b58\u5668\uff0c\u5e76\u4e0d\u4f1a\u5bf9\u7535\u8def\u7684\u529f\u80fd\u9020\u6210\u5f71\u54cd\u3002\u7531\u4e8e\u6d41\u6c34\u7ebf\u65f6\u949f\u9891\u7387\u53d6\u51b3\u4e8e\u6700\u957f\u9636\u6bb5\uff0c\u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u9636\u6bb5\u8d8a\u5e73\u5747\uff0cCPU\u7684\u6574\u4f53\u5229\u7528\u7387\u8d8a\u9ad8\uff0c\u6027\u80fd\u8d8a\u9ad8\u3002 \u6309\u7a7a\u95f4\u5212\u5206 \u3002\u7a7a\u95f4\u4e0a\u8fdc\u79bb\u7684\u7ec4\u4ef6\u5e94\u8be5\u5c3d\u53ef\u80fd\u5c5e\u4e8e\u4e0d\u540c\u7684\u6d41\u6c34\u7ea7\uff0c\u4f7f\u7528\u5bc4\u5b58\u5668\u9694\u65ad\u5f80\u8fd4\u7684\u957f\u8ddd\u79bb\u901a\u4fe1\u5e26\u6765\u7684\u65f6\u95f4\u5f00\u9500\u3002\u5728FPGA\u677f\u4e0a\uff0c\u7531\u4e8e\u5404\u7c7b\u786c\u4ef6\u8d44\u6e90\u5df2\u7ecf\u56fa\u5b9a\u800c\u65e0\u6cd5\u4efb\u610f\u632a\u52a8\uff0c\u6309\u7a7a\u95f4\u5212\u5206\u663e\u5f97\u66f4\u4e3a\u91cd\u8981\u3002 \u6839\u636e\u7ecf\u9a8c\u51c6\u5219\uff0c\u6211\u4eec\u53ef\u4ee5\u6784\u9020\u6700\u57fa\u7840\u76845\u6bb5\u6d41\u6c34\u7ebf\u8bbe\u8ba1\uff08\u53d6\u6307\u3001\u8bd1\u7801\u3001\u6267\u884c\u3001\u8bbf\u5b58\u3001\u5199\u56de\uff09\uff0c\u5728\u6b64\u57fa\u7840\u4e0a\uff0c\u6211\u4eec\u53ef\u4ee5\u6839\u636e\u5b9e\u9645\u5e03\u7ebf\u4e2d\u89c2\u5bdf\u5230\u7684\u65f6\u95f4\u5f00\u9500\u6709\u9488\u5bf9\u6027\u5730\u8fdb\u884c\u4f18\u5316\u3002 4. \u5b9e\u9a8c\u6b65\u9aa4\u4e0e\u8981\u6c42 4.1 \u5b9e\u9a8c\u8981\u6c42 \u5728\u672c\u6b21\u5b9e\u9a8c\u4e2d\uff0c\u4ec5\u8981\u6c42\u5b9e\u73b0 addi \u548cnop\u6307\u4ee4\uff0c\u80fd\u6b63\u5e38\u8fd0\u884c\u7ed9\u51fa\u7684\u6d4b\u8bd5\u7a0b\u5e8f\uff0c\u4eff\u771f\u7ed3\u679c\u6b63\u786e\u3002\u672c\u5b9e\u9a8c\u63d0\u4f9b\u53c2\u8003\u8bbe\u8ba1\u56fe\uff08\u63a7\u5236\u4fe1\u53f7\u53ca\u5176\u4ed6\u5fc5\u8981\u7684\u6a21\u5757\u63a5\u53e3\u9700\u81ea\u5df1\u8bbe\u8ba1\u6dfb\u52a0\uff0c\u8be5\u8bbe\u8ba1\u56fe\u4ec5\u8d77\u63d0\u793a\u6a21\u5757\u903b\u8f91\u5173\u8054\u7684\u4f5c\u7528\uff09\uff0c\u89c1\u56fe1\u3002\u9f13\u52b1\u81ea\u4e3b\u8bbe\u8ba1CPU\u7ed3\u6784\uff0c\u4f46\u8bf7\u7ed9\u51fa\u5982\u6b64\u8bbe\u8ba1\u7684\u7406\u7531\u3002 \u672c\u6b21\u5b9e\u9a8c\u7684\u4e3b\u8981\u76ee\u7684\u5728\u4e8e\u5efa\u7acb\u8d77\u5927\u5bb6\u5bf9\u4e8e\u6d41\u6c34\u7ebf\u7684\u6982\u5ff5\uff0c\u540e\u671f\u5c06\u5728\u6b64\u57fa\u7840\u4e0a\u5bf9CPU\u7684\u529f\u80fd\u8fdb\u884c\u6269\u5c55\uff0c\u6709\u4f59\u529b\u7684\u540c\u5b66\u53ef\u63d0\u524d\u5b8c\u6210 ALU\u548c\u8bd1\u7801\u5668 \u529f\u80fd\u7684\u6269\u5c55\uff08\u53c2\u8003RV32I\u6307\u4ee4\u96c6\uff09\u3002 \u4e3a\u4fbf\u4e8e\u540e\u7eed\u5b9e\u9a8c\u5f53\u4e2d\u5bf9\u7ed3\u6784\u7684\u4fee\u6539\uff0c\u8bf7\u5c3d\u53ef\u80fd\u5bf9\u5404\u529f\u80fd\u6a21\u5757\u505a\u597d\u5c01\u88c5\uff0c\u5e76\u8bbe\u8ba1\u597d\u5408\u9002\u7684\u63a5\u53e3\uff08\u5305\u62ec\u8c03\u8bd5\u63a5\u53e3\uff09\uff0c\u4f46\u662f\u8bf7\u4e0d\u8981\u5c01\u88c5\u6d41\u6c34\u7ea7\uff08\u4f8b\u5982Module IF, ID, EX\uff09\uff0c\u56e0\u4e3a\u5728\u540e\u7eed\u4f18\u5316\u4e2d\u53ef\u80fd\u4f1a\u7ecf\u5386\u6d41\u6c34\u7ea7\u7684\u62c6\u5206\u548c\u91cd\u7ec4\u3002 \u56fe1\uff1a\u6d41\u6c34\u7ebf CPU \u8bbe\u8ba1\u7b80\u56fe \u8bf7\u6ce8\u610f \uff0c\u6211\u4eec\u4f1a\u4fdd\u8bc1\u672c\u6b21\u5b9e\u9a8c\u7684\u6d4b\u8bd5\u7a0b\u5e8f\u4e0d\u5b58\u5728\u52a0\u6cd5\u6307\u4ee4\u7684\u6570\u636e\u7ade\u4e89\uff0c\u540c\u5b66\u4eec\u65e0\u9700\u8003\u8651\u7ade\u4e89\u76f8\u5173\u7684\u8bbe\u8ba1\u95ee\u9898\u3002 \u672c\u6b21\u5b9e\u9a8c\u7684\u6d4b\u8bd5\u6587\u4ef6\u4f4d\u4e8e gitee \u3002 4.2 \u5b9e\u9a8c\u6b65\u9aa4 \u4f7f\u7528\u5f00\u53d1\u5de5\u5177\u5efa\u7acb\u5de5\u7a0b\uff0c\u63a8\u8350\u5728 Vivado 2019.2 \u4ee5\u4e0a\u7248\u672c\u5b8c\u6210\u3002 \u6839\u636e\u53c2\u8003\u8bbe\u8ba1\u56fe\u6216\u81ea\u5df1\u8bbe\u8ba1\u7684\u8bbe\u8ba1\u56fe\u642d\u5efa\u5b8c\u6574\u7684\u6d41\u6c34\u7ebf\u52a0\u6cd5\u673a,\u7ee7\u7eed\u4f7f\u7528 Nexys7 \u5bf9\u5e94\u7684\u5916\u8bbe\u8fdb\u884c\u5b9e\u9a8c\uff0c\u5b9e\u73b0lab1\u7684\u6d41\u6c34\u52a0\u6cd5\u673a\u66ff\u6362lab0\u4e2d\u7684CPU\u6a21\u5757\u3002\u8bf7\u6ce8\u610fMemory \u5fc5\u987b\u4f7f\u7528Vivado\u63d0\u4f9b\u7684Block RAM IP\u6838 \u5b8c\u6210\uff0c\u4ee5\u514dLUT\u8d44\u6e90\u4e0d\u591f\u652f\u6301CPU\u8bbe\u8ba1\u3002 \u5728\u672c\u5b9e\u9a8c\u4e2d\u4e0d\u8981\u6c42\u5bf9\u6570\u636e\u901a\u8def\u8fdb\u884c\u4e13\u95e8\u7684\u5c01\u88c5\uff0c\u63a8\u8350\u76f4\u63a5\u5c06Control Unit (Decoder) \u89c6\u4e3a\u8bd1\u7801\u6a21\u5757\u653e\u5728 ID \u6bb5\u4e2d\u3002 \u8fdb\u884c\u4eff\u771f\u6d4b\u8bd5\uff0c\u4ee5\u68c0\u9a8c CPU \u57fa\u672c\u529f\u80fd\u3002 \u8c03\u6574\u65f6\u949f\u9891\u7387\uff0c\u786e\u4fdd\u65f6\u949f\u5468\u671f\u957f\u5ea6\u4e0d\u5c0f\u4e8e\u6700\u957f\u6d41\u6c34\u6bb5\u7684\u4fe1\u53f7\u5ef6\u8fdf\u3002 \u8fdb\u884c\u4e0a\u677f\u6d4b\u8bd5\uff0c\u4ee5\u68c0\u9a8c CPU \u8bbe\u8ba1\u89c4\u8303\uff0c\u4e0a\u677f\u6d4b\u8bd5\u8c03\u8bd5\u5de5\u5177\u76f8\u5173\u5185\u5bb9\u8bf7\u53c2\u8003lab0\u3002 5. \u601d\u8003\u9898 \u5bf9\u4e8e part1 (2-14\u884c)\uff0c\u8bf7\u8ba1\u7b97\u4f60\u7684 CPU \u7684 CPI\uff0c\u518d\u7528 lab0 \u7684\u5355\u5468\u671f CPU \u8fd0\u884c part1\uff0c\u5bf9\u6bd4\u4e8c\u8005\u7684 CPI\u3002 \u5bf9\u4e8e part2 (24-39\u884c)\uff0c\u8bf7\u8ba1\u7b97\u4f60\u7684 CPU \u7684 CPI\uff08\u5047\u8bbe nop \u4e0d\u8ba1\u5165\u6307\u4ee4\u6761\u6570\uff09\uff0c\u518d\u7528 lab0 \u7684\u5355\u5468\u671f CPU \u8fd0\u884c part2\uff0c\u5bf9\u6bd4\u4e8c\u8005\u7684 CPI\u3002\u8bd5\u89e3\u91ca\u4e3a\u4f55\u9700\u8981\u6dfb\u52a0 nop \u6307\u4ee4\uff08\u63d0\u793a\uff1a\u5982\u679c\u4e0d\u6dfb\u52a0\uff0c\u4f1a\u5bfc\u81f4\u4ec0\u4e48\u95ee\u9898\uff1f\uff09\u3002","title":"\u7b2c\u4e00\u90e8\u5206"},{"location":"lab1-1/#1-1","text":"","title":"\u5b9e\u9a8c1-1: \u6d41\u6c34\u52a0\u6cd5\u673a"},{"location":"lab1-1/#1","text":"\u7406\u89e3\u6d41\u6c34\u7ebf\u7684\u57fa\u672c\u6982\u5ff5\u4e0e\u601d\u60f3 \u57fa\u4e8e\u5728\u5355\u5468\u671fCPU\u4e2d\u5df2\u7ecf\u5b9e\u73b0\u7684\u6a21\u5757\uff0c\u5b9e\u73b05\u7ea7\u6d41\u6c34\u7ebf\u6846\u67b6 \u7406\u89e3\u6d41\u6c34\u7ebf\u8bbe\u8ba1\u5728\u63d0\u9ad8CPU\u7684\u541e\u5410\u7387\uff0c\u63d0\u5347\u6574\u4f53\u6027\u80fd\u4e0a\u7684\u4f5c\u7528\u4e0e\u4f18\u8d8a\u6027","title":"1. \u5b9e\u9a8c\u76ee\u7684"},{"location":"lab1-1/#2","text":"HDL \uff1aVerilog IDE \uff1aVivado \u5f00\u53d1\u677f \uff1aNexys A7 \u63d0\u4f9b\u6d4b\u8bd5\u7a0b\u5e8f\u548c\u6d4b\u8bd5\u6846\u67b6","title":"2. \u5b9e\u9a8c\u73af\u5883"},{"location":"lab1-1/#3","text":"","title":"3. \u5b9e\u9a8c\u539f\u7406"},{"location":"lab1-1/#31-cpu","text":"\u5173\u4e8e\u6d41\u6c34\u7ebf\u7684\u57fa\u672c\u8bbe\u8ba1\u601d\u60f3\u5df2\u7ecf\u5728\u8ba1\u7b97\u673a\u4f53\u7cfb\u7ed3\u6784\u8bfe\u7a0b\u7684\u7406\u8bba\u90e8\u5206\u4e2d\u63d0\u53ca\uff0c\u8fd9\u91cc\u4e0d\u518d\u8d58\u8ff0\u3002\u4f46\u5b9e\u9645\u843d\u5b9e\u5230\u7535\u8def\u8bbe\u8ba1\uff0c\u4e0e\u6b64\u524d\u8ba1\u7b97\u673a\u7ec4\u6210\u4e2d\u8bbe\u8ba1\u7684\u5355\u5468\u671fCPU\u76f8\u6bd4\u8fd8\u662f\u6709\u5f88\u591a\u4e0d\u540c\u4e4b\u5904\u3002 \u5728\u540c\u4e00\u65f6\u523b\u4e0b\uff0c\u6d41\u6c34\u7ebf\u7684\u4e94\u4e2a\u6d41\u6c34\u7ea7\u8fd0\u884c\u7684\u6307\u4ee4\u5b9e\u9645\u5404\u4e0d\u76f8\u540c\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u4e00\u822c\u5c06\u4e00\u6761\u6307\u4ee4\u6240\u9700\u7684\u63a7\u5236\u4fe1\u53f7\u4e00\u8d77\u5b58\u5728\u6d41\u6c34\u6bb5\u95f4\u5bc4\u5b58\u5668\u4e2d\uff0c\u968f\u6307\u4ee4\u5176\u4ed6\u4fe1\u606f\u4e00\u8d77\u987a\u7740\u6d41\u6c34\u7ebf\u4f20\u9012\uff0c\u8fd9\u91cc\u7684\u6bb5\u95f4\u5bc4\u5b58\u5668\u662f\u6307\uff1aIF/ID\u5bc4\u5b58\u5668\u3001ID/EX\u5bc4\u5b58\u5668\u3001EX/MEM\u5bc4\u5b58\u5668\u3001MEM/WB\u5bc4\u5b58\u5668\u8fd9\u56db\u4e2a\u7528\u4e8e\u6d41\u6c34\u6bb5\u95f4\u4f20\u9012\u6307\u4ee4\u4fe1\u606f\u7684\u5bc4\u5b58\u5668\u7ec4\u3002\u4f8b\u5982add\u6307\u4ee4\uff0c\u5728ID\u9636\u6bb5\u5bf9\u6307\u4ee4\u89e3\u7801\uff0c\u5f97\u5230\u6240\u4f7f\u7528\u7684\u5bc4\u5b58\u5668rd, rs, rt\u9700\u8981\u7b49\u5f85\u5230WB\u9636\u6bb5\u5199\u56de\uff0c\u5c31\u9700\u8981\u7531\u6bb5\u95f4\u5bc4\u5b58\u5668\u5b58\u50a8rd, rs, rt\u7684\u503c\uff0c\u4e00\u7ea7\u4e00\u7ea7\u5730\u4f20\u9012\u5230WB\u9636\u6bb5\u3002 \u539f\u5219\u4e0a\u6bcf\u4e00\u62cd\u8fc7\u540e\uff0c\u6d41\u6c34\u7ebf\u90fd\u4f1a\u5411\u524d\u6d41\u52a8\u4e00\u6bb5\u3002\u7b2cx\u62cdIF\u6bb5\u5185\u53d6\u51fa\u6307\u4ee4\uff0c\u7b2cx+1\u62cd\u8be5\u6307\u4ee4\u6d41\u5165ID\u6bb5\u8fdb\u884c\u8bd1\u7801\uff0c\u4f8b\u5982\u8bd1\u7801\u5f97\u5230\u7684\u662flw\u6307\u4ee4\uff0c\u90a3\u4e48\u7b2cx+2\u62cd\u6d41\u5165EX\u6bb5\u5185\u6307\u4ee4lw\u5b8c\u6210\u5730\u5740\u8ba1\u7b97\uff0c\u7b2cx+3\u62cdlw\u6d41\u5165MEM\u6bb5\u5b8c\u6210\u8bbf\u5b58\u7684\u8bfb\u53d6\uff0c\u7b2cx+4\u62cd\u6d41\u5165WB\u9636\u6bb5\u5c06\u8bbf\u5b58\u4e2d\u7684\u503c\u5199\u56de\u5bc4\u5b58\u5668\u3002\u4e00\u822c\u800c\u8a00\u6bb5\u5185\u4efb\u52a1\u9700\u8981\u5f53\u62cd\u5b8c\u6210\uff0c\u56e0\u4e3a\u5728\u4e0b\u4e00\u62cd\u65f6\uff0c\u6bb5\u5185\u7684\u4fe1\u53f7\u5c31\u4f1a\u53d8\u4e3a\u4e0b\u4e00\u6761\u6d41\u5165\u6307\u4ee4\u9700\u8981\u7684\u4fe1\u53f7\uff0c\u5728\u4f7f\u7528\u6bb5\u95f4\u5bc4\u5b58\u5668\u4ee5\u5916\u7684\u5bc4\u5b58\u5668\u65f6\uff0c\u52a1\u5fc5\u8981\u6ce8\u610f\u53ef\u80fd\u4ea7\u751f\u7684\u65f6\u5e8f\u95ee\u9898\u3002 \u5176\u4ed6\u5173\u4e8e\u5355\u5468\u671f\u3001\u6d41\u6c34\u7ebfCPU\u7684\u7279\u70b9\u5bf9\u6bd4\u5982\u88681\u6240\u793a\uff0c\u8bf7\u5728\u8ba4\u771f\u7406\u89e3\u4e09\u8005\u7684\u533a\u522b\u4e4b\u540e\u518d\u8fdb\u884c\u5b9e\u9a8c\u3002 Single-cycle Pipeline \u6a21\u5757\u590d\u7528 \u7ed3\u6784\u51b2\u7a81 \u7ed3\u6784\u51b2\u7a81 \u8857\u6bb5\u5bc4\u5b58\u5668 \u65e0 \u6709 \u72b6\u6001\u673a \u65e0 \u65e0 \u65f6\u949f\u9891\u7387 \u53d6\u51b3\u4e8e\u6700\u957f\u6307\u4ee4 \u53d6\u51b3\u4e8e\u6700\u957f\u9636\u6bb5 CPI 1 1\uff08\u6781\u9650\u503c\uff09 \u88681\uff1a2\u79cd CPU \u8bbe\u8ba1\u5bf9\u6bd4","title":"3.1 \u6d41\u6c34\u7ebf\u4e0e\u5355\u5468\u671fCPU\u8bbe\u8ba1\u5bf9\u6bd4"},{"location":"lab1-1/#32","text":"\u6d41\u6c34\u7ea7\u5212\u5206\u7684\u4e00\u822c\u7ecf\u9a8c\u51c6\u5219\uff1a \u6309\u529f\u80fd\u5212\u5206 \u3002\u4e0d\u540c\u7684\u529f\u80fd\u6700\u597d\u5c5e\u4e8e\u4e0d\u540c\u7684\u6d41\u6c34\u7ea7\uff0c\u56e0\u4e3a\u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u5355\u4e2a\u6d41\u6c34\u7ea7\u529f\u80fd\u8d8a\u5c11\uff0c\u7ec4\u5408\u903b\u8f91\u8d8a\u7b80\u5355\uff0c\u5ef6\u8fdf\u8d8a\u4f4e\uff0c\u65f6\u949f\u9891\u7387\u8d8a\u9ad8\u3002 \u6309\u65f6\u95f4\u5212\u5206 \u3002\u5728\u6709\u4e9b\u7ec4\u4ef6\u4e2d\uff08\u4f8b\u5982\u8bd1\u7801\u5668\uff09\uff0c\u53ef\u80fd\u4f1a\u51fa\u73b0\u8f83\u957f\u8fde\u7eed\u7684\u7ec4\u5408\u7535\u8def\uff1b\u5b83\u4eec\u5f80\u5f80\u4f1a\u6210\u4e3a\u7cfb\u7edf\u6027\u80fd\u7684\u74f6\u9888\uff0c\u4f46\u62c6\u5206\u7ec4\u5408\u7535\u8def\u3001\u5728\u4e2d\u95f4\u63d2\u5165\u9636\u6bb5\u5bc4\u5b58\u5668\uff0c\u5e76\u4e0d\u4f1a\u5bf9\u7535\u8def\u7684\u529f\u80fd\u9020\u6210\u5f71\u54cd\u3002\u7531\u4e8e\u6d41\u6c34\u7ebf\u65f6\u949f\u9891\u7387\u53d6\u51b3\u4e8e\u6700\u957f\u9636\u6bb5\uff0c\u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u9636\u6bb5\u8d8a\u5e73\u5747\uff0cCPU\u7684\u6574\u4f53\u5229\u7528\u7387\u8d8a\u9ad8\uff0c\u6027\u80fd\u8d8a\u9ad8\u3002 \u6309\u7a7a\u95f4\u5212\u5206 \u3002\u7a7a\u95f4\u4e0a\u8fdc\u79bb\u7684\u7ec4\u4ef6\u5e94\u8be5\u5c3d\u53ef\u80fd\u5c5e\u4e8e\u4e0d\u540c\u7684\u6d41\u6c34\u7ea7\uff0c\u4f7f\u7528\u5bc4\u5b58\u5668\u9694\u65ad\u5f80\u8fd4\u7684\u957f\u8ddd\u79bb\u901a\u4fe1\u5e26\u6765\u7684\u65f6\u95f4\u5f00\u9500\u3002\u5728FPGA\u677f\u4e0a\uff0c\u7531\u4e8e\u5404\u7c7b\u786c\u4ef6\u8d44\u6e90\u5df2\u7ecf\u56fa\u5b9a\u800c\u65e0\u6cd5\u4efb\u610f\u632a\u52a8\uff0c\u6309\u7a7a\u95f4\u5212\u5206\u663e\u5f97\u66f4\u4e3a\u91cd\u8981\u3002 \u6839\u636e\u7ecf\u9a8c\u51c6\u5219\uff0c\u6211\u4eec\u53ef\u4ee5\u6784\u9020\u6700\u57fa\u7840\u76845\u6bb5\u6d41\u6c34\u7ebf\u8bbe\u8ba1\uff08\u53d6\u6307\u3001\u8bd1\u7801\u3001\u6267\u884c\u3001\u8bbf\u5b58\u3001\u5199\u56de\uff09\uff0c\u5728\u6b64\u57fa\u7840\u4e0a\uff0c\u6211\u4eec\u53ef\u4ee5\u6839\u636e\u5b9e\u9645\u5e03\u7ebf\u4e2d\u89c2\u5bdf\u5230\u7684\u65f6\u95f4\u5f00\u9500\u6709\u9488\u5bf9\u6027\u5730\u8fdb\u884c\u4f18\u5316\u3002","title":"3.2 \u6d41\u6c34\u7ea7\u5212\u5206"},{"location":"lab1-1/#4","text":"","title":"4. \u5b9e\u9a8c\u6b65\u9aa4\u4e0e\u8981\u6c42"},{"location":"lab1-1/#41","text":"\u5728\u672c\u6b21\u5b9e\u9a8c\u4e2d\uff0c\u4ec5\u8981\u6c42\u5b9e\u73b0 addi \u548cnop\u6307\u4ee4\uff0c\u80fd\u6b63\u5e38\u8fd0\u884c\u7ed9\u51fa\u7684\u6d4b\u8bd5\u7a0b\u5e8f\uff0c\u4eff\u771f\u7ed3\u679c\u6b63\u786e\u3002\u672c\u5b9e\u9a8c\u63d0\u4f9b\u53c2\u8003\u8bbe\u8ba1\u56fe\uff08\u63a7\u5236\u4fe1\u53f7\u53ca\u5176\u4ed6\u5fc5\u8981\u7684\u6a21\u5757\u63a5\u53e3\u9700\u81ea\u5df1\u8bbe\u8ba1\u6dfb\u52a0\uff0c\u8be5\u8bbe\u8ba1\u56fe\u4ec5\u8d77\u63d0\u793a\u6a21\u5757\u903b\u8f91\u5173\u8054\u7684\u4f5c\u7528\uff09\uff0c\u89c1\u56fe1\u3002\u9f13\u52b1\u81ea\u4e3b\u8bbe\u8ba1CPU\u7ed3\u6784\uff0c\u4f46\u8bf7\u7ed9\u51fa\u5982\u6b64\u8bbe\u8ba1\u7684\u7406\u7531\u3002 \u672c\u6b21\u5b9e\u9a8c\u7684\u4e3b\u8981\u76ee\u7684\u5728\u4e8e\u5efa\u7acb\u8d77\u5927\u5bb6\u5bf9\u4e8e\u6d41\u6c34\u7ebf\u7684\u6982\u5ff5\uff0c\u540e\u671f\u5c06\u5728\u6b64\u57fa\u7840\u4e0a\u5bf9CPU\u7684\u529f\u80fd\u8fdb\u884c\u6269\u5c55\uff0c\u6709\u4f59\u529b\u7684\u540c\u5b66\u53ef\u63d0\u524d\u5b8c\u6210 ALU\u548c\u8bd1\u7801\u5668 \u529f\u80fd\u7684\u6269\u5c55\uff08\u53c2\u8003RV32I\u6307\u4ee4\u96c6\uff09\u3002 \u4e3a\u4fbf\u4e8e\u540e\u7eed\u5b9e\u9a8c\u5f53\u4e2d\u5bf9\u7ed3\u6784\u7684\u4fee\u6539\uff0c\u8bf7\u5c3d\u53ef\u80fd\u5bf9\u5404\u529f\u80fd\u6a21\u5757\u505a\u597d\u5c01\u88c5\uff0c\u5e76\u8bbe\u8ba1\u597d\u5408\u9002\u7684\u63a5\u53e3\uff08\u5305\u62ec\u8c03\u8bd5\u63a5\u53e3\uff09\uff0c\u4f46\u662f\u8bf7\u4e0d\u8981\u5c01\u88c5\u6d41\u6c34\u7ea7\uff08\u4f8b\u5982Module IF, ID, EX\uff09\uff0c\u56e0\u4e3a\u5728\u540e\u7eed\u4f18\u5316\u4e2d\u53ef\u80fd\u4f1a\u7ecf\u5386\u6d41\u6c34\u7ea7\u7684\u62c6\u5206\u548c\u91cd\u7ec4\u3002 \u56fe1\uff1a\u6d41\u6c34\u7ebf CPU \u8bbe\u8ba1\u7b80\u56fe \u8bf7\u6ce8\u610f \uff0c\u6211\u4eec\u4f1a\u4fdd\u8bc1\u672c\u6b21\u5b9e\u9a8c\u7684\u6d4b\u8bd5\u7a0b\u5e8f\u4e0d\u5b58\u5728\u52a0\u6cd5\u6307\u4ee4\u7684\u6570\u636e\u7ade\u4e89\uff0c\u540c\u5b66\u4eec\u65e0\u9700\u8003\u8651\u7ade\u4e89\u76f8\u5173\u7684\u8bbe\u8ba1\u95ee\u9898\u3002 \u672c\u6b21\u5b9e\u9a8c\u7684\u6d4b\u8bd5\u6587\u4ef6\u4f4d\u4e8e gitee \u3002","title":"4.1 \u5b9e\u9a8c\u8981\u6c42"},{"location":"lab1-1/#42","text":"\u4f7f\u7528\u5f00\u53d1\u5de5\u5177\u5efa\u7acb\u5de5\u7a0b\uff0c\u63a8\u8350\u5728 Vivado 2019.2 \u4ee5\u4e0a\u7248\u672c\u5b8c\u6210\u3002 \u6839\u636e\u53c2\u8003\u8bbe\u8ba1\u56fe\u6216\u81ea\u5df1\u8bbe\u8ba1\u7684\u8bbe\u8ba1\u56fe\u642d\u5efa\u5b8c\u6574\u7684\u6d41\u6c34\u7ebf\u52a0\u6cd5\u673a,\u7ee7\u7eed\u4f7f\u7528 Nexys7 \u5bf9\u5e94\u7684\u5916\u8bbe\u8fdb\u884c\u5b9e\u9a8c\uff0c\u5b9e\u73b0lab1\u7684\u6d41\u6c34\u52a0\u6cd5\u673a\u66ff\u6362lab0\u4e2d\u7684CPU\u6a21\u5757\u3002\u8bf7\u6ce8\u610fMemory \u5fc5\u987b\u4f7f\u7528Vivado\u63d0\u4f9b\u7684Block RAM IP\u6838 \u5b8c\u6210\uff0c\u4ee5\u514dLUT\u8d44\u6e90\u4e0d\u591f\u652f\u6301CPU\u8bbe\u8ba1\u3002 \u5728\u672c\u5b9e\u9a8c\u4e2d\u4e0d\u8981\u6c42\u5bf9\u6570\u636e\u901a\u8def\u8fdb\u884c\u4e13\u95e8\u7684\u5c01\u88c5\uff0c\u63a8\u8350\u76f4\u63a5\u5c06Control Unit (Decoder) \u89c6\u4e3a\u8bd1\u7801\u6a21\u5757\u653e\u5728 ID \u6bb5\u4e2d\u3002 \u8fdb\u884c\u4eff\u771f\u6d4b\u8bd5\uff0c\u4ee5\u68c0\u9a8c CPU \u57fa\u672c\u529f\u80fd\u3002 \u8c03\u6574\u65f6\u949f\u9891\u7387\uff0c\u786e\u4fdd\u65f6\u949f\u5468\u671f\u957f\u5ea6\u4e0d\u5c0f\u4e8e\u6700\u957f\u6d41\u6c34\u6bb5\u7684\u4fe1\u53f7\u5ef6\u8fdf\u3002 \u8fdb\u884c\u4e0a\u677f\u6d4b\u8bd5\uff0c\u4ee5\u68c0\u9a8c CPU \u8bbe\u8ba1\u89c4\u8303\uff0c\u4e0a\u677f\u6d4b\u8bd5\u8c03\u8bd5\u5de5\u5177\u76f8\u5173\u5185\u5bb9\u8bf7\u53c2\u8003lab0\u3002","title":"4.2 \u5b9e\u9a8c\u6b65\u9aa4"},{"location":"lab1-1/#5","text":"\u5bf9\u4e8e part1 (2-14\u884c)\uff0c\u8bf7\u8ba1\u7b97\u4f60\u7684 CPU \u7684 CPI\uff0c\u518d\u7528 lab0 \u7684\u5355\u5468\u671f CPU \u8fd0\u884c part1\uff0c\u5bf9\u6bd4\u4e8c\u8005\u7684 CPI\u3002 \u5bf9\u4e8e part2 (24-39\u884c)\uff0c\u8bf7\u8ba1\u7b97\u4f60\u7684 CPU \u7684 CPI\uff08\u5047\u8bbe nop \u4e0d\u8ba1\u5165\u6307\u4ee4\u6761\u6570\uff09\uff0c\u518d\u7528 lab0 \u7684\u5355\u5468\u671f CPU \u8fd0\u884c part2\uff0c\u5bf9\u6bd4\u4e8c\u8005\u7684 CPI\u3002\u8bd5\u89e3\u91ca\u4e3a\u4f55\u9700\u8981\u6dfb\u52a0 nop \u6307\u4ee4\uff08\u63d0\u793a\uff1a\u5982\u679c\u4e0d\u6dfb\u52a0\uff0c\u4f1a\u5bfc\u81f4\u4ec0\u4e48\u95ee\u9898\uff1f\uff09\u3002","title":"5. \u601d\u8003\u9898"},{"location":"lab1-2/","text":"\u5b9e\u9a8c1-2: \u6307\u4ee4\u6269\u5c55 1. \u5b9e\u9a8c\u76ee\u7684 \u6269\u5c55\u6307\u4ee4\uff0c\u7406\u89e3\u4e0d\u540c\u7c7b\u578b\u6307\u4ee4\u5728\u6d41\u6c34\u7ebf\u4e2d\u7684\u8fd0\u4f5c\u5dee\u5f02 \u5b9e\u73b0\u529f\u80fd\u57fa\u672c\u5b8c\u5584\u7684\u6d41\u6c34\u7ebf CPU 2. \u5b9e\u9a8c\u73af\u5883 HDL \uff1aVerilog IDE \uff1aVivado \u5f00\u53d1\u677f \uff1aNexys A7 3. \u5b9e\u9a8c\u8981\u6c42\u548c\u6b65\u9aa4 3.1 \u5b9e\u9a8c\u8981\u6c42 \u5728\u6d41\u6c34\u7ebf CPU \u4e2d\u52a0\u5165\u4ee5\u4e0b\u7684 RV32I \u6307\u4ee4\uff1a lui jal, jalr beq, bne lw, sw addi, slti, xori, ori, andi, srli, srai add, sub, sll, slt, sra, or, xor, and RISC-V \u76f8\u5173\u7684\u6307\u4ee4\u53ef\u4ee5\u5728 \u5b98\u7f51 \u4e0a\u627e\u5230\u76f8\u5e94\u7684\u7f16\u7801\u4fe1\u606f\u548c\u4ecb\u7ecd\u3002\u5b9e\u73b0\u4e0a\u8ff0\u7684 RV32I \u6307\u4ee4\u4e5f\u9700\u8981\u540c\u5b66\u4eec\u5bf9 RISC-V \u7684\u6307\u4ee4\u7f16\u7801\u6709\u6df1\u523b\u7684\u8ba4\u8bc6\uff0c\u6709\u4f59\u529b\u7684\u540c\u5b66\u53ef\u4ee5\u81ea\u4e3b\u5b9e\u73b0\u5176\u4ed6\u4e0d\u505a\u8981\u6c42\u7684 RV32I \u6307\u4ee4\u3002 \u8bf7\u6ce8\u610f \uff0c\u6211\u4eec\u4f1a\u4fdd\u8bc1\u672c\u6b21\u5b9e\u9a8c\u7684\u6d4b\u8bd5\u7a0b\u5e8f\u4e0d\u5b58\u5728\u6570\u636e\u7ade\u4e89\uff0c\u540c\u5b66\u4eec\u65e0\u9700\u8003\u8651\u76f8\u5173\u7684\u8bbe\u8ba1\u95ee\u9898\u3002 3.2 \u5b9e\u9a8c\u6b65\u9aa4 \u4f7f\u7528\u5f00\u53d1\u5de5\u5177\u5efa\u7acb\u5de5\u7a0b\u3002 \u6839\u636e\u4e66\u4e0a\u7684 DataPath \u6216\u81ea\u5df1\u8bbe\u8ba1\u7684 DataPath \u642d\u5efa\u5b8c\u6574\u7684\u6d41\u6c34\u7ebf CPU\u3002 \u8fdb\u884c\u4eff\u771f\u6d4b\u8bd5\uff0c\u4ee5\u68c0\u9a8c CPU \u57fa\u672c\u529f\u80fd\u3002 \u8fdb\u884c\u4e0a\u677f\u6d4b\u8bd5\uff0c\u4ee5\u68c0\u9a8c CPU \u8bbe\u8ba1\u89c4\u8303\u3002 4. \u601d\u8003\u9898 \u5728\u4f60\u7684\u8bbe\u8ba1\u4e2d\uff0c\u672c\u5b9e\u9a8c\u6d4b\u8bd5\u6587\u4ef6\u4e2d\u7684 nop \u6570\u91cf\u662f\u5426\u591a\u4e8e\u6bcf\u6761\u6307\u4ee4\u6240\u9700\u7684\u5ef6\u8fdf\u5468\u671f\u6570\uff1f \u53c8\u662f\u5426\u5b58\u5728\u51fa\u73b0\u51b2\u7a81\u4f46\u662f\u6ca1\u6709\u7ed9\u8db3 nop \u7684\u60c5\u51b5\uff1f \u8bf7\u8ba1\u7b97\u6bcf\u6761\u6307\u4ee4\u95f4\u5b9e\u9645\u6240\u9700\u8981\u7684 nop \u6570\u91cf\uff0c\u5e76\u5bf9\u4f60\u7684 coe \u6587\u4ef6\u8fdb\u884c\u4fee\u6539\uff0c\u4f7f\u4e4b\u6b63\u786e\u5730\u8fd0\u884c\u51fa\u76f8\u5e94\u7684\u7ed3\u679c\u3002","title":"\u7b2c\u4e8c\u90e8\u5206"},{"location":"lab1-2/#1-2","text":"","title":"\u5b9e\u9a8c1-2: \u6307\u4ee4\u6269\u5c55"},{"location":"lab1-2/#1","text":"\u6269\u5c55\u6307\u4ee4\uff0c\u7406\u89e3\u4e0d\u540c\u7c7b\u578b\u6307\u4ee4\u5728\u6d41\u6c34\u7ebf\u4e2d\u7684\u8fd0\u4f5c\u5dee\u5f02 \u5b9e\u73b0\u529f\u80fd\u57fa\u672c\u5b8c\u5584\u7684\u6d41\u6c34\u7ebf CPU","title":"1. \u5b9e\u9a8c\u76ee\u7684"},{"location":"lab1-2/#2","text":"HDL \uff1aVerilog IDE \uff1aVivado \u5f00\u53d1\u677f \uff1aNexys A7","title":"2. \u5b9e\u9a8c\u73af\u5883"},{"location":"lab1-2/#3","text":"","title":"3. \u5b9e\u9a8c\u8981\u6c42\u548c\u6b65\u9aa4"},{"location":"lab1-2/#31","text":"\u5728\u6d41\u6c34\u7ebf CPU \u4e2d\u52a0\u5165\u4ee5\u4e0b\u7684 RV32I \u6307\u4ee4\uff1a lui jal, jalr beq, bne lw, sw addi, slti, xori, ori, andi, srli, srai add, sub, sll, slt, sra, or, xor, and RISC-V \u76f8\u5173\u7684\u6307\u4ee4\u53ef\u4ee5\u5728 \u5b98\u7f51 \u4e0a\u627e\u5230\u76f8\u5e94\u7684\u7f16\u7801\u4fe1\u606f\u548c\u4ecb\u7ecd\u3002\u5b9e\u73b0\u4e0a\u8ff0\u7684 RV32I \u6307\u4ee4\u4e5f\u9700\u8981\u540c\u5b66\u4eec\u5bf9 RISC-V \u7684\u6307\u4ee4\u7f16\u7801\u6709\u6df1\u523b\u7684\u8ba4\u8bc6\uff0c\u6709\u4f59\u529b\u7684\u540c\u5b66\u53ef\u4ee5\u81ea\u4e3b\u5b9e\u73b0\u5176\u4ed6\u4e0d\u505a\u8981\u6c42\u7684 RV32I \u6307\u4ee4\u3002 \u8bf7\u6ce8\u610f \uff0c\u6211\u4eec\u4f1a\u4fdd\u8bc1\u672c\u6b21\u5b9e\u9a8c\u7684\u6d4b\u8bd5\u7a0b\u5e8f\u4e0d\u5b58\u5728\u6570\u636e\u7ade\u4e89\uff0c\u540c\u5b66\u4eec\u65e0\u9700\u8003\u8651\u76f8\u5173\u7684\u8bbe\u8ba1\u95ee\u9898\u3002","title":"3.1 \u5b9e\u9a8c\u8981\u6c42"},{"location":"lab1-2/#32","text":"\u4f7f\u7528\u5f00\u53d1\u5de5\u5177\u5efa\u7acb\u5de5\u7a0b\u3002 \u6839\u636e\u4e66\u4e0a\u7684 DataPath \u6216\u81ea\u5df1\u8bbe\u8ba1\u7684 DataPath \u642d\u5efa\u5b8c\u6574\u7684\u6d41\u6c34\u7ebf CPU\u3002 \u8fdb\u884c\u4eff\u771f\u6d4b\u8bd5\uff0c\u4ee5\u68c0\u9a8c CPU \u57fa\u672c\u529f\u80fd\u3002 \u8fdb\u884c\u4e0a\u677f\u6d4b\u8bd5\uff0c\u4ee5\u68c0\u9a8c CPU \u8bbe\u8ba1\u89c4\u8303\u3002","title":"3.2 \u5b9e\u9a8c\u6b65\u9aa4"},{"location":"lab1-2/#4","text":"\u5728\u4f60\u7684\u8bbe\u8ba1\u4e2d\uff0c\u672c\u5b9e\u9a8c\u6d4b\u8bd5\u6587\u4ef6\u4e2d\u7684 nop \u6570\u91cf\u662f\u5426\u591a\u4e8e\u6bcf\u6761\u6307\u4ee4\u6240\u9700\u7684\u5ef6\u8fdf\u5468\u671f\u6570\uff1f \u53c8\u662f\u5426\u5b58\u5728\u51fa\u73b0\u51b2\u7a81\u4f46\u662f\u6ca1\u6709\u7ed9\u8db3 nop \u7684\u60c5\u51b5\uff1f \u8bf7\u8ba1\u7b97\u6bcf\u6761\u6307\u4ee4\u95f4\u5b9e\u9645\u6240\u9700\u8981\u7684 nop \u6570\u91cf\uff0c\u5e76\u5bf9\u4f60\u7684 coe \u6587\u4ef6\u8fdb\u884c\u4fee\u6539\uff0c\u4f7f\u4e4b\u6b63\u786e\u5730\u8fd0\u884c\u51fa\u76f8\u5e94\u7684\u7ed3\u679c\u3002","title":"4. \u601d\u8003\u9898"},{"location":"lab2-1/","text":"\u5b9e\u9a8c2-1: \u6682\u505c\u4e0e\u5192\u9669 1. \u5b9e\u9a8c\u76ee\u7684 \u5b8c\u5584\u6d41\u6c34\u7ebf\u7684\u57fa\u672c\u529f\u80fd\uff0c\u5b9e\u73b0\u6d41\u6c34\u7ebf\u6682\u505c\u673a\u5236 \u6df1\u5165\u7406\u89e3\u6d41\u6c34\u7ebf\u5192\u9669\uff0c\u638c\u63e1\u5229\u7528stall \u5904\u7406\u6d41\u6c34\u7ebf\u5192\u9669\uff0c\u4fdd\u8bc1\u6d41\u6c34\u529f\u80fd\u6b63\u786e\u6027\u7684\u57fa\u672c\u6280\u672f \u5c1d\u8bd5\u601d\u8003\u6539\u8fdb\u7684\u65b9\u6848 2. \u5b9e\u9a8c\u73af\u5883 HDL \uff1aVerilog IDE \uff1aVivado \u5f00\u53d1\u677f \uff1aNexys A7 3. \u5b9e\u9a8c\u539f\u7406 3.1 stall \u4ecb\u7ecd \u5728\u6d41\u6c34\u7ebf\u7684\u8fd0\u884c\u8fc7\u7a0b\u4e2d\uff0c\u540c\u4e00\u65f6\u523b\u5185\u4e0d\u540c\u6d41\u6c34\u6bb5\u8fd0\u884c\u7684\u6307\u4ee4\u5404\u4e0d\u76f8\u540c\uff0c\u5982\u679c\u8bf4\u6307\u4ee4\u4e4b\u95f4\u4e0d\u5b58\u5728\u5173\u8054\u6027\u548c\u4f9d\u8d56\u6027\uff0c\u90a3\u4e48\u5373\u4f7f\u662f\u50cf\u6211\u4eec\u5728 lab1-2 \u4e2d\u8bbe\u8ba1\u7684\u7b80\u5355\u6d41\u6c34\u7ebf\u4e5f\u53ef\u4ee5\u4fdd\u8bc1\u9ad8\u6548\u3001\u6301\u7eed\u5730\u8fd0\u884c\u3002\u4f46\u8fd9\u79cd\u60c5\u51b5\u603b\u662f\u7406\u60f3\u7684\uff0c\u5728\u5b9e\u9645\u7684\u8fd0\u884c\u8fc7\u7a0b\u4e2d\uff0c\u6307\u4ee4\u95f4\u7684\u5173\u8054\u6027\u548c\u4f9d\u8d56\u6027\u5f80\u5f80\u65e0\u6cd5\u907f\u514d\uff0c\u4e0b\u56fe\u7ed9\u51fa\u7684\u4fbf\u662f\u4e00\u7ec4\u6570\u636e\u51b2\u7a81\u7684\u6848\u4f8b\u3002 \u5728\u4e0a\u4e00\u6b21\u5b9e\u9a8c\u4e2d\uff0c\u6211\u4eec\u7684\u6d4b\u8bd5\u7528\u4f8b\u7ecf\u8fc7\u8bbe\u8ba1\uff0c\u5728\u76f8\u5173\u8054\u7684\u6307\u4ee4\u95f4\u63d2\u5165 nop \u6307\u4ee4\uff0c\u5728\u5206\u652f\u8df3\u8f6c\u8bed\u53e5\u540e\u63d2\u5165\u989d\u5916\u7684 nop \u6307\u4ee4\uff0c\u907f\u514d\u4e86\u7ade\u4e89\u5192\u9669\u95ee\u9898\u3002\u5728\u5b9e\u9645\u7684\u7cfb\u7edf\u4e2d\uff0c\u8fd9\u76f8\u5f53\u4e8e\u5c06\u6d41\u6c34\u7ebf\u6682\u505c\u7684\u5de5\u4f5c\u4ea4\u7ed9\u7f16\u8bd1\u5668\u53bb\u5904\u7406\uff0c\u4f46\u8fd9\u4e00\u65b9\u9762\u4f1a\u52a0\u91cd\u7f16\u8bd1\u5668\u7684\u8d1f\u62c5\uff0c\u53e6\u4e00\u65b9\u9762\u4e5f\u4e0d\u5229\u4e8e\u5904\u7406\u5668\u7684\u540e\u7eed\u4f18\u5316\u3002 \u672c\u6b21\u5b9e\u9a8c\u9700\u8981\u5728\u5904\u7406\u5668\u4e2d\u5b9e\u73b0 stall \u673a\u5236\uff0c\u5f53\u6d41\u6c34\u7ebf\u68c0\u6d4b\u5230\u6570\u636e\u51b2\u7a81\u6216\u8005\u63a7\u5236\u8df3\u8f6c\u6307\u4ee4\u540e\u901a\u8fc7 stall \u673a\u5236\u5904\u7406\uff0c\u4fdd\u8bc1\u6267\u884c\u7ed3\u679c\u7684\u6b63\u786e\u6027\u3002 3.2 stall \u5b9e\u73b0\u5206\u6790 \u4ee5\u6570\u636e\u51b2\u7a81\u4e3a\u4f8b\u8fdb\u884c\u5206\u6790\uff0c\u5e38\u89c1\u7684\u6570\u636e\u76f8\u5173\u6709 WAW, WAR, RAW \uff0c\u7531\u4e8e\u6211\u4eec\u7684\u6307\u4ee4\u90fd\u662f\u987a\u5e8f\u6267\u884c\u7684\uff0c\u8fd9\u91cc\u53ea\u8003\u8651 RAW \u4e00\u79cd\u60c5\u51b5\u5373\u53ef\u3002\u5f53\u6307\u4ee4\u6d41\u5165 ID \u9636\u6bb5\u65f6\uff0c\u6211\u4eec\u5bf9\u6307\u4ee4\u8fdb\u884c\u8bd1\u7801\uff0c\u6839\u636e\u8bd1\u7801\u7684\u7ed3\u679c\u8bfb\u53d6\u5bf9\u5e94\u5bc4\u5b58\u5668\u7684\u503c\uff0c\u6b64\u65f6\u5982\u679c\u53d1\u73b0\u5f85\u8bfb\u53d6\u7684\u5bc4\u5b58\u5668\u53d1\u751f\u4e86 RAW \u51b2\u7a81\uff0c\u5c31\u8981\u89e6\u53d1 stall \u673a\u5236\u8fdb\u884c\u5904\u7406\u3002 \u6211\u4eec\u4e0d\u59a8\u5047\u8bbe ID \u6bb5\u8981\u8bfb\u53d6\u7684\u5bc4\u5b58\u5668\u8bbe\u4e0e EX \u6bb5\u5c06\u8981\u5199\u5165\u7684\u5bc4\u5b58\u5668\u53d1\u751f\u4e86\u51b2\u7a81\u3002\uff08\u4e0e MEM, WB \u6bb5\u51b2\u7a81\u7684\u60c5\u51b5\u8bf7\u540c\u5b66\u4eec\u81ea\u884c\u8003\u8651\uff09\u90a3\u4e48\u4ece\u903b\u8f91\u4e0a\u6211\u4eec\u7684 stall \u673a\u5236\u5e94\u5f53\u4f7f\u5f97 ID \u6bb5\u7684\u6307\u4ee4\u88ab\u9501\u4f4f\uff0c \u76f4\u5230\u5bc4\u5b58\u5668\u7684\u503c\u53ef\u4ee5\u88ab\u6b63\u786e\u8bfb\u53d6\u524d\u90fd\u4e0d\u5e94\u5f53\u5411\u540e\u6d41\u5165 EX \u6bb5\uff0c\u5426\u5219\u8bfb\u53d6\u7684\u5bc4\u5b58\u5668\u503c\u9519\u8bef\uff0c\u4f1a\u5f71\u54cd\u6307\u4ee4\u6267\u884c\u7684\u6b63\u786e\u6027\u3002\u4f8b\u5982\u76f8\u90bb\u7684\u4e24\u6761\u6307\u4ee4\u4e3a addi x1, x0, 1; add x2, x1, x0 \u7b2c\u4e8c\u6761\u6307\u4ee4\u6267\u884c\u65f6 x1 \u5bc4\u5b58\u5668\u7684\u503c\u5e94\u8be5\u4e3a1\uff0c\u800c\u5728\u6d41\u6c34\u7ebf\u4e2d\u4e0a\u4e00\u6761\u6307\u4ee4\u8fd8\u5e76\u6ca1\u6709\u6267\u884c\u5b8c\uff0c\u5982\u679c\u4e0d\u6dfb\u52a0 stall \u673a\u5236\uff0c\u8bfb\u53d6\u5230\u7684\u503c\u4e3a\u7b2c\u4e00\u6761\u6307\u4ee4\u5c1a\u672a\u6267\u884c\u65f6 x1 \u5bc4\u5b58\u5668\u7684\u503c\u3002 \u4e5f\u5c31\u662f\u8bf4\u63a5\u4e0b\u6765\u7684\u4e00\u4e2a\u5468\u671f\uff0c\u8be5\u6307\u4ee4\u4ecd\u7136\u9501\u4f4f\u5728 ID \u9636\u6bb5\uff0c\u76f4\u5230\u4e0e\u4e4b\u51b2\u7a81\u7684 EX \u9636\u6bb5\u6307\u4ee4\u6d41\u5165\u5230 WB \u6bb5\u5b8c\u6210\u5199\u56de\uff0c\u4f7f\u5f97\u8be5\u6307\u4ee4\u53ef\u4ee5\u8bfb\u53d6\u5230\u6b63\u786e\u7684\u5bc4\u5b58\u5668\u7684\u503c\u65f6\uff0c\u8be5\u6307\u4ee4\u624d\u53ef\u4ee5\u6d41\u5165\u5230 EX \u6bb5\u3002\u90a3\u4e48\u6211\u4eec\u4ee5 ID \u9636\u6bb5\u6765\u770b\uff0c\u5411\u524d\u770b IF, ID \u4e24\u9636\u6bb5\u90fd\u5e94\u5f53\u9501\u4f4f\u5f53\u524d\u7684\u6307\u4ee4\u548c\u72b6\u6001\uff0c\u7b49\u5f85\u82e5\u5e72\u5468\u671f\u540e\u7ee7\u7eed\u6267\u884c\uff0c\u5411\u540e\u770b EX, MEM, WB \u9636\u6bb5\u5e94\u5f53\u7ee7\u7eed\u6267\u884c\u6bb5\u5185\u7684\u6307\u4ee4\uff0c\u6b63\u5e38\u7684\u8ba9\u6307\u4ee4\u6d41\u5165\u4e0b\u4e00\u9636\u3002 \u518d\u8003\u8651\u5206\u652f\u8df3\u8f6c\u6307\u4ee4\u7684\u60c5\u51b5\uff0c\u5f53\u6267\u884c\u5230\u5206\u652f\u8df3\u8f6c\u6307\u4ee4\u65f6\uff0c\u7531\u4e8e\u53ef\u80fd\u53d1\u751f\u8df3\u8f6c\uff0c\u5728 pc \u7f6e\u4f4d\u524d\u5df2\u7ecf\u6d41\u5165 IF \u6bb5\u7684\u6307\u4ee4\u53ef\u80fd\u5e76\u4e0d\u662f\u6211\u4eec\u5c06\u8981\u6267\u884c\u7684\u6307\u4ee4\uff0c stall \u673a\u5236\u9700\u8981\u8003\u8651\u6d41\u6c34\u7ebf\u5185\u6307\u4ee4\u7684\u9501\u5b58\u548c\u5237\u65b0\u4e24\u65b9\u9762\u7684\u95ee\u9898\uff0c\u5bf9\u4e8e\u5206\u652f\u8df3\u8f6c\u6307\u4ee4\uff0c\u6839\u636e\u540c\u5b66\u4eec\u5b9e\u73b0\u7684\u6d41\u6c34\u7ebf\u4e0d\u540c\uff0c\u4e5f\u9700\u8981 stall \u4e0d\u540c\u7684\u5468\u671f\u6570\u3002 4. \u5b9e\u9a8c\u8981\u6c42\u548c\u6b65\u9aa4 4.1 \u5b9e\u9a8c\u8981\u6c42 \u5728 lab1-2 \u7684\u57fa\u7840\u4e0a\u52a0\u5165 stall \u673a\u5236\u3002 4.2 \u5b9e\u9a8c\u6b65\u9aa4 \u5728 lab1-2 \u7684\u57fa\u7840\u4e0a\u5b9e\u73b0 stall \u673a\u5236\u3002 \u8fdb\u884c\u4eff\u771f\u6d4b\u8bd5\uff0c\u4ee5\u68c0\u9a8c CPU \u57fa\u672c\u529f\u80fd\u3002 \u8fdb\u884c\u4e0a\u677f\u6d4b\u8bd5\uff0c\u4ee5\u68c0\u9a8c CPU \u8bbe\u8ba1\u89c4\u8303\u3002 5. \u601d\u8003\u9898 \u8bf7\u4f60\u5bf9\u6570\u636e\u51b2\u7a81\u60c5\u51b5\u8fdb\u884c\u5206\u6790\u5f52\u7eb3\uff0c\u8bd5\u7740\u5c06\u4ed6\u4eec\u5206\u7c7b\u5217\u51fa\u3002 \u5982\u679c EX, MEM, WB \u6bb5\u4e2d\u4e0d\u6b62\u4e00\u4e2a\u6bb5\u7684\u5199\u5bc4\u5b58\u5668\u4e0e ID \u6bb5\u7684\u8bfb\u5bc4\u5b58\u5668\u53d1\u751f\u4e86\u51b2\u7a81\uff0c\u8be5\u5982\u4f55\u5904\u7406\uff1f","title":"\u7b2c\u4e00\u90e8\u5206"},{"location":"lab2-1/#2-1","text":"","title":"\u5b9e\u9a8c2-1: \u6682\u505c\u4e0e\u5192\u9669"},{"location":"lab2-1/#1","text":"\u5b8c\u5584\u6d41\u6c34\u7ebf\u7684\u57fa\u672c\u529f\u80fd\uff0c\u5b9e\u73b0\u6d41\u6c34\u7ebf\u6682\u505c\u673a\u5236 \u6df1\u5165\u7406\u89e3\u6d41\u6c34\u7ebf\u5192\u9669\uff0c\u638c\u63e1\u5229\u7528stall \u5904\u7406\u6d41\u6c34\u7ebf\u5192\u9669\uff0c\u4fdd\u8bc1\u6d41\u6c34\u529f\u80fd\u6b63\u786e\u6027\u7684\u57fa\u672c\u6280\u672f \u5c1d\u8bd5\u601d\u8003\u6539\u8fdb\u7684\u65b9\u6848","title":"1. \u5b9e\u9a8c\u76ee\u7684"},{"location":"lab2-1/#2","text":"HDL \uff1aVerilog IDE \uff1aVivado \u5f00\u53d1\u677f \uff1aNexys A7","title":"2. \u5b9e\u9a8c\u73af\u5883"},{"location":"lab2-1/#3","text":"","title":"3. \u5b9e\u9a8c\u539f\u7406"},{"location":"lab2-1/#31-stall","text":"\u5728\u6d41\u6c34\u7ebf\u7684\u8fd0\u884c\u8fc7\u7a0b\u4e2d\uff0c\u540c\u4e00\u65f6\u523b\u5185\u4e0d\u540c\u6d41\u6c34\u6bb5\u8fd0\u884c\u7684\u6307\u4ee4\u5404\u4e0d\u76f8\u540c\uff0c\u5982\u679c\u8bf4\u6307\u4ee4\u4e4b\u95f4\u4e0d\u5b58\u5728\u5173\u8054\u6027\u548c\u4f9d\u8d56\u6027\uff0c\u90a3\u4e48\u5373\u4f7f\u662f\u50cf\u6211\u4eec\u5728 lab1-2 \u4e2d\u8bbe\u8ba1\u7684\u7b80\u5355\u6d41\u6c34\u7ebf\u4e5f\u53ef\u4ee5\u4fdd\u8bc1\u9ad8\u6548\u3001\u6301\u7eed\u5730\u8fd0\u884c\u3002\u4f46\u8fd9\u79cd\u60c5\u51b5\u603b\u662f\u7406\u60f3\u7684\uff0c\u5728\u5b9e\u9645\u7684\u8fd0\u884c\u8fc7\u7a0b\u4e2d\uff0c\u6307\u4ee4\u95f4\u7684\u5173\u8054\u6027\u548c\u4f9d\u8d56\u6027\u5f80\u5f80\u65e0\u6cd5\u907f\u514d\uff0c\u4e0b\u56fe\u7ed9\u51fa\u7684\u4fbf\u662f\u4e00\u7ec4\u6570\u636e\u51b2\u7a81\u7684\u6848\u4f8b\u3002 \u5728\u4e0a\u4e00\u6b21\u5b9e\u9a8c\u4e2d\uff0c\u6211\u4eec\u7684\u6d4b\u8bd5\u7528\u4f8b\u7ecf\u8fc7\u8bbe\u8ba1\uff0c\u5728\u76f8\u5173\u8054\u7684\u6307\u4ee4\u95f4\u63d2\u5165 nop \u6307\u4ee4\uff0c\u5728\u5206\u652f\u8df3\u8f6c\u8bed\u53e5\u540e\u63d2\u5165\u989d\u5916\u7684 nop \u6307\u4ee4\uff0c\u907f\u514d\u4e86\u7ade\u4e89\u5192\u9669\u95ee\u9898\u3002\u5728\u5b9e\u9645\u7684\u7cfb\u7edf\u4e2d\uff0c\u8fd9\u76f8\u5f53\u4e8e\u5c06\u6d41\u6c34\u7ebf\u6682\u505c\u7684\u5de5\u4f5c\u4ea4\u7ed9\u7f16\u8bd1\u5668\u53bb\u5904\u7406\uff0c\u4f46\u8fd9\u4e00\u65b9\u9762\u4f1a\u52a0\u91cd\u7f16\u8bd1\u5668\u7684\u8d1f\u62c5\uff0c\u53e6\u4e00\u65b9\u9762\u4e5f\u4e0d\u5229\u4e8e\u5904\u7406\u5668\u7684\u540e\u7eed\u4f18\u5316\u3002 \u672c\u6b21\u5b9e\u9a8c\u9700\u8981\u5728\u5904\u7406\u5668\u4e2d\u5b9e\u73b0 stall \u673a\u5236\uff0c\u5f53\u6d41\u6c34\u7ebf\u68c0\u6d4b\u5230\u6570\u636e\u51b2\u7a81\u6216\u8005\u63a7\u5236\u8df3\u8f6c\u6307\u4ee4\u540e\u901a\u8fc7 stall \u673a\u5236\u5904\u7406\uff0c\u4fdd\u8bc1\u6267\u884c\u7ed3\u679c\u7684\u6b63\u786e\u6027\u3002","title":"3.1 stall \u4ecb\u7ecd"},{"location":"lab2-1/#32-stall","text":"\u4ee5\u6570\u636e\u51b2\u7a81\u4e3a\u4f8b\u8fdb\u884c\u5206\u6790\uff0c\u5e38\u89c1\u7684\u6570\u636e\u76f8\u5173\u6709 WAW, WAR, RAW \uff0c\u7531\u4e8e\u6211\u4eec\u7684\u6307\u4ee4\u90fd\u662f\u987a\u5e8f\u6267\u884c\u7684\uff0c\u8fd9\u91cc\u53ea\u8003\u8651 RAW \u4e00\u79cd\u60c5\u51b5\u5373\u53ef\u3002\u5f53\u6307\u4ee4\u6d41\u5165 ID \u9636\u6bb5\u65f6\uff0c\u6211\u4eec\u5bf9\u6307\u4ee4\u8fdb\u884c\u8bd1\u7801\uff0c\u6839\u636e\u8bd1\u7801\u7684\u7ed3\u679c\u8bfb\u53d6\u5bf9\u5e94\u5bc4\u5b58\u5668\u7684\u503c\uff0c\u6b64\u65f6\u5982\u679c\u53d1\u73b0\u5f85\u8bfb\u53d6\u7684\u5bc4\u5b58\u5668\u53d1\u751f\u4e86 RAW \u51b2\u7a81\uff0c\u5c31\u8981\u89e6\u53d1 stall \u673a\u5236\u8fdb\u884c\u5904\u7406\u3002 \u6211\u4eec\u4e0d\u59a8\u5047\u8bbe ID \u6bb5\u8981\u8bfb\u53d6\u7684\u5bc4\u5b58\u5668\u8bbe\u4e0e EX \u6bb5\u5c06\u8981\u5199\u5165\u7684\u5bc4\u5b58\u5668\u53d1\u751f\u4e86\u51b2\u7a81\u3002\uff08\u4e0e MEM, WB \u6bb5\u51b2\u7a81\u7684\u60c5\u51b5\u8bf7\u540c\u5b66\u4eec\u81ea\u884c\u8003\u8651\uff09\u90a3\u4e48\u4ece\u903b\u8f91\u4e0a\u6211\u4eec\u7684 stall \u673a\u5236\u5e94\u5f53\u4f7f\u5f97 ID \u6bb5\u7684\u6307\u4ee4\u88ab\u9501\u4f4f\uff0c \u76f4\u5230\u5bc4\u5b58\u5668\u7684\u503c\u53ef\u4ee5\u88ab\u6b63\u786e\u8bfb\u53d6\u524d\u90fd\u4e0d\u5e94\u5f53\u5411\u540e\u6d41\u5165 EX \u6bb5\uff0c\u5426\u5219\u8bfb\u53d6\u7684\u5bc4\u5b58\u5668\u503c\u9519\u8bef\uff0c\u4f1a\u5f71\u54cd\u6307\u4ee4\u6267\u884c\u7684\u6b63\u786e\u6027\u3002\u4f8b\u5982\u76f8\u90bb\u7684\u4e24\u6761\u6307\u4ee4\u4e3a addi x1, x0, 1; add x2, x1, x0 \u7b2c\u4e8c\u6761\u6307\u4ee4\u6267\u884c\u65f6 x1 \u5bc4\u5b58\u5668\u7684\u503c\u5e94\u8be5\u4e3a1\uff0c\u800c\u5728\u6d41\u6c34\u7ebf\u4e2d\u4e0a\u4e00\u6761\u6307\u4ee4\u8fd8\u5e76\u6ca1\u6709\u6267\u884c\u5b8c\uff0c\u5982\u679c\u4e0d\u6dfb\u52a0 stall \u673a\u5236\uff0c\u8bfb\u53d6\u5230\u7684\u503c\u4e3a\u7b2c\u4e00\u6761\u6307\u4ee4\u5c1a\u672a\u6267\u884c\u65f6 x1 \u5bc4\u5b58\u5668\u7684\u503c\u3002 \u4e5f\u5c31\u662f\u8bf4\u63a5\u4e0b\u6765\u7684\u4e00\u4e2a\u5468\u671f\uff0c\u8be5\u6307\u4ee4\u4ecd\u7136\u9501\u4f4f\u5728 ID \u9636\u6bb5\uff0c\u76f4\u5230\u4e0e\u4e4b\u51b2\u7a81\u7684 EX \u9636\u6bb5\u6307\u4ee4\u6d41\u5165\u5230 WB \u6bb5\u5b8c\u6210\u5199\u56de\uff0c\u4f7f\u5f97\u8be5\u6307\u4ee4\u53ef\u4ee5\u8bfb\u53d6\u5230\u6b63\u786e\u7684\u5bc4\u5b58\u5668\u7684\u503c\u65f6\uff0c\u8be5\u6307\u4ee4\u624d\u53ef\u4ee5\u6d41\u5165\u5230 EX \u6bb5\u3002\u90a3\u4e48\u6211\u4eec\u4ee5 ID \u9636\u6bb5\u6765\u770b\uff0c\u5411\u524d\u770b IF, ID \u4e24\u9636\u6bb5\u90fd\u5e94\u5f53\u9501\u4f4f\u5f53\u524d\u7684\u6307\u4ee4\u548c\u72b6\u6001\uff0c\u7b49\u5f85\u82e5\u5e72\u5468\u671f\u540e\u7ee7\u7eed\u6267\u884c\uff0c\u5411\u540e\u770b EX, MEM, WB \u9636\u6bb5\u5e94\u5f53\u7ee7\u7eed\u6267\u884c\u6bb5\u5185\u7684\u6307\u4ee4\uff0c\u6b63\u5e38\u7684\u8ba9\u6307\u4ee4\u6d41\u5165\u4e0b\u4e00\u9636\u3002 \u518d\u8003\u8651\u5206\u652f\u8df3\u8f6c\u6307\u4ee4\u7684\u60c5\u51b5\uff0c\u5f53\u6267\u884c\u5230\u5206\u652f\u8df3\u8f6c\u6307\u4ee4\u65f6\uff0c\u7531\u4e8e\u53ef\u80fd\u53d1\u751f\u8df3\u8f6c\uff0c\u5728 pc \u7f6e\u4f4d\u524d\u5df2\u7ecf\u6d41\u5165 IF \u6bb5\u7684\u6307\u4ee4\u53ef\u80fd\u5e76\u4e0d\u662f\u6211\u4eec\u5c06\u8981\u6267\u884c\u7684\u6307\u4ee4\uff0c stall \u673a\u5236\u9700\u8981\u8003\u8651\u6d41\u6c34\u7ebf\u5185\u6307\u4ee4\u7684\u9501\u5b58\u548c\u5237\u65b0\u4e24\u65b9\u9762\u7684\u95ee\u9898\uff0c\u5bf9\u4e8e\u5206\u652f\u8df3\u8f6c\u6307\u4ee4\uff0c\u6839\u636e\u540c\u5b66\u4eec\u5b9e\u73b0\u7684\u6d41\u6c34\u7ebf\u4e0d\u540c\uff0c\u4e5f\u9700\u8981 stall \u4e0d\u540c\u7684\u5468\u671f\u6570\u3002","title":"3.2 stall \u5b9e\u73b0\u5206\u6790"},{"location":"lab2-1/#4","text":"","title":"4. \u5b9e\u9a8c\u8981\u6c42\u548c\u6b65\u9aa4"},{"location":"lab2-1/#41","text":"\u5728 lab1-2 \u7684\u57fa\u7840\u4e0a\u52a0\u5165 stall \u673a\u5236\u3002","title":"4.1 \u5b9e\u9a8c\u8981\u6c42"},{"location":"lab2-1/#42","text":"\u5728 lab1-2 \u7684\u57fa\u7840\u4e0a\u5b9e\u73b0 stall \u673a\u5236\u3002 \u8fdb\u884c\u4eff\u771f\u6d4b\u8bd5\uff0c\u4ee5\u68c0\u9a8c CPU \u57fa\u672c\u529f\u80fd\u3002 \u8fdb\u884c\u4e0a\u677f\u6d4b\u8bd5\uff0c\u4ee5\u68c0\u9a8c CPU \u8bbe\u8ba1\u89c4\u8303\u3002","title":"4.2 \u5b9e\u9a8c\u6b65\u9aa4"},{"location":"lab2-1/#5","text":"\u8bf7\u4f60\u5bf9\u6570\u636e\u51b2\u7a81\u60c5\u51b5\u8fdb\u884c\u5206\u6790\u5f52\u7eb3\uff0c\u8bd5\u7740\u5c06\u4ed6\u4eec\u5206\u7c7b\u5217\u51fa\u3002 \u5982\u679c EX, MEM, WB \u6bb5\u4e2d\u4e0d\u6b62\u4e00\u4e2a\u6bb5\u7684\u5199\u5bc4\u5b58\u5668\u4e0e ID \u6bb5\u7684\u8bfb\u5bc4\u5b58\u5668\u53d1\u751f\u4e86\u51b2\u7a81\uff0c\u8be5\u5982\u4f55\u5904\u7406\uff1f","title":"5. \u601d\u8003\u9898"},{"location":"lab2-2/","text":"\u5b9e\u9a8c2-2: \u65c1\u8def\u4f18\u5316 Forwarding 1. \u5b9e\u9a8c\u76ee\u7684 \u5b8c\u5584\u6d41\u6c34\u7ebf\u7684\u57fa\u672c\u529f\u80fd\uff0c\u5b9e\u73b0 Forwarding \u673a\u5236 \u5c1d\u8bd5\u601d\u8003\u6539\u8fdb\u7684\u65b9\u6848 2. \u5b9e\u9a8c\u73af\u5883 HDL \uff1aVerilog IDE \uff1aVivado \u5f00\u53d1\u677f \uff1aNexys A7 3. \u5b9e\u9a8c\u539f\u7406 3.1 forwarding \u4ecb\u7ecd \u5728\u6d41\u6c34\u7ebf\u7684\u8fd0\u884c\u8fc7\u7a0b\u4e2d\uff0c\u6570\u636e\u51b2\u7a81\u662f\u62d6\u7d2f\u6d41\u6c34\u7ebf\u6548\u7387\u7684\u4e00\u4e2a\u91cd\u8981\u7684\u56e0\u7d20\u3002\u5728\u987a\u5e8f\u5355\u53d1\u5c04\u5904\u7406\u5668\u4e2d\uff0c\u6570\u636e\u5192\u9669\u53ea\u9700\u8981\u8003\u8651RAW\u4e00\u79cd\u60c5\u51b5\uff0c\u672c\u8d28\u4e0a\u5c31\u662f\u7531\u8bfb\u5199\u540c\u4e00\u4e2a\u5bc4\u5b58\u5668\u6240\u5bfc\u81f4\u7684\uff0c\u6240\u4ee5\u6570\u636e\u5192\u9669\u672c\u8eab\u7684\u68c0\u6d4b\u53ea\u9700\u5bf9\u6d41\u6c34\u7ebf\u4e2d\u76f8\u5e94\u6d41\u6c34\u6bb5\u4e2d\u6307\u4ee4\u7684\u5bc4\u5b58\u5668\u7f16\u53f7\u8fdb\u884c\u6bd4\u8f83\uff0c\u5373\u53ef\u5bf9\u6570\u636e\u5192\u9669\u7684\u53d1\u751f\u8fdb\u884c\u5224\u65ad\u3002 \u5b9e\u73b0 Forwarding \u7684\u57fa\u672c\u529f\u80fd\u9700\u8981\u5728\u6d41\u6c34\u7ebf\u7684\u57fa\u7840\u4e0a\u6dfb\u52a0\u51b2\u7a81\u68c0\u6d4b\u903b\u8f91\u548c\u76f8\u5e94\u7684\u6570\u636e\u901a\u8def\uff0c\u8fd9\u6837\u5c31\u80fd\u591f\u5728WB\u9636\u6bb5\u4e4b\u524d\uff0c\u5c06\u6700\u65b0\u7684\u5bc4\u5b58\u5668\u7684\u6570\u636e\u56de\u4f20\u7ed9\u540e\u7eed\u7684\u6307\u4ee4\uff0c\u51cf\u5c11 stall \u7684\u5468\u671f\u6570\u3002 4. \u5b9e\u9a8c\u8981\u6c42\u548c\u6b65\u9aa4 4.1 \u5b9e\u9a8c\u8981\u6c42 \u5728 lab2-1 \u7684\u57fa\u7840\u4e0a\u52a0\u5165 Forwarding \u673a\u5236\u3002 4.2 \u5b9e\u9a8c\u6b65\u9aa4 \u5728 lab2-1 \u7684\u57fa\u7840\u4e0a\u5b9e\u73b0 Forwarding \u673a\u5236\u3002 \u8fdb\u884c\u4eff\u771f\u6d4b\u8bd5\uff0c\u4ee5\u68c0\u9a8c CPU \u57fa\u672c\u529f\u80fd\u3002 \u8fdb\u884c\u4e0a\u677f\u6d4b\u8bd5\uff0c\u4ee5\u68c0\u9a8c CPU \u8bbe\u8ba1\u89c4\u8303\u3002 5. \u601d\u8003\u9898 \u5728\u5f15\u5165 Forwarding \u673a\u5236\u540e\uff0c\u662f\u5426\u610f\u5473\u7740 stall \u673a\u5236\u5c31\u4e0d\u518d\u9700\u8981\u4e86\uff1f\u4e3a\u4ec0\u4e48\uff1f \u4f60\u8ba4\u4e3a Forwarding \u673a\u5236\u5728\u5b9e\u9645\u7684\u7535\u8def\u8bbe\u8ba1\u4e2d\u662f\u5426\u5b58\u5728\u4e00\u5b9a\u7684\u5f0a\u7aef\uff1f\u5982\u679c\u5b58\u5728\uff0c\u8bf7\u7ed9\u51fa\u4f60\u7684\u7406\u7531\u3002","title":"\u7b2c\u4e8c\u90e8\u5206"},{"location":"lab2-2/#2-2-forwarding","text":"","title":"\u5b9e\u9a8c2-2: \u65c1\u8def\u4f18\u5316 Forwarding"},{"location":"lab2-2/#1","text":"\u5b8c\u5584\u6d41\u6c34\u7ebf\u7684\u57fa\u672c\u529f\u80fd\uff0c\u5b9e\u73b0 Forwarding \u673a\u5236 \u5c1d\u8bd5\u601d\u8003\u6539\u8fdb\u7684\u65b9\u6848","title":"1. \u5b9e\u9a8c\u76ee\u7684"},{"location":"lab2-2/#2","text":"HDL \uff1aVerilog IDE \uff1aVivado \u5f00\u53d1\u677f \uff1aNexys A7","title":"2. \u5b9e\u9a8c\u73af\u5883"},{"location":"lab2-2/#3","text":"","title":"3. \u5b9e\u9a8c\u539f\u7406"},{"location":"lab2-2/#31-forwarding","text":"\u5728\u6d41\u6c34\u7ebf\u7684\u8fd0\u884c\u8fc7\u7a0b\u4e2d\uff0c\u6570\u636e\u51b2\u7a81\u662f\u62d6\u7d2f\u6d41\u6c34\u7ebf\u6548\u7387\u7684\u4e00\u4e2a\u91cd\u8981\u7684\u56e0\u7d20\u3002\u5728\u987a\u5e8f\u5355\u53d1\u5c04\u5904\u7406\u5668\u4e2d\uff0c\u6570\u636e\u5192\u9669\u53ea\u9700\u8981\u8003\u8651RAW\u4e00\u79cd\u60c5\u51b5\uff0c\u672c\u8d28\u4e0a\u5c31\u662f\u7531\u8bfb\u5199\u540c\u4e00\u4e2a\u5bc4\u5b58\u5668\u6240\u5bfc\u81f4\u7684\uff0c\u6240\u4ee5\u6570\u636e\u5192\u9669\u672c\u8eab\u7684\u68c0\u6d4b\u53ea\u9700\u5bf9\u6d41\u6c34\u7ebf\u4e2d\u76f8\u5e94\u6d41\u6c34\u6bb5\u4e2d\u6307\u4ee4\u7684\u5bc4\u5b58\u5668\u7f16\u53f7\u8fdb\u884c\u6bd4\u8f83\uff0c\u5373\u53ef\u5bf9\u6570\u636e\u5192\u9669\u7684\u53d1\u751f\u8fdb\u884c\u5224\u65ad\u3002 \u5b9e\u73b0 Forwarding \u7684\u57fa\u672c\u529f\u80fd\u9700\u8981\u5728\u6d41\u6c34\u7ebf\u7684\u57fa\u7840\u4e0a\u6dfb\u52a0\u51b2\u7a81\u68c0\u6d4b\u903b\u8f91\u548c\u76f8\u5e94\u7684\u6570\u636e\u901a\u8def\uff0c\u8fd9\u6837\u5c31\u80fd\u591f\u5728WB\u9636\u6bb5\u4e4b\u524d\uff0c\u5c06\u6700\u65b0\u7684\u5bc4\u5b58\u5668\u7684\u6570\u636e\u56de\u4f20\u7ed9\u540e\u7eed\u7684\u6307\u4ee4\uff0c\u51cf\u5c11 stall \u7684\u5468\u671f\u6570\u3002","title":"3.1 forwarding \u4ecb\u7ecd"},{"location":"lab2-2/#4","text":"","title":"4. \u5b9e\u9a8c\u8981\u6c42\u548c\u6b65\u9aa4"},{"location":"lab2-2/#41","text":"\u5728 lab2-1 \u7684\u57fa\u7840\u4e0a\u52a0\u5165 Forwarding \u673a\u5236\u3002","title":"4.1 \u5b9e\u9a8c\u8981\u6c42"},{"location":"lab2-2/#42","text":"\u5728 lab2-1 \u7684\u57fa\u7840\u4e0a\u5b9e\u73b0 Forwarding \u673a\u5236\u3002 \u8fdb\u884c\u4eff\u771f\u6d4b\u8bd5\uff0c\u4ee5\u68c0\u9a8c CPU \u57fa\u672c\u529f\u80fd\u3002 \u8fdb\u884c\u4e0a\u677f\u6d4b\u8bd5\uff0c\u4ee5\u68c0\u9a8c CPU \u8bbe\u8ba1\u89c4\u8303\u3002","title":"4.2 \u5b9e\u9a8c\u6b65\u9aa4"},{"location":"lab2-2/#5","text":"\u5728\u5f15\u5165 Forwarding \u673a\u5236\u540e\uff0c\u662f\u5426\u610f\u5473\u7740 stall \u673a\u5236\u5c31\u4e0d\u518d\u9700\u8981\u4e86\uff1f\u4e3a\u4ec0\u4e48\uff1f \u4f60\u8ba4\u4e3a Forwarding \u673a\u5236\u5728\u5b9e\u9645\u7684\u7535\u8def\u8bbe\u8ba1\u4e2d\u662f\u5426\u5b58\u5728\u4e00\u5b9a\u7684\u5f0a\u7aef\uff1f\u5982\u679c\u5b58\u5728\uff0c\u8bf7\u7ed9\u51fa\u4f60\u7684\u7406\u7531\u3002","title":"5. \u601d\u8003\u9898"},{"location":"lab3/","text":"\u5b9e\u9a8c3: GDB + QEMU \u8c03\u8bd5 64 \u4f4d RISC-V LINUX 1 \u5b9e\u9a8c\u76ee\u7684 \u4e86\u89e3\u5bb9\u5668\u7684\u4f7f\u7528 \u4f7f\u7528\u4ea4\u53c9\u7f16\u8bd1\u5de5\u5177, \u5b8c\u6210Linux\u5185\u6838\u4ee3\u7801\u7f16\u8bd1 \u4f7f\u7528QEMU\u8fd0\u884c\u5185\u6838 \u719f\u6089GDB\u548cQEMU\u8054\u5408\u8c03\u8bd5 2 \u5b9e\u9a8c\u73af\u5883 Ubuntu 20.04, 22.04 3 \u5b9e\u9a8c\u57fa\u7840\u77e5\u8bc6\u4ecb\u7ecd 3.1 Linux \u4f7f\u7528\u57fa\u7840 \u5728Linux\u73af\u5883\u4e0b\uff0c\u4eba\u4eec\u901a\u5e38\u4f7f\u7528\u547d\u4ee4\u884c\u63a5\u53e3\u6765\u5b8c\u6210\u4e0e\u8ba1\u7b97\u673a\u7684\u4ea4\u4e92\u3002\u7ec8\u7aef\uff08Terminal\uff09\u662f\u7528\u4e8e\u5904\u7406\u8be5\u8fc7\u7a0b\u7684\u4e00\u4e2a\u5e94\u7528\u7a0b\u5e8f\uff0c\u901a\u8fc7\u7ec8\u7aef\u4f60\u53ef\u4ee5\u8fd0\u884c\u5404\u79cd\u7a0b\u5e8f\u4ee5\u53ca\u5728\u81ea\u5df1\u7684\u8ba1\u7b97\u673a\u4e0a\u5904\u7406\u6587\u4ef6\u3002\u5728\u7c7bUnix\u7684\u64cd\u4f5c\u7cfb\u7edf\u4e0a\uff0c\u7ec8\u7aef\u53ef\u4ee5\u4e3a\u4f60\u5b8c\u6210\u4e00\u5207\u4f60\u6240\u9700\u8981\u7684\u64cd\u4f5c\u3002\u4e0b\u9762\u6211\u4eec\u4ec5\u5bf9\u5b9e\u9a8c\u4e2d\u6d89\u53ca\u7684\u4e00\u4e9b\u6982\u5ff5\u8fdb\u884c\u4ecb\u7ecd\uff0c\u4f60\u53ef\u4ee5\u901a\u8fc7\u4e0b\u9762\u7684\u94fe\u63a5\u6765\u5bf9\u547d\u4ee4\u884c\u7684\u4f7f\u7528\u8fdb\u884c\u5b66\u4e60\uff1a The Missing Semester of Your CS Education >>Video<< GNU/Linux Command-Line Tools Summary Basics of UNIX 3.2 \u5b9e\u9a8c\u73af\u5883\u914d\u7f6e \u5728\u63a5\u4e0b\u6765\u7684\u64cd\u4f5c\u7cfb\u7edf\u5b9e\u9a8c\u4e2d\uff0c\u6211\u4eec\u9700\u8981\u4f7f\u7528RISC-V\u5de5\u5177\u94fe\u4ee5\u53caQEMU\u6a21\u62df\u5668\u6765\u5b8c\u6210\u3002 \u5728\u7ec8\u7aef\u4e2d\u8f93\u5165\u4e00\u4e0b\u547d\u4ee4\u5b8c\u6210\u5b89\u88c5\uff1a 1 $ sudo apt install qemu-system-misc gcc-riscv64-linux-gnu gdb-multiarch \u5b89\u88c5\u5b8c\u6210\u540e\uff0c\u5728\u7ec8\u7aef\u4e2d\u8fd0\u884c\u4e00\u4e0b riscv64-linux-gnu-gcc --version; qemu-system-riscv64 --version; gdb-multiarch --version \u6765\u68c0\u6d4b\u4e00\u4e0b\u662f\u5426\u6240\u9700\u7684\u8f6f\u4ef6\u90fd\u5df2\u7ecf\u5b89\u88c5\u6210\u529f\u3002 \u5982\u679c\u4f60\u7684\u7cfb\u7edf\u4e0e\u5b9e\u9a8c\u73af\u5883\u4e0d\u540c\u4e14\u7ecf\u8fc7\u5c1d\u8bd5\u65e0\u6cd5\u5b89\u88c5\u4e0a\u8ff0\u7684\u8f6f\u4ef6\uff0c\u53ef\u4ee5\u5c1d\u8bd5\u4f7f\u7528 \u5f80\u5e74\u5b9e\u9a8c \u4e2d\u7684docker\u955c\u50cf\u3002 3.3 QEMU \u4f7f\u7528\u57fa\u7840 \u4ec0\u4e48\u662fQEMU QEMU \u662f\u4e00\u4e2a\u529f\u80fd\u5f3a\u5927\u7684\u6a21\u62df\u5668\uff0c\u53ef\u4ee5\u5728 x86 \u5e73\u53f0\u4e0a\u6267\u884c\u4e0d\u540c\u67b6\u6784\u4e0b\u7684\u7a0b\u5e8f\u3002\u6211\u4eec\u5b9e\u9a8c\u4e2d\u91c7\u7528 QEMU \u6765\u5b8c\u6210 RISC-V \u67b6\u6784\u7684\u7a0b\u5e8f\u7684\u6a21\u62df\u3002 \u5982\u4f55\u4f7f\u7528 QEMU\uff08\u5e38\u89c1\u53c2\u6570\u4ecb\u7ecd\uff09 \u4ee5\u4ee5\u4e0b\u547d\u4ee4\u4e3a\u4f8b\uff0c\u6211\u4eec\u7b80\u5355\u4ecb\u7ecd QEMU \u7684\u53c2\u6570\u6240\u4ee3\u8868\u7684\u542b\u4e49 1 2 3 4 5 6 7 8 9 $ qemu-system-riscv64 \\ -nographic \\ -machine virt \\ -kernel path/to/linux/arch/riscv/boot/Image \\ -device virtio-blk-device,drive = hd0 \\ -append \"root=/dev/vda ro console=ttyS0\" \\ -bios fw_jump.bin \\ -drive file = rootfs.img,format = raw,id = hd0 \\ -S -s -nographic : \u4e0d\u4f7f\u7528\u56fe\u5f62\u7a97\u53e3\uff0c\u4f7f\u7528\u547d\u4ee4\u884c -machine : \u6307\u5b9a\u8981emulate\u7684\u673a\u5668\uff0c\u53ef\u4ee5\u901a\u8fc7\u547d\u4ee4 qemu-system-riscv64 -machine help \u67e5\u770b\u53ef\u9009\u62e9\u7684\u673a\u5668\u9009\u9879 -kernel : \u6307\u5b9a\u5185\u6838image -append cmdline : \u4f7f\u7528cmdline\u4f5c\u4e3a\u5185\u6838\u7684\u547d\u4ee4\u884c -device : \u6307\u5b9a\u8981\u6a21\u62df\u7684\u8bbe\u5907\uff0c\u53ef\u4ee5\u901a\u8fc7\u547d\u4ee4 qemu-system-riscv64 -device help \u67e5\u770b\u53ef\u9009\u62e9\u7684\u8bbe\u5907\uff0c\u901a\u8fc7\u547d\u4ee4 qemu-system-riscv64 -device <\u5177\u4f53\u7684\u8bbe\u5907>,help \u67e5\u770b\u67d0\u4e2a\u8bbe\u5907\u7684\u547d\u4ee4\u9009\u9879 -drive, file=<file_name> : \u4f7f\u7528 file_name \u4f5c\u4e3a\u6587\u4ef6\u7cfb\u7edf -S : \u542f\u52a8\u65f6\u6682\u505cCPU\u6267\u884c -s : -gdb tcp::1234 \u7684\u7b80\u5199 -bios default : \u4f7f\u7528fw_jump.bin\u4f5c\u4e3abootloader \u66f4\u591a\u53c2\u6570\u4fe1\u606f\u53ef\u4ee5\u53c2\u8003 \u8fd9\u91cc 3.4 GDB \u4f7f\u7528\u57fa\u7840 \u4ec0\u4e48\u662f GDB GNU \u8c03\u8bd5\u5668\uff08\u82f1\u8bed\uff1aGNU Debugger\uff0c\u7f29\u5199\uff1agdb\uff09\u662f\u4e00\u4e2a\u7531 GNU \u5f00\u6e90\u7ec4\u7ec7\u53d1\u5e03\u7684\u3001UNIX/LINUX\u64cd\u4f5c\u7cfb\u7edf\u4e0b\u7684\u3001\u57fa\u4e8e\u547d\u4ee4\u884c\u7684\u3001\u529f\u80fd\u5f3a\u5927\u7684\u7a0b\u5e8f\u8c03\u8bd5\u5de5\u5177\u3002\u501f\u52a9\u8c03\u8bd5\u5668\uff0c\u6211\u4eec\u80fd\u591f\u67e5\u770b\u53e6\u4e00\u4e2a\u7a0b\u5e8f\u5728\u6267\u884c\u65f6\u5b9e\u9645\u5728\u505a\u4ec0\u4e48\uff08\u6bd4\u5982\u8bbf\u95ee\u54ea\u4e9b\u5185\u5b58\u3001\u5bc4\u5b58\u5668\uff09\uff0c\u5728\u5176\u4ed6\u7a0b\u5e8f\u5d29\u6e83\u7684\u65f6\u5019\u53ef\u4ee5\u6bd4\u8f83\u5feb\u901f\u5730\u4e86\u89e3\u5bfc\u81f4\u7a0b\u5e8f\u5d29\u6e83\u7684\u539f\u56e0\u3002 \u88ab\u8c03\u8bd5\u7684\u7a0b\u5e8f\u53ef\u4ee5\u662f\u548cgdb\u5728\u540c\u4e00\u53f0\u673a\u5668\u4e0a\uff08\u672c\u5730\u8c03\u8bd5\uff0cor native debug\uff09\uff0c\u4e5f\u53ef\u4ee5\u662f\u4e0d\u540c\u673a\u5668\u4e0a\uff08\u8fdc\u7a0b\u8c03\u8bd5\uff0c or remote debug\uff09\u3002 \u603b\u7684\u6765\u8bf4\uff0cgdb\u53ef\u4ee5\u6709\u4ee5\u4e0b4\u4e2a\u529f\u80fd\uff1a \u542f\u52a8\u7a0b\u5e8f\uff0c\u5e76\u6307\u5b9a\u53ef\u80fd\u5f71\u54cd\u5176\u884c\u4e3a\u7684\u6240\u6709\u5185\u5bb9 \u4f7f\u7a0b\u5e8f\u5728\u6307\u5b9a\u6761\u4ef6\u4e0b\u505c\u6b62 \u68c0\u67e5\u7a0b\u5e8f\u505c\u6b62\u65f6\u53d1\u751f\u4e86\u4ec0\u4e48 \u66f4\u6539\u7a0b\u5e8f\u4e2d\u7684\u5185\u5bb9\uff0c\u4ee5\u4fbf\u7ea0\u6b63\u4e00\u4e2abug\u7684\u5f71\u54cd GDB \u57fa\u672c\u547d\u4ee4\u4ecb\u7ecd (gdb) layout asm: \u663e\u793a\u6c47\u7f16\u4ee3\u7801 (gdb) start: \u5355\u6b65\u6267\u884c\uff0c\u8fd0\u884c\u7a0b\u5e8f\uff0c\u505c\u5728\u7b2c\u4e00\u6267\u884c\u8bed\u53e5 (gdb) continue: \u4ece\u65ad\u70b9\u540e\u7ee7\u7eed\u6267\u884c\uff0c\u7b80\u5199 c (gdb) next: \u5355\u6b65\u8c03\u8bd5\uff08\u9010\u8fc7\u7a0b\uff0c\u51fd\u6570\u76f4\u63a5\u6267\u884c\uff09\uff0c\u7b80\u5199 n (gdb) step instruction: \u6267\u884c\u5355\u6761\u6307\u4ee4\uff0c\u7b80\u5199 si (gdb) run: \u91cd\u65b0\u5f00\u59cb\u8fd0\u884c\u6587\u4ef6\uff08run-text\uff1a\u52a0\u8f7d\u6587\u672c\u6587\u4ef6\uff0crun-bin\uff1a\u52a0\u8f7d\u4e8c\u8fdb\u5236\u6587\u4ef6\uff09\uff0c\u7b80\u5199 r (gdb) backtrace\uff1a\u67e5\u770b\u51fd\u6570\u7684\u8c03\u7528\u7684\u6808\u5e27\u548c\u5c42\u7ea7\u5173\u7cfb\uff0c\u7b80\u5199 bt (gdb) break \u8bbe\u7f6e\u65ad\u70b9\uff0c\u7b80\u5199 b \u65ad\u5728 foo \u51fd\u6570\uff1a b foo \u65ad\u5728\u67d0\u5730\u5740: b * 0x80200000 (gdb) finish: \u7ed3\u675f\u5f53\u524d\u51fd\u6570\uff0c\u8fd4\u56de\u5230\u51fd\u6570\u8c03\u7528\u70b9 (gdb) frame: \u5207\u6362\u51fd\u6570\u7684\u6808\u5e27\uff0c\u7b80\u5199 f (gdb) print: \u6253\u5370\u503c\u53ca\u5730\u5740\uff0c\u7b80\u5199 p (gdb) info\uff1a\u67e5\u770b\u51fd\u6570\u5185\u90e8\u5c40\u90e8\u53d8\u91cf\u7684\u6570\u503c\uff0c\u7b80\u5199 i \u67e5\u770b\u5bc4\u5b58\u5668 ra \u7684\u503c\uff1a i r ra (gdb) display\uff1a\u8ffd\u8e2a\u67e5\u770b\u5177\u4f53\u53d8\u91cf\u503c (gdb) x/4x : \u4ee5 16 \u8fdb\u5236\u6253\u5370 \u5904\u5f00\u59cb\u7684 16 Bytes \u5185\u5bb9 \u66f4\u591a\u547d\u4ee4\u53ef\u4ee5\u53c2\u8003 100\u4e2agdb\u5c0f\u6280\u5de7 3.5 Linux \u5185\u6838\u7f16\u8bd1\u57fa\u7840 \u4ea4\u53c9\u7f16\u8bd1 \u4ea4\u53c9\u7f16\u8bd1\u6307\u7684\u662f\u5728\u4e00\u4e2a\u5e73\u53f0\u4e0a\u7f16\u8bd1\u53ef\u4ee5\u5728\u53e6\u4e00\u4e2a\u67b6\u6784\u8fd0\u884c\u7684\u7a0b\u5e8f\u3002\u4f8b\u5982\u5728 x86 \u673a\u5668\u4e0a\u7f16\u8bd1\u53ef\u4ee5\u5728 RISC-V \u67b6\u6784\u8fd0\u884c\u7684\u7a0b\u5e8f\uff0c\u4ea4\u53c9\u7f16\u8bd1\u9700\u8981\u4ea4\u53c9\u7f16\u8bd1\u5de5\u5177\u94fe\u7684\u652f\u6301\uff0c\u5728\u6211\u4eec\u7684\u5b9e\u9a8c\u4e2d\u6240\u7528\u7684\u4ea4\u53c9\u7f16\u8bd1\u5de5\u5177\u94fe\u5c31\u662f riscv-gnu-toolchain \u3002 \u5185\u6838\u914d\u7f6e \u5185\u6838\u914d\u7f6e\u662f\u7528\u4e8e\u914d\u7f6e\u662f\u5426\u542f\u7528\u5185\u6838\u7684\u5404\u9879\u7279\u6027\uff0c\u5185\u6838\u4f1a\u63d0\u4f9b\u4e00\u4e2a\u540d\u4e3a defconfig (\u5373default configuration) \u7684\u9ed8\u8ba4\u914d\u7f6e\uff0c\u8be5\u914d\u7f6e\u6587\u4ef6\u4f4d\u4e8e\u5404\u4e2a\u67b6\u6784\u76ee\u5f55\u7684 configs \u6587\u4ef6\u5939\u4e0b\uff0c\u4f8b\u5982\u5bf9\u4e8eRISC-V\u800c\u8a00\uff0c\u5176\u9ed8\u8ba4\u914d\u7f6e\u6587\u4ef6\u4e3a arch/riscv/configs/defconfig \u3002\u4f7f\u7528 make ARCH=riscv defconfig \u547d\u4ee4\u53ef\u4ee5\u5728\u5185\u6838\u6839\u76ee\u5f55\u4e0b\u751f\u6210\u4e00\u4e2a\u540d\u4e3a .config \u7684\u6587\u4ef6\uff0c\u5305\u542b\u4e86\u5185\u6838\u5b8c\u6574\u7684\u914d\u7f6e\uff0c\u5185\u6838\u5728\u7f16\u8bd1\u65f6\u4f1a\u6839\u636e .config \u8fdb\u884c\u7f16\u8bd1\u3002\u914d\u7f6e\u4e4b\u95f4\u5b58\u5728\u76f8\u4e92\u7684\u4f9d\u8d56\u5173\u7cfb\uff0c\u76f4\u63a5\u4fee\u6539defconfig\u6587\u4ef6\u6216\u8005 .config \u6709\u65f6\u5019\u5e76\u4e0d\u80fd\u8fbe\u5230\u60f3\u8981\u7684\u6548\u679c\u3002\u56e0\u6b64\u5982\u679c\u9700\u8981\u4fee\u6539\u914d\u7f6e\u4e00\u822c\u91c7\u7528 make ARCH=riscv menuconfig \u7684\u65b9\u5f0f\u5bf9\u5185\u6838\u8fdb\u884c\u914d\u7f6e\u3002 \u5e38\u89c1\u53c2\u6570 ARCH \u6307\u5b9a\u67b6\u6784\uff0c\u53ef\u9009\u7684\u503c\u5305\u62ecarch\u76ee\u5f55\u4e0b\u7684\u6587\u4ef6\u5939\u540d\uff0c\u5982 x86\u3001arm\u3001arm64 \u7b49\uff0c\u4e0d\u540c\u4e8e arm \u548c arm64\uff0c32 \u4f4d\u548c 64 \u4f4d\u7684RISC-V\u5171\u7528 arch/riscv \u76ee\u5f55\uff0c\u901a\u8fc7\u4f7f\u7528\u4e0d\u540c\u7684 config \u53ef\u4ee5\u7f16\u8bd1 32 \u4f4d\u6216 64 \u4f4d\u7684\u5185\u6838\u3002 CROSS_COMPILE \u6307\u5b9a\u4f7f\u7528\u7684\u4ea4\u53c9\u7f16\u8bd1\u5de5\u5177\u94fe\uff0c\u4f8b\u5982\u6307\u5b9a CROSS_COMPILE=riscv64-linux-gnu- \uff0c\u5219\u7f16\u8bd1\u65f6\u4f1a\u91c7\u7528 riscv64-linux-gnu-gcc \u4f5c\u4e3a\u7f16\u8bd1\u5668\uff0c\u7f16\u8bd1\u53ef\u4ee5\u5728 RISC-V 64 \u4f4d\u5e73\u53f0\u4e0a\u8fd0\u884c\u7684 kernel\u3002 \u5e38\u7528\u7684 Linux \u4e0b\u7684\u7f16\u8bd1\u9009\u9879 1 2 3 4 5 6 7 8 9 10 $ make help # \u67e5\u770bmake\u547d\u4ee4\u7684\u5404\u79cd\u53c2\u6570\u89e3\u91ca $ make defconfig # \u4f7f\u7528\u5f53\u524d\u5e73\u53f0\u7684\u9ed8\u8ba4\u914d\u7f6e\uff0c\u5728x86\u673a\u5668\u4e0a\u4f1a\u4f7f\u7528x86\u7684\u9ed8\u8ba4\u914d\u7f6e $ make -j $( nproc ) # \u7f16\u8bd1\u5f53\u524d\u5e73\u53f0\u7684\u5185\u6838\uff0c-j$(nproc) \u4e3a\u4ee5\u5168\u90e8\u673a\u5668\u786c\u4ef6\u7ebf\u7a0b\u6570\u8fdb\u884c\u591a\u7ebf\u7a0b\u7f16\u8bd1 $ make -j4 # \u7f16\u8bd1\u5f53\u524d\u5e73\u53f0\u7684\u5185\u6838\uff0c-j4 \u4e3a\u4f7f\u7528 4 \u7ebf\u7a0b\u8fdb\u884c\u591a\u7ebf\u7a0b\u7f16\u8bd1 $ make ARCH = riscv defconfig # \u4f7f\u7528 RISC-V \u5e73\u53f0\u7684\u9ed8\u8ba4\u914d\u7f6e $ make ARCH = riscv CROSS_COMPILE = riscv64-linux-gnu- -j $( nproc ) # \u7f16\u8bd1 RISC-V \u5e73\u53f0\u5185\u6838 $ make clean # \u6e05\u9664\u6240\u6709\u7f16\u8bd1\u597d\u7684 object \u6587\u4ef6 4 \u5b9e\u9a8c\u6b65\u9aa4 \u5728\u6267\u884c\u6bcf\u4e00\u6761\u547d\u4ee4\u524d\uff0c\u8bf7\u4f60\u5bf9\u5c06\u8981\u8fdb\u884c\u7684\u64cd\u4f5c\u8fdb\u884c\u601d\u8003\uff0c\u7ed9\u51fa\u7684\u547d\u4ee4\u4e0d\u9700\u8981\u5168\u90e8\u6267\u884c\uff0c\u5e76\u4e14\u4e0d\u662f\u6240\u6709\u7684\u547d\u4ee4\u90fd\u53ef\u4ee5\u65e0\u6761\u4ef6\u6267\u884c\uff0c\u8bf7\u4e0d\u8981\u76f4\u63a5\u590d\u5236\u7c98\u8d34\u547d\u4ee4\u53bb\u6267\u884c\u3002 4.1 \u642d\u5efa\u5b9e\u9a8c\u73af\u5883 \u8bf7\u6839\u636e 3.2 \u5b9e\u9a8c\u73af\u5883\u914d\u7f6e \u5b89\u88c5\u5b9e\u9a8c\u73af\u5883\u3002 4.2 \u83b7\u53d6 Linux \u6e90\u7801\u548c\u5df2\u7ecf\u7f16\u8bd1\u597d\u7684\u6587\u4ef6\u7cfb\u7edf \u4ece https://www.kernel.org \u4e0b\u8f7d\u6700\u65b0\u7684 Linux \u6e90\u7801\u3002 \u8fd9\u91cc\u53ef\u4ee5\u4f7f\u7528 wget \u547d\u4ee4\u83b7\u53d6\u6e90\u7801\uff08\u53ef\u80fd\u9700\u8981\u4f7f\u7528 tar \u547d\u4ee4\u89e3\u538b\uff09 \u5e76\u4e14\u4f7f\u7528 git \u5de5\u5177 clone \u672c\u4ed3\u5e93 \u3002\u5176\u4e2d\u5df2\u7ecf\u51c6\u5907\u597d\u4e86BIOS fw_jump.bin \u4ee5\u53ca\u6839\u6587\u4ef6\u7cfb\u7edf\u7684\u955c\u50cf rootfs.img \u3002 \u6839\u6587\u4ef6\u7cfb\u7edf\u4e3a Linux Kenrel \u63d0\u4f9b\u4e86\u57fa\u7840\u7684\u6587\u4ef6\u670d\u52a1\uff0c\u5728\u542f\u52a8 Linux Kernel \u65f6\u662f\u5fc5\u8981\u7684\u3002 1 2 3 4 $ git clone https://git.zju.edu.cn/zju-sys/sys2lab-22fall-stu.git $ cd sys2lab-22fall-stu/src/lab3 $ ls fw_jump.bin rootfs.img 4.3 \u7f16\u8bd1 linux \u5185\u6838 1 2 3 4 5 # \u8fdb\u5165linux\u5185\u6838\u6240\u5728\u8def\u5f84\u540e\uff0c\u4f7f\u7528pwd\u786e\u8ba4\u8def\u5f84 $ pwd path/to/lab3/linux $ make ARCH = riscv CROSS_COMPILE = riscv64-linux-gnu- defconfig # \u751f\u6210\u914d\u7f6e $ make ARCH = riscv CROSS_COMPILE = riscv64-linux-gnu- -j $( nproc ) # \u7f16\u8bd1 \u4f7f\u7528\u591a\u7ebf\u7a0b\u7f16\u8bd1\u4e00\u822c\u4f1a\u8017\u8d39\u5927\u91cf\u5185\u5b58\uff0c\u5982\u679c -j \u9009\u9879\u5bfc\u81f4\u5185\u5b58\u8017\u5c3d (out of memory)\uff0c\u8bf7\u5c1d\u8bd5\u8c03\u4f4e\u7ebf\u7a0b\u6570\uff0c\u6bd4\u5982 -j4 , -j8 \u7b49\u3002 4.4 \u4f7f\u7528QEMU\u8fd0\u884c\u5185\u6838 1 2 3 $ qemu-system-riscv64 -nographic -machine virt -kernel path/to/linux/arch/riscv/boot/Image \\ -device virtio-blk-device,drive = hd0 -append \"root=/dev/vda ro console=ttyS0\" \\ -bios fw_jump.bin -drive file = rootfs.img,format = raw,id = hd0 \u9000\u51fa QEMU \u7684\u65b9\u6cd5\u4e3a\uff1a\u4f7f\u7528 Ctrl+A\uff0c \u677e\u5f00 \u540e\u518d\u6309\u4e0b X \u952e\u5373\u53ef\u9000\u51fa QEMU\u3002 4.5 \u4f7f\u7528 GDB \u5bf9\u5185\u6838\u8fdb\u884c\u8c03\u8bd5 \u8fd9\u4e00\u6b65\u9700\u8981\u5f00\u542f\u4e24\u4e2a Terminal Session\uff0c\u4e00\u4e2a Terminal \u4f7f\u7528 QEMU \u542f\u52a8 Linux\uff0c\u53e6\u4e00\u4e2a Terminal \u4f7f\u7528 GDB \u4e0e QEMU \u8fdc\u7a0b\u901a\u4fe1\uff08\u4f7f\u7528 tcp::1234 \u7aef\u53e3\uff09\u8fdb\u884c\u8c03\u8bd5\u3002 1 2 3 4 5 6 7 8 9 10 11 # Terminal 1 $ qemu-system-riscv64 -nographic -machine virt -kernel path/to/linux/arch/riscv/boot/Image \\ -device virtio-blk-device,drive = hd0 -append \"root=/dev/vda ro console=ttyS0\" \\ -bios fw_jump.bin -drive file = rootfs.img,format = raw,id = hd0 -S -s # Terminal 2 $ gdb-multiarch path/to/linux/vmlinux ( gdb ) target remote localhost:1234 # \u8fde\u63a5 qemu ( gdb ) b start_kernel # \u8bbe\u7f6e\u65ad\u70b9 ( gdb ) continue # \u7ee7\u7eed\u6267\u884c ( gdb ) quit # \u9000\u51fa gdb 5 \u5b9e\u9a8c\u4efb\u52a1\u4e0e\u8981\u6c42 \u8bf7\u5404\u4f4d\u540c\u5b66\u72ec\u7acb\u5b8c\u6210\u4f5c\u4e1a\uff0c\u4efb\u4f55\u6284\u88ad\u884c\u4e3a\u90fd\u5c06\u4f7f\u672c\u6b21\u4f5c\u4e1a\u5224\u4e3a0\u5206\u3002 \u7f16\u8bd1\u5185\u6838\u5e76\u7528 GDB + QEMU \u8c03\u8bd5\uff0c\u5728\u5185\u6838\u521d\u59cb\u5316\u8fc7\u7a0b\u4e2d\u8bbe\u7f6e\u65ad\u70b9\uff0c\u5bf9\u5185\u6838\u7684\u542f\u52a8\u8fc7\u7a0b\u8fdb\u884c\u8ddf\u8e2a\uff0c\u5e76\u5c1d\u8bd5\u4f7f\u7528gdb\u7684\u5404\u9879\u547d\u4ee4\uff08\u5982backtrace\u3001finish\u3001frame\u3001info\u3001break\u3001display\u3001next\u3001layout\u7b49\uff09\u3002 \u5728\u5b66\u5728\u6d59\u5927\u4e2d\u63d0\u4ea4 pdf \u683c\u5f0f\u7684\u5b9e\u9a8c\u62a5\u544a\uff0c\u8bb0\u5f55\u5b9e\u9a8c\u8fc7\u7a0b\u5e76\u622a\u56fe\uff084.1-4.4\uff09\uff0c\u5bf9\u6bcf\u4e00\u6b65\u7684\u547d\u4ee4\u4ee5\u53ca\u7ed3\u679c\u8fdb\u884c\u5fc5\u8981\u7684\u89e3\u91ca\uff0c\u8bb0\u5f55\u9047\u5230\u7684\u95ee\u9898\u548c\u5fc3\u5f97\u4f53\u4f1a\u3002 \u601d\u8003\u9898 \u4f7f\u7528 riscv64-linux-gnu-gcc \u7f16\u8bd1\u5355\u4e2a .c \u6587\u4ef6 \u4f7f\u7528 riscv64-linux-gnu-objdump \u53cd\u6c47\u7f16 1 \u4e2d\u5f97\u5230\u7684\u7f16\u8bd1\u4ea7\u7269 \u8c03\u8bd5 Linux \u65f6: \u5728 GDB \u4e2d\u67e5\u770b\u6c47\u7f16\u4ee3\u7801 \u5728 0x80000000 \u5904\u4e0b\u65ad\u70b9 \u67e5\u770b\u6240\u6709\u5df2\u4e0b\u7684\u65ad\u70b9 \u5728 0x80200000 \u5904\u4e0b\u65ad\u70b9 \u6e05\u9664 0x80000000 \u5904\u7684\u65ad\u70b9 \u7ee7\u7eed\u8fd0\u884c\u76f4\u5230\u89e6\u53d1 0x80200000 \u5904\u7684\u65ad\u70b9 \u5355\u6b65\u8c03\u8bd5\u4e00\u6b21 \u9000\u51fa QEMU \u5b66\u4e60Makefile\u7684\u57fa\u672c\u4f7f\u7528\uff1a \u89c2\u5bdf\u53ef\u7528\u7684target\uff0c\u5e94\u8be5\u4f7f\u7528 make ? \u6765\u6e05\u9664Linux\u7684\u6784\u5efa\u4ea7\u7269\uff1f \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u5185\u6838\u7f16\u8bd1\u663e\u793a\u7684\u662f\u7b80\u7565\u4fe1\u606f\uff08\u4f8b\u5982\uff1a CC init/main.o \uff09\uff0c\u5e94\u8be5\u4f7f\u7528 make ? \u6765\u663e\u793aLinux\u8be6\u7ec6\u7684\u7f16\u8bd1\u8fc7\u7a0b\u5462\uff1f","title":"\u5b9e\u9a8c\u6307\u5bfc\u4e09"},{"location":"lab3/#3-gdb-qemu-64-risc-v-linux","text":"","title":"\u5b9e\u9a8c3: GDB + QEMU \u8c03\u8bd5 64 \u4f4d RISC-V LINUX"},{"location":"lab3/#1","text":"\u4e86\u89e3\u5bb9\u5668\u7684\u4f7f\u7528 \u4f7f\u7528\u4ea4\u53c9\u7f16\u8bd1\u5de5\u5177, \u5b8c\u6210Linux\u5185\u6838\u4ee3\u7801\u7f16\u8bd1 \u4f7f\u7528QEMU\u8fd0\u884c\u5185\u6838 \u719f\u6089GDB\u548cQEMU\u8054\u5408\u8c03\u8bd5","title":"1 \u5b9e\u9a8c\u76ee\u7684"},{"location":"lab3/#2","text":"Ubuntu 20.04, 22.04","title":"2 \u5b9e\u9a8c\u73af\u5883"},{"location":"lab3/#3","text":"","title":"3 \u5b9e\u9a8c\u57fa\u7840\u77e5\u8bc6\u4ecb\u7ecd"},{"location":"lab3/#31-linux","text":"\u5728Linux\u73af\u5883\u4e0b\uff0c\u4eba\u4eec\u901a\u5e38\u4f7f\u7528\u547d\u4ee4\u884c\u63a5\u53e3\u6765\u5b8c\u6210\u4e0e\u8ba1\u7b97\u673a\u7684\u4ea4\u4e92\u3002\u7ec8\u7aef\uff08Terminal\uff09\u662f\u7528\u4e8e\u5904\u7406\u8be5\u8fc7\u7a0b\u7684\u4e00\u4e2a\u5e94\u7528\u7a0b\u5e8f\uff0c\u901a\u8fc7\u7ec8\u7aef\u4f60\u53ef\u4ee5\u8fd0\u884c\u5404\u79cd\u7a0b\u5e8f\u4ee5\u53ca\u5728\u81ea\u5df1\u7684\u8ba1\u7b97\u673a\u4e0a\u5904\u7406\u6587\u4ef6\u3002\u5728\u7c7bUnix\u7684\u64cd\u4f5c\u7cfb\u7edf\u4e0a\uff0c\u7ec8\u7aef\u53ef\u4ee5\u4e3a\u4f60\u5b8c\u6210\u4e00\u5207\u4f60\u6240\u9700\u8981\u7684\u64cd\u4f5c\u3002\u4e0b\u9762\u6211\u4eec\u4ec5\u5bf9\u5b9e\u9a8c\u4e2d\u6d89\u53ca\u7684\u4e00\u4e9b\u6982\u5ff5\u8fdb\u884c\u4ecb\u7ecd\uff0c\u4f60\u53ef\u4ee5\u901a\u8fc7\u4e0b\u9762\u7684\u94fe\u63a5\u6765\u5bf9\u547d\u4ee4\u884c\u7684\u4f7f\u7528\u8fdb\u884c\u5b66\u4e60\uff1a The Missing Semester of Your CS Education >>Video<< GNU/Linux Command-Line Tools Summary Basics of UNIX","title":"3.1 Linux \u4f7f\u7528\u57fa\u7840"},{"location":"lab3/#32","text":"\u5728\u63a5\u4e0b\u6765\u7684\u64cd\u4f5c\u7cfb\u7edf\u5b9e\u9a8c\u4e2d\uff0c\u6211\u4eec\u9700\u8981\u4f7f\u7528RISC-V\u5de5\u5177\u94fe\u4ee5\u53caQEMU\u6a21\u62df\u5668\u6765\u5b8c\u6210\u3002 \u5728\u7ec8\u7aef\u4e2d\u8f93\u5165\u4e00\u4e0b\u547d\u4ee4\u5b8c\u6210\u5b89\u88c5\uff1a 1 $ sudo apt install qemu-system-misc gcc-riscv64-linux-gnu gdb-multiarch \u5b89\u88c5\u5b8c\u6210\u540e\uff0c\u5728\u7ec8\u7aef\u4e2d\u8fd0\u884c\u4e00\u4e0b riscv64-linux-gnu-gcc --version; qemu-system-riscv64 --version; gdb-multiarch --version \u6765\u68c0\u6d4b\u4e00\u4e0b\u662f\u5426\u6240\u9700\u7684\u8f6f\u4ef6\u90fd\u5df2\u7ecf\u5b89\u88c5\u6210\u529f\u3002 \u5982\u679c\u4f60\u7684\u7cfb\u7edf\u4e0e\u5b9e\u9a8c\u73af\u5883\u4e0d\u540c\u4e14\u7ecf\u8fc7\u5c1d\u8bd5\u65e0\u6cd5\u5b89\u88c5\u4e0a\u8ff0\u7684\u8f6f\u4ef6\uff0c\u53ef\u4ee5\u5c1d\u8bd5\u4f7f\u7528 \u5f80\u5e74\u5b9e\u9a8c \u4e2d\u7684docker\u955c\u50cf\u3002","title":"3.2 \u5b9e\u9a8c\u73af\u5883\u914d\u7f6e"},{"location":"lab3/#33-qemu","text":"","title":"3.3 QEMU \u4f7f\u7528\u57fa\u7840"},{"location":"lab3/#qemu","text":"QEMU \u662f\u4e00\u4e2a\u529f\u80fd\u5f3a\u5927\u7684\u6a21\u62df\u5668\uff0c\u53ef\u4ee5\u5728 x86 \u5e73\u53f0\u4e0a\u6267\u884c\u4e0d\u540c\u67b6\u6784\u4e0b\u7684\u7a0b\u5e8f\u3002\u6211\u4eec\u5b9e\u9a8c\u4e2d\u91c7\u7528 QEMU \u6765\u5b8c\u6210 RISC-V \u67b6\u6784\u7684\u7a0b\u5e8f\u7684\u6a21\u62df\u3002","title":"\u4ec0\u4e48\u662fQEMU"},{"location":"lab3/#qemu_1","text":"\u4ee5\u4ee5\u4e0b\u547d\u4ee4\u4e3a\u4f8b\uff0c\u6211\u4eec\u7b80\u5355\u4ecb\u7ecd QEMU \u7684\u53c2\u6570\u6240\u4ee3\u8868\u7684\u542b\u4e49 1 2 3 4 5 6 7 8 9 $ qemu-system-riscv64 \\ -nographic \\ -machine virt \\ -kernel path/to/linux/arch/riscv/boot/Image \\ -device virtio-blk-device,drive = hd0 \\ -append \"root=/dev/vda ro console=ttyS0\" \\ -bios fw_jump.bin \\ -drive file = rootfs.img,format = raw,id = hd0 \\ -S -s -nographic : \u4e0d\u4f7f\u7528\u56fe\u5f62\u7a97\u53e3\uff0c\u4f7f\u7528\u547d\u4ee4\u884c -machine : \u6307\u5b9a\u8981emulate\u7684\u673a\u5668\uff0c\u53ef\u4ee5\u901a\u8fc7\u547d\u4ee4 qemu-system-riscv64 -machine help \u67e5\u770b\u53ef\u9009\u62e9\u7684\u673a\u5668\u9009\u9879 -kernel : \u6307\u5b9a\u5185\u6838image -append cmdline : \u4f7f\u7528cmdline\u4f5c\u4e3a\u5185\u6838\u7684\u547d\u4ee4\u884c -device : \u6307\u5b9a\u8981\u6a21\u62df\u7684\u8bbe\u5907\uff0c\u53ef\u4ee5\u901a\u8fc7\u547d\u4ee4 qemu-system-riscv64 -device help \u67e5\u770b\u53ef\u9009\u62e9\u7684\u8bbe\u5907\uff0c\u901a\u8fc7\u547d\u4ee4 qemu-system-riscv64 -device <\u5177\u4f53\u7684\u8bbe\u5907>,help \u67e5\u770b\u67d0\u4e2a\u8bbe\u5907\u7684\u547d\u4ee4\u9009\u9879 -drive, file=<file_name> : \u4f7f\u7528 file_name \u4f5c\u4e3a\u6587\u4ef6\u7cfb\u7edf -S : \u542f\u52a8\u65f6\u6682\u505cCPU\u6267\u884c -s : -gdb tcp::1234 \u7684\u7b80\u5199 -bios default : \u4f7f\u7528fw_jump.bin\u4f5c\u4e3abootloader \u66f4\u591a\u53c2\u6570\u4fe1\u606f\u53ef\u4ee5\u53c2\u8003 \u8fd9\u91cc","title":"\u5982\u4f55\u4f7f\u7528 QEMU\uff08\u5e38\u89c1\u53c2\u6570\u4ecb\u7ecd\uff09"},{"location":"lab3/#34-gdb","text":"","title":"3.4 GDB \u4f7f\u7528\u57fa\u7840"},{"location":"lab3/#gdb","text":"GNU \u8c03\u8bd5\u5668\uff08\u82f1\u8bed\uff1aGNU Debugger\uff0c\u7f29\u5199\uff1agdb\uff09\u662f\u4e00\u4e2a\u7531 GNU \u5f00\u6e90\u7ec4\u7ec7\u53d1\u5e03\u7684\u3001UNIX/LINUX\u64cd\u4f5c\u7cfb\u7edf\u4e0b\u7684\u3001\u57fa\u4e8e\u547d\u4ee4\u884c\u7684\u3001\u529f\u80fd\u5f3a\u5927\u7684\u7a0b\u5e8f\u8c03\u8bd5\u5de5\u5177\u3002\u501f\u52a9\u8c03\u8bd5\u5668\uff0c\u6211\u4eec\u80fd\u591f\u67e5\u770b\u53e6\u4e00\u4e2a\u7a0b\u5e8f\u5728\u6267\u884c\u65f6\u5b9e\u9645\u5728\u505a\u4ec0\u4e48\uff08\u6bd4\u5982\u8bbf\u95ee\u54ea\u4e9b\u5185\u5b58\u3001\u5bc4\u5b58\u5668\uff09\uff0c\u5728\u5176\u4ed6\u7a0b\u5e8f\u5d29\u6e83\u7684\u65f6\u5019\u53ef\u4ee5\u6bd4\u8f83\u5feb\u901f\u5730\u4e86\u89e3\u5bfc\u81f4\u7a0b\u5e8f\u5d29\u6e83\u7684\u539f\u56e0\u3002 \u88ab\u8c03\u8bd5\u7684\u7a0b\u5e8f\u53ef\u4ee5\u662f\u548cgdb\u5728\u540c\u4e00\u53f0\u673a\u5668\u4e0a\uff08\u672c\u5730\u8c03\u8bd5\uff0cor native debug\uff09\uff0c\u4e5f\u53ef\u4ee5\u662f\u4e0d\u540c\u673a\u5668\u4e0a\uff08\u8fdc\u7a0b\u8c03\u8bd5\uff0c or remote debug\uff09\u3002 \u603b\u7684\u6765\u8bf4\uff0cgdb\u53ef\u4ee5\u6709\u4ee5\u4e0b4\u4e2a\u529f\u80fd\uff1a \u542f\u52a8\u7a0b\u5e8f\uff0c\u5e76\u6307\u5b9a\u53ef\u80fd\u5f71\u54cd\u5176\u884c\u4e3a\u7684\u6240\u6709\u5185\u5bb9 \u4f7f\u7a0b\u5e8f\u5728\u6307\u5b9a\u6761\u4ef6\u4e0b\u505c\u6b62 \u68c0\u67e5\u7a0b\u5e8f\u505c\u6b62\u65f6\u53d1\u751f\u4e86\u4ec0\u4e48 \u66f4\u6539\u7a0b\u5e8f\u4e2d\u7684\u5185\u5bb9\uff0c\u4ee5\u4fbf\u7ea0\u6b63\u4e00\u4e2abug\u7684\u5f71\u54cd","title":"\u4ec0\u4e48\u662f GDB"},{"location":"lab3/#gdb_1","text":"(gdb) layout asm: \u663e\u793a\u6c47\u7f16\u4ee3\u7801 (gdb) start: \u5355\u6b65\u6267\u884c\uff0c\u8fd0\u884c\u7a0b\u5e8f\uff0c\u505c\u5728\u7b2c\u4e00\u6267\u884c\u8bed\u53e5 (gdb) continue: \u4ece\u65ad\u70b9\u540e\u7ee7\u7eed\u6267\u884c\uff0c\u7b80\u5199 c (gdb) next: \u5355\u6b65\u8c03\u8bd5\uff08\u9010\u8fc7\u7a0b\uff0c\u51fd\u6570\u76f4\u63a5\u6267\u884c\uff09\uff0c\u7b80\u5199 n (gdb) step instruction: \u6267\u884c\u5355\u6761\u6307\u4ee4\uff0c\u7b80\u5199 si (gdb) run: \u91cd\u65b0\u5f00\u59cb\u8fd0\u884c\u6587\u4ef6\uff08run-text\uff1a\u52a0\u8f7d\u6587\u672c\u6587\u4ef6\uff0crun-bin\uff1a\u52a0\u8f7d\u4e8c\u8fdb\u5236\u6587\u4ef6\uff09\uff0c\u7b80\u5199 r (gdb) backtrace\uff1a\u67e5\u770b\u51fd\u6570\u7684\u8c03\u7528\u7684\u6808\u5e27\u548c\u5c42\u7ea7\u5173\u7cfb\uff0c\u7b80\u5199 bt (gdb) break \u8bbe\u7f6e\u65ad\u70b9\uff0c\u7b80\u5199 b \u65ad\u5728 foo \u51fd\u6570\uff1a b foo \u65ad\u5728\u67d0\u5730\u5740: b * 0x80200000 (gdb) finish: \u7ed3\u675f\u5f53\u524d\u51fd\u6570\uff0c\u8fd4\u56de\u5230\u51fd\u6570\u8c03\u7528\u70b9 (gdb) frame: \u5207\u6362\u51fd\u6570\u7684\u6808\u5e27\uff0c\u7b80\u5199 f (gdb) print: \u6253\u5370\u503c\u53ca\u5730\u5740\uff0c\u7b80\u5199 p (gdb) info\uff1a\u67e5\u770b\u51fd\u6570\u5185\u90e8\u5c40\u90e8\u53d8\u91cf\u7684\u6570\u503c\uff0c\u7b80\u5199 i \u67e5\u770b\u5bc4\u5b58\u5668 ra \u7684\u503c\uff1a i r ra (gdb) display\uff1a\u8ffd\u8e2a\u67e5\u770b\u5177\u4f53\u53d8\u91cf\u503c (gdb) x/4x : \u4ee5 16 \u8fdb\u5236\u6253\u5370 \u5904\u5f00\u59cb\u7684 16 Bytes \u5185\u5bb9 \u66f4\u591a\u547d\u4ee4\u53ef\u4ee5\u53c2\u8003 100\u4e2agdb\u5c0f\u6280\u5de7","title":"GDB \u57fa\u672c\u547d\u4ee4\u4ecb\u7ecd"},{"location":"lab3/#35-linux","text":"","title":"3.5 Linux \u5185\u6838\u7f16\u8bd1\u57fa\u7840"},{"location":"lab3/#_1","text":"\u4ea4\u53c9\u7f16\u8bd1\u6307\u7684\u662f\u5728\u4e00\u4e2a\u5e73\u53f0\u4e0a\u7f16\u8bd1\u53ef\u4ee5\u5728\u53e6\u4e00\u4e2a\u67b6\u6784\u8fd0\u884c\u7684\u7a0b\u5e8f\u3002\u4f8b\u5982\u5728 x86 \u673a\u5668\u4e0a\u7f16\u8bd1\u53ef\u4ee5\u5728 RISC-V \u67b6\u6784\u8fd0\u884c\u7684\u7a0b\u5e8f\uff0c\u4ea4\u53c9\u7f16\u8bd1\u9700\u8981\u4ea4\u53c9\u7f16\u8bd1\u5de5\u5177\u94fe\u7684\u652f\u6301\uff0c\u5728\u6211\u4eec\u7684\u5b9e\u9a8c\u4e2d\u6240\u7528\u7684\u4ea4\u53c9\u7f16\u8bd1\u5de5\u5177\u94fe\u5c31\u662f riscv-gnu-toolchain \u3002","title":"\u4ea4\u53c9\u7f16\u8bd1"},{"location":"lab3/#_2","text":"\u5185\u6838\u914d\u7f6e\u662f\u7528\u4e8e\u914d\u7f6e\u662f\u5426\u542f\u7528\u5185\u6838\u7684\u5404\u9879\u7279\u6027\uff0c\u5185\u6838\u4f1a\u63d0\u4f9b\u4e00\u4e2a\u540d\u4e3a defconfig (\u5373default configuration) \u7684\u9ed8\u8ba4\u914d\u7f6e\uff0c\u8be5\u914d\u7f6e\u6587\u4ef6\u4f4d\u4e8e\u5404\u4e2a\u67b6\u6784\u76ee\u5f55\u7684 configs \u6587\u4ef6\u5939\u4e0b\uff0c\u4f8b\u5982\u5bf9\u4e8eRISC-V\u800c\u8a00\uff0c\u5176\u9ed8\u8ba4\u914d\u7f6e\u6587\u4ef6\u4e3a arch/riscv/configs/defconfig \u3002\u4f7f\u7528 make ARCH=riscv defconfig \u547d\u4ee4\u53ef\u4ee5\u5728\u5185\u6838\u6839\u76ee\u5f55\u4e0b\u751f\u6210\u4e00\u4e2a\u540d\u4e3a .config \u7684\u6587\u4ef6\uff0c\u5305\u542b\u4e86\u5185\u6838\u5b8c\u6574\u7684\u914d\u7f6e\uff0c\u5185\u6838\u5728\u7f16\u8bd1\u65f6\u4f1a\u6839\u636e .config \u8fdb\u884c\u7f16\u8bd1\u3002\u914d\u7f6e\u4e4b\u95f4\u5b58\u5728\u76f8\u4e92\u7684\u4f9d\u8d56\u5173\u7cfb\uff0c\u76f4\u63a5\u4fee\u6539defconfig\u6587\u4ef6\u6216\u8005 .config \u6709\u65f6\u5019\u5e76\u4e0d\u80fd\u8fbe\u5230\u60f3\u8981\u7684\u6548\u679c\u3002\u56e0\u6b64\u5982\u679c\u9700\u8981\u4fee\u6539\u914d\u7f6e\u4e00\u822c\u91c7\u7528 make ARCH=riscv menuconfig \u7684\u65b9\u5f0f\u5bf9\u5185\u6838\u8fdb\u884c\u914d\u7f6e\u3002","title":"\u5185\u6838\u914d\u7f6e"},{"location":"lab3/#_3","text":"ARCH \u6307\u5b9a\u67b6\u6784\uff0c\u53ef\u9009\u7684\u503c\u5305\u62ecarch\u76ee\u5f55\u4e0b\u7684\u6587\u4ef6\u5939\u540d\uff0c\u5982 x86\u3001arm\u3001arm64 \u7b49\uff0c\u4e0d\u540c\u4e8e arm \u548c arm64\uff0c32 \u4f4d\u548c 64 \u4f4d\u7684RISC-V\u5171\u7528 arch/riscv \u76ee\u5f55\uff0c\u901a\u8fc7\u4f7f\u7528\u4e0d\u540c\u7684 config \u53ef\u4ee5\u7f16\u8bd1 32 \u4f4d\u6216 64 \u4f4d\u7684\u5185\u6838\u3002 CROSS_COMPILE \u6307\u5b9a\u4f7f\u7528\u7684\u4ea4\u53c9\u7f16\u8bd1\u5de5\u5177\u94fe\uff0c\u4f8b\u5982\u6307\u5b9a CROSS_COMPILE=riscv64-linux-gnu- \uff0c\u5219\u7f16\u8bd1\u65f6\u4f1a\u91c7\u7528 riscv64-linux-gnu-gcc \u4f5c\u4e3a\u7f16\u8bd1\u5668\uff0c\u7f16\u8bd1\u53ef\u4ee5\u5728 RISC-V 64 \u4f4d\u5e73\u53f0\u4e0a\u8fd0\u884c\u7684 kernel\u3002","title":"\u5e38\u89c1\u53c2\u6570"},{"location":"lab3/#linux","text":"1 2 3 4 5 6 7 8 9 10 $ make help # \u67e5\u770bmake\u547d\u4ee4\u7684\u5404\u79cd\u53c2\u6570\u89e3\u91ca $ make defconfig # \u4f7f\u7528\u5f53\u524d\u5e73\u53f0\u7684\u9ed8\u8ba4\u914d\u7f6e\uff0c\u5728x86\u673a\u5668\u4e0a\u4f1a\u4f7f\u7528x86\u7684\u9ed8\u8ba4\u914d\u7f6e $ make -j $( nproc ) # \u7f16\u8bd1\u5f53\u524d\u5e73\u53f0\u7684\u5185\u6838\uff0c-j$(nproc) \u4e3a\u4ee5\u5168\u90e8\u673a\u5668\u786c\u4ef6\u7ebf\u7a0b\u6570\u8fdb\u884c\u591a\u7ebf\u7a0b\u7f16\u8bd1 $ make -j4 # \u7f16\u8bd1\u5f53\u524d\u5e73\u53f0\u7684\u5185\u6838\uff0c-j4 \u4e3a\u4f7f\u7528 4 \u7ebf\u7a0b\u8fdb\u884c\u591a\u7ebf\u7a0b\u7f16\u8bd1 $ make ARCH = riscv defconfig # \u4f7f\u7528 RISC-V \u5e73\u53f0\u7684\u9ed8\u8ba4\u914d\u7f6e $ make ARCH = riscv CROSS_COMPILE = riscv64-linux-gnu- -j $( nproc ) # \u7f16\u8bd1 RISC-V \u5e73\u53f0\u5185\u6838 $ make clean # \u6e05\u9664\u6240\u6709\u7f16\u8bd1\u597d\u7684 object \u6587\u4ef6","title":"\u5e38\u7528\u7684 Linux \u4e0b\u7684\u7f16\u8bd1\u9009\u9879"},{"location":"lab3/#4","text":"\u5728\u6267\u884c\u6bcf\u4e00\u6761\u547d\u4ee4\u524d\uff0c\u8bf7\u4f60\u5bf9\u5c06\u8981\u8fdb\u884c\u7684\u64cd\u4f5c\u8fdb\u884c\u601d\u8003\uff0c\u7ed9\u51fa\u7684\u547d\u4ee4\u4e0d\u9700\u8981\u5168\u90e8\u6267\u884c\uff0c\u5e76\u4e14\u4e0d\u662f\u6240\u6709\u7684\u547d\u4ee4\u90fd\u53ef\u4ee5\u65e0\u6761\u4ef6\u6267\u884c\uff0c\u8bf7\u4e0d\u8981\u76f4\u63a5\u590d\u5236\u7c98\u8d34\u547d\u4ee4\u53bb\u6267\u884c\u3002","title":"4 \u5b9e\u9a8c\u6b65\u9aa4"},{"location":"lab3/#41","text":"\u8bf7\u6839\u636e 3.2 \u5b9e\u9a8c\u73af\u5883\u914d\u7f6e \u5b89\u88c5\u5b9e\u9a8c\u73af\u5883\u3002","title":"4.1 \u642d\u5efa\u5b9e\u9a8c\u73af\u5883"},{"location":"lab3/#42-linux","text":"\u4ece https://www.kernel.org \u4e0b\u8f7d\u6700\u65b0\u7684 Linux \u6e90\u7801\u3002 \u8fd9\u91cc\u53ef\u4ee5\u4f7f\u7528 wget \u547d\u4ee4\u83b7\u53d6\u6e90\u7801\uff08\u53ef\u80fd\u9700\u8981\u4f7f\u7528 tar \u547d\u4ee4\u89e3\u538b\uff09 \u5e76\u4e14\u4f7f\u7528 git \u5de5\u5177 clone \u672c\u4ed3\u5e93 \u3002\u5176\u4e2d\u5df2\u7ecf\u51c6\u5907\u597d\u4e86BIOS fw_jump.bin \u4ee5\u53ca\u6839\u6587\u4ef6\u7cfb\u7edf\u7684\u955c\u50cf rootfs.img \u3002 \u6839\u6587\u4ef6\u7cfb\u7edf\u4e3a Linux Kenrel \u63d0\u4f9b\u4e86\u57fa\u7840\u7684\u6587\u4ef6\u670d\u52a1\uff0c\u5728\u542f\u52a8 Linux Kernel \u65f6\u662f\u5fc5\u8981\u7684\u3002 1 2 3 4 $ git clone https://git.zju.edu.cn/zju-sys/sys2lab-22fall-stu.git $ cd sys2lab-22fall-stu/src/lab3 $ ls fw_jump.bin rootfs.img","title":"4.2 \u83b7\u53d6 Linux \u6e90\u7801\u548c\u5df2\u7ecf\u7f16\u8bd1\u597d\u7684\u6587\u4ef6\u7cfb\u7edf"},{"location":"lab3/#43-linux","text":"1 2 3 4 5 # \u8fdb\u5165linux\u5185\u6838\u6240\u5728\u8def\u5f84\u540e\uff0c\u4f7f\u7528pwd\u786e\u8ba4\u8def\u5f84 $ pwd path/to/lab3/linux $ make ARCH = riscv CROSS_COMPILE = riscv64-linux-gnu- defconfig # \u751f\u6210\u914d\u7f6e $ make ARCH = riscv CROSS_COMPILE = riscv64-linux-gnu- -j $( nproc ) # \u7f16\u8bd1 \u4f7f\u7528\u591a\u7ebf\u7a0b\u7f16\u8bd1\u4e00\u822c\u4f1a\u8017\u8d39\u5927\u91cf\u5185\u5b58\uff0c\u5982\u679c -j \u9009\u9879\u5bfc\u81f4\u5185\u5b58\u8017\u5c3d (out of memory)\uff0c\u8bf7\u5c1d\u8bd5\u8c03\u4f4e\u7ebf\u7a0b\u6570\uff0c\u6bd4\u5982 -j4 , -j8 \u7b49\u3002","title":"4.3 \u7f16\u8bd1 linux \u5185\u6838"},{"location":"lab3/#44-qemu","text":"1 2 3 $ qemu-system-riscv64 -nographic -machine virt -kernel path/to/linux/arch/riscv/boot/Image \\ -device virtio-blk-device,drive = hd0 -append \"root=/dev/vda ro console=ttyS0\" \\ -bios fw_jump.bin -drive file = rootfs.img,format = raw,id = hd0 \u9000\u51fa QEMU \u7684\u65b9\u6cd5\u4e3a\uff1a\u4f7f\u7528 Ctrl+A\uff0c \u677e\u5f00 \u540e\u518d\u6309\u4e0b X \u952e\u5373\u53ef\u9000\u51fa QEMU\u3002","title":"4.4 \u4f7f\u7528QEMU\u8fd0\u884c\u5185\u6838"},{"location":"lab3/#45-gdb","text":"\u8fd9\u4e00\u6b65\u9700\u8981\u5f00\u542f\u4e24\u4e2a Terminal Session\uff0c\u4e00\u4e2a Terminal \u4f7f\u7528 QEMU \u542f\u52a8 Linux\uff0c\u53e6\u4e00\u4e2a Terminal \u4f7f\u7528 GDB \u4e0e QEMU \u8fdc\u7a0b\u901a\u4fe1\uff08\u4f7f\u7528 tcp::1234 \u7aef\u53e3\uff09\u8fdb\u884c\u8c03\u8bd5\u3002 1 2 3 4 5 6 7 8 9 10 11 # Terminal 1 $ qemu-system-riscv64 -nographic -machine virt -kernel path/to/linux/arch/riscv/boot/Image \\ -device virtio-blk-device,drive = hd0 -append \"root=/dev/vda ro console=ttyS0\" \\ -bios fw_jump.bin -drive file = rootfs.img,format = raw,id = hd0 -S -s # Terminal 2 $ gdb-multiarch path/to/linux/vmlinux ( gdb ) target remote localhost:1234 # \u8fde\u63a5 qemu ( gdb ) b start_kernel # \u8bbe\u7f6e\u65ad\u70b9 ( gdb ) continue # \u7ee7\u7eed\u6267\u884c ( gdb ) quit # \u9000\u51fa gdb","title":"4.5 \u4f7f\u7528 GDB \u5bf9\u5185\u6838\u8fdb\u884c\u8c03\u8bd5"},{"location":"lab3/#5","text":"\u8bf7\u5404\u4f4d\u540c\u5b66\u72ec\u7acb\u5b8c\u6210\u4f5c\u4e1a\uff0c\u4efb\u4f55\u6284\u88ad\u884c\u4e3a\u90fd\u5c06\u4f7f\u672c\u6b21\u4f5c\u4e1a\u5224\u4e3a0\u5206\u3002 \u7f16\u8bd1\u5185\u6838\u5e76\u7528 GDB + QEMU \u8c03\u8bd5\uff0c\u5728\u5185\u6838\u521d\u59cb\u5316\u8fc7\u7a0b\u4e2d\u8bbe\u7f6e\u65ad\u70b9\uff0c\u5bf9\u5185\u6838\u7684\u542f\u52a8\u8fc7\u7a0b\u8fdb\u884c\u8ddf\u8e2a\uff0c\u5e76\u5c1d\u8bd5\u4f7f\u7528gdb\u7684\u5404\u9879\u547d\u4ee4\uff08\u5982backtrace\u3001finish\u3001frame\u3001info\u3001break\u3001display\u3001next\u3001layout\u7b49\uff09\u3002 \u5728\u5b66\u5728\u6d59\u5927\u4e2d\u63d0\u4ea4 pdf \u683c\u5f0f\u7684\u5b9e\u9a8c\u62a5\u544a\uff0c\u8bb0\u5f55\u5b9e\u9a8c\u8fc7\u7a0b\u5e76\u622a\u56fe\uff084.1-4.4\uff09\uff0c\u5bf9\u6bcf\u4e00\u6b65\u7684\u547d\u4ee4\u4ee5\u53ca\u7ed3\u679c\u8fdb\u884c\u5fc5\u8981\u7684\u89e3\u91ca\uff0c\u8bb0\u5f55\u9047\u5230\u7684\u95ee\u9898\u548c\u5fc3\u5f97\u4f53\u4f1a\u3002","title":"5 \u5b9e\u9a8c\u4efb\u52a1\u4e0e\u8981\u6c42"},{"location":"lab3/#_4","text":"\u4f7f\u7528 riscv64-linux-gnu-gcc \u7f16\u8bd1\u5355\u4e2a .c \u6587\u4ef6 \u4f7f\u7528 riscv64-linux-gnu-objdump \u53cd\u6c47\u7f16 1 \u4e2d\u5f97\u5230\u7684\u7f16\u8bd1\u4ea7\u7269 \u8c03\u8bd5 Linux \u65f6: \u5728 GDB \u4e2d\u67e5\u770b\u6c47\u7f16\u4ee3\u7801 \u5728 0x80000000 \u5904\u4e0b\u65ad\u70b9 \u67e5\u770b\u6240\u6709\u5df2\u4e0b\u7684\u65ad\u70b9 \u5728 0x80200000 \u5904\u4e0b\u65ad\u70b9 \u6e05\u9664 0x80000000 \u5904\u7684\u65ad\u70b9 \u7ee7\u7eed\u8fd0\u884c\u76f4\u5230\u89e6\u53d1 0x80200000 \u5904\u7684\u65ad\u70b9 \u5355\u6b65\u8c03\u8bd5\u4e00\u6b21 \u9000\u51fa QEMU \u5b66\u4e60Makefile\u7684\u57fa\u672c\u4f7f\u7528\uff1a \u89c2\u5bdf\u53ef\u7528\u7684target\uff0c\u5e94\u8be5\u4f7f\u7528 make ? \u6765\u6e05\u9664Linux\u7684\u6784\u5efa\u4ea7\u7269\uff1f \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u5185\u6838\u7f16\u8bd1\u663e\u793a\u7684\u662f\u7b80\u7565\u4fe1\u606f\uff08\u4f8b\u5982\uff1a CC init/main.o \uff09\uff0c\u5e94\u8be5\u4f7f\u7528 make ? \u6765\u663e\u793aLinux\u8be6\u7ec6\u7684\u7f16\u8bd1\u8fc7\u7a0b\u5462\uff1f","title":"\u601d\u8003\u9898"},{"location":"lab4/","text":"\u5b9e\u9a8c4: RV64 \u5185\u6838\u5f15\u5bfc 1 \u5b9e\u9a8c\u76ee\u7684 \u5b66\u4e60RISC-V\u6c47\u7f16\uff0c \u7f16\u5199head.S\u5b9e\u73b0\u8df3\u8f6c\u5230\u5185\u6838\u8fd0\u884c\u7684\u7b2c\u4e00\u4e2aC\u51fd\u6570\u3002 \u5b66\u4e60OpenSBI\uff0c\u7406\u89e3OpenSBI\u5728\u5b9e\u9a8c\u4e2d\u6240\u8d77\u5230\u7684\u4f5c\u7528\uff0c\u5e76\u8c03\u7528OpenSBI\u63d0\u4f9b\u7684\u63a5\u53e3\u5b8c\u6210\u5b57\u7b26\u7684\u8f93\u51fa\u3002 \u5b66\u4e60Makefile\u76f8\u5173\u77e5\u8bc6\uff0c\u8865\u5145\u9879\u76ee\u4e2d\u7684Makefile\u6587\u4ef6\uff0c\u6765\u5b8c\u6210\u5bf9\u6574\u4e2a\u5de5\u7a0b\u7684\u7ba1\u7406\u3002 2 \u5b9e\u9a8c\u73af\u5883 Ubuntu 20.04, 22.04 3 \u5b9e\u9a8c\u57fa\u7840\u77e5\u8bc6\u4ecb\u7ecd 3.1 RISC-V \u67b6\u6784 \u5b9e\u9a8c\u4e2d\u6d89\u53ca\u7684RISC-V\u76f8\u5173\u7684\u77e5\u8bc6\u6765\u81ea\u4e8e\u4ee5\u4e0b\u6587\u6863\uff1a RISC-V Assembly Programmer's Manual RISC-V Unprivileged Spec RISC-V Privileged Spec \u6ce8\uff1aRISC-V \u624b\u518c\uff08\u4e2d\u6587\uff09\u4e2d\u6709\u4e00\u4e9bTypo\uff0c\u8bf7\u8c28\u614e\u53c2\u8003\u3002 3.2 RISC-V \u7684\u4e09\u79cd\u7279\u6743\u6a21\u5f0f RISC-V \u6709\u4e09\u4e2a\u7279\u6743\u6a21\u5f0f\uff1aU (user) \u6a21\u5f0f\u3001S (supervisor) \u6a21\u5f0f\u548c M (machine) \u6a21\u5f0f\u3002 Level Encoding Name Abbreviation 0 00 User/Application U 1 01 Supervisor S 2 10 Hypervisor H 3 11 Machine M \u5176\u4e2d\uff1a M\u6a21\u5f0f\u662f\u5bf9\u786c\u4ef6\u64cd\u4f5c\u7684\u62bd\u8c61\uff0c\u6709 \u6700\u9ad8 \u7ea7\u522b\u7684\u6743\u9650 S\u6a21\u5f0f\u4ecb\u4e8eM\u6a21\u5f0f\u548cU\u6a21\u5f0f\u4e4b\u95f4\uff0c\u5728\u64cd\u4f5c\u7cfb\u7edf\u4e2d\u5bf9\u5e94\u4e8e\u5185\u6838\u6001(Kernel)\u3002\u5f53\u7528\u6237\u9700\u8981\u5185\u6838\u8d44\u6e90\u65f6\uff0c\u5411\u5185\u6838\u7533\u8bf7\uff0c\u5e76\u5207\u6362\u5230\u5185\u6838\u6001\u8fdb\u884c\u5904\u7406 U\u6a21\u5f0f\u7528\u4e8e\u6267\u884c\u7528\u6237\u7a0b\u5e8f\uff0c\u5728\u64cd\u4f5c\u7cfb\u7edf\u4e2d\u5bf9\u5e94\u4e8e\u7528\u6237\u6001\uff0c\u6709 \u6700\u4f4e \u7ea7\u522b\u7684\u6743\u9650 3.3 \u4ece\u8ba1\u7b97\u673a\u4e0a\u7535\u5230 OS \u8fd0\u884c \u6211\u4eec\u4ee5\u6700\u57fa\u7840\u7684\u5d4c\u5165\u5f0f\u7cfb\u7edf\u4e3a\u4f8b\uff0c\u8ba1\u7b97\u673a\u4e0a\u7535\u540e\uff0c\u9996\u5148\u786c\u4ef6\u8fdb\u884c\u4e00\u4e9b\u57fa\u7840\u7684\u521d\u59cb\u5316\u540e\uff0c\u5c06CPU\u7684Program Counter\u79fb\u52a8\u5230\u5185\u5b58\u4e2dBootloader\u7684\u8d77\u59cb\u5730\u5740\u3002 Bootloader\u662f\u64cd\u4f5c\u7cfb\u7edf\u5185\u6838\u8fd0\u884c\u4e4b\u524d\uff0c\u7528\u4e8e\u521d\u59cb\u5316\u786c\u4ef6\uff0c\u52a0\u8f7d\u64cd\u4f5c\u7cfb\u7edf\u5185\u6838\u3002 \u5728RISC-V\u67b6\u6784\u91cc\uff0cBootloader\u8fd0\u884c\u5728M\u6a21\u5f0f\u4e0b\u3002Bootloader\u8fd0\u884c\u5b8c\u6bd5\u540e\u5c31\u4f1a\u628a\u5f53\u524d\u6a21\u5f0f\u5207\u6362\u5230S\u6a21\u5f0f\u4e0b\uff0c\u673a\u5668\u968f\u540e\u5f00\u59cb\u8fd0\u884cKernel\u3002 \u8fd9\u4e2a\u8fc7\u7a0b\u7b80\u5355\u800c\u8a00\u5c31\u662f\u8fd9\u6837\uff1a 1 2 3 4 Hardware RISC-V M Mode RISC-V S Mode +------------+ +--------------+ +----------+ | BootROM | ----> | Bootloader | ----> | Kernel | +------------+ +--------------+ +----------+ 3.4 SBI \u4e0e OpenSBI SBI(Supervisor Binary Interface)\u662fS-mode\u7684Kernel\u548cM-mode\u6267\u884c\u73af\u5883\u4e4b\u95f4\u7684\u63a5\u53e3\u89c4\u8303\uff0c\u800c OpenSBI \u662f\u4e00\u4e2aRISC-V SBI\u89c4\u8303\u7684\u5f00\u6e90\u5b9e\u73b0\u3002 RISC-V\u5e73\u53f0\u548cSoC\u4f9b\u5e94\u5546\u53ef\u4ee5\u81ea\u4e3b\u6269\u5c55OpenSBI\u5b9e\u73b0\uff0c\u4ee5\u9002\u5e94\u7279\u5b9a\u7684\u786c\u4ef6\u914d\u7f6e\u3002 \u7b80\u5355\u7684\u8bf4\uff0c\u4e3a\u4e86\u4f7f\u64cd\u4f5c\u7cfb\u7edf\u5185\u6838\u9002\u914d\u4e0d\u540c\u786c\u4ef6\uff0cOpenSBI\u63d0\u51fa\u4e86\u4e00\u7cfb\u5217\u89c4\u8303\u5bf9M-mode\u4e0b\u7684\u786c\u4ef6\u8fdb\u884c\u4e86\u7edf\u4e00\u5b9a\u4e49\uff0c\u8fd0\u884c\u5728S-mode\u4e0b\u7684\u5185\u6838\u53ef\u4ee5\u6309\u7167\u8fd9\u4e9b\u89c4\u8303\u5bf9\u4e0d\u540c\u786c\u4ef6\u8fdb\u884c\u64cd\u4f5c\u3002 \u5728\u542f\u52a8qemu\u65f6\uff0c\u6211\u4eec\u6307\u5b9a\u7684BIOS\u5c31\u662f\u7f16\u8bd1\u8fc7\u540e\u7684OpenSBI\uff0c\u5b83\u4f5c\u4e3aBootloader\u4f1a\u5b8c\u6210M-mode\u4e0b\u7684\u786c\u4ef6\u521d\u59cb\u5316\u4e0e\u5bc4\u5b58\u5668\u8bbe\u7f6e\uff0c\u5e76\u4f7f\u7528M\u6a21\u5f0f\u4e0b\u57fa\u672c\u7cfb\u7edf\u8c03\u7528\u670d\u52a1\uff0c\u4f8b\u5982\u5b57\u7b26\u6253\u5370\u3002 \u5728\u5b9e\u9a8c\u4e2d\uff0cvirt\u914d\u7f6e\u7684QEMU\u4f1a\u5c06OpenSBI\u4ee3\u7801\u52a0\u8f7d\u52300x80000000\u8d77\u59cb\u5904\uff0cOpenSBI\u521d\u59cb\u5316\u5b8c\u6210\u540e\uff0c\u4f1a\u8df3\u8f6c\u52300x80200000\u5904\u7ee7\u7eed\u6267\u884c\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u6240\u7f16\u5199\u7684\u4ee3\u7801\u9700\u8981\u653e\u52300x80200000\u5904\u3002 \u5982\u679c\u4f60\u5bf9\u5728RISC-V\u67b6\u6784\u4e0a\u4ece\u96f6\u6784\u9020\u5e76\u542f\u52a8\u771f\u5b9e\u7684Linux\u7cfb\u7edf\u6709\u66f4\u591a\u7684\u597d\u5947\uff0c\u53ef\u4ee5\u53c2\u8003ZJV\u56e2\u961f\u5f00\u53d1\u7684RISC-V\u6a21\u62df\u5668\u5f00\u53d1\u73af\u5883\u5957\u4ef6 riscv-rss-sdk \u3002 3.5 Makefile Makefile \u53ef\u4ee5\u7b80\u5355\u7684\u8ba4\u4e3a\u662f\u4e00\u4e2a\u5de5\u7a0b\u6587\u4ef6\u7684\u7f16\u8bd1\u89c4\u5219\uff0c\u63cf\u8ff0\u4e86\u6574\u4e2a\u5de5\u7a0b\u7684\u7f16\u8bd1\u548c\u94fe\u63a5\u6d41\u7a0b\u3002\u5728Lab3\u4e2d\u6211\u4eec\u5df2\u7ecf\u4f7f\u7528\u4e86make\u5de5\u5177\u5229\u7528Makefile\u6587\u4ef6\u6765\u7ba1\u7406\u6574\u4e2a\u5de5\u7a0b\u3002 \u5728\u9605\u8bfb\u4e86 Makefile\u4ecb\u7ecd \u7ae0\u8282\u540e\uff0c\u540c\u5b66\u4eec\u53ef\u4ee5\u6839\u636e\u5de5\u7a0b\u6587\u4ef6\u5939\u91ccMakefile\u7684\u4ee3\u7801\u6765\u638c\u63e1\u4e00\u4e9b\u57fa\u672c\u7684\u4f7f\u7528\u6280\u5de7\u3002 3.6 \u5185\u8054\u6c47\u7f16 \u5185\u8054\u6c47\u7f16\uff08\u901a\u5e38\u7531asm\u6216\u8005__asm__\u5173\u952e\u5b57\u5f15\u5165\uff09\u63d0\u4f9b\u4e86\u5c06\u6c47\u7f16\u8bed\u8a00\u6e90\u4ee3\u7801\u5d4c\u5165C\u7a0b\u5e8f\u7684\u80fd\u529b\u3002 \u5185\u8054\u6c47\u7f16\u7684\u8be6\u7ec6\u4ecb\u7ecd\u8bf7\u53c2\u8003 Assembler Instructions with C Expression Operands \u3002 \u4e0b\u9762\u7b80\u8981\u4ecb\u7ecd\u4e00\u4e0b\u8fd9\u6b21\u5b9e\u9a8c\u4f1a\u7528\u5230\u7684\u4e00\u4e9b\u5185\u8054\u6c47\u7f16\u77e5\u8bc6\uff1a \u5185\u8054\u6c47\u7f16\u57fa\u672c\u683c\u5f0f\u4e3a\uff1a 1 2 3 4 5 6 7 8 9 10 __asm__ volatile ( \"instruction1 \\n \" \"instruction2 \\n \" ...... ...... \"instruction3 \\n \" : [ out1 ] \"=r\" ( v1 ),[ out2 ] \"=r\" ( v2 ) : [ in1 ] \"r\" ( v1 ), [ in2 ] \"r\" ( v2 ) : \"memory\" ); \u5176\u4e2d\uff0c\u4e09\u4e2a : \u5c06\u6c47\u7f16\u90e8\u5206\u5206\u6210\u4e86\u56db\u90e8\u5206\uff1a \u7b2c\u4e00\u90e8\u5206\u662f\u6c47\u7f16\u6307\u4ee4\uff0c\u6307\u4ee4\u672b\u5c3e\u9700\u8981\u6dfb\u52a0'\\n'\u3002 \u7b2c\u4e8c\u90e8\u5206\u662f\u8f93\u51fa\u64cd\u4f5c\u6570\u90e8\u5206\u3002 \u7b2c\u4e09\u90e8\u5206\u662f\u8f93\u5165\u64cd\u4f5c\u6570\u90e8\u5206\u3002 \u7b2c\u56db\u90e8\u5206\u662f\u53ef\u80fd\u5f71\u54cd\u7684\u5bc4\u5b58\u5668\u6216\u5b58\u50a8\u5668\uff0c\u7528\u4e8e\u544a\u77e5\u7f16\u8bd1\u5668\u5f53\u524d\u5185\u8054\u6c47\u7f16\u8bed\u53e5\u53ef\u80fd\u4f1a\u5bf9\u67d0\u4e9b\u5bc4\u5b58\u5668\u6216\u5185\u5b58\u8fdb\u884c\u4fee\u6539\uff0c\u4f7f\u5f97\u7f16\u8bd1\u5668\u5728\u4f18\u5316\u65f6\u5c06\u5176\u56e0\u7d20\u8003\u8651\u8fdb\u53bb\u3002 \u8fd9\u56db\u90e8\u5206\u4e2d\u540e\u4e09\u90e8\u5206\u4e0d\u662f\u5fc5\u987b\u7684\u3002 \u793a\u4f8b\u4e00 1 2 3 4 5 6 7 8 9 10 11 12 unsigned long long s_example ( unsigned long long type , unsigned long long arg0 ) { unsigned long long ret_val ; __asm__ volatile ( \"mv x10, %[type] \\n \" \"mv x11, %[arg0] \\n \" \"mv %[ret_val], x12\" : [ ret_val ] \"=r\" ( ret_val ) : [ type ] \"r\" ( type ), [ arg0 ] \"r\" ( arg0 ) : \"memory\" ); return ret_val ; } \u793a\u4f8b\u4e00\u4e2d\u6307\u4ee4\u90e8\u5206\uff0c %[type] \u3001 %[arg0] \u4ee5\u53ca %[ret_val] \u4ee3\u8868\u7740\u7279\u5b9a\u7684\u5bc4\u5b58\u5668\u6216\u662f\u5185\u5b58\u3002 \u8f93\u5165\u8f93\u51fa\u90e8\u5206\u4e2d\uff0c [type] \"r\" (type) \u4ee3\u8868\u7740\u5c06 () \u4e2d\u7684\u53d8\u91cf type \u653e\u5165\u5bc4\u5b58\u5668\u4e2d\uff08 \"r\" \u6307\u653e\u5165\u5bc4\u5b58\u5668\uff0c\u5982\u679c\u662f \"m\" \u5219\u4e3a\u653e\u5165\u5185\u5b58\uff09\uff0c\u5e76\u4e14\u7ed1\u5b9a\u5230 [] \u4e2d\u547d\u540d\u7684\u7b26\u53f7\u4e2d\u53bb\u3002 [ret_val] \"=r\" (ret_val) \u4ee3\u8868\u7740\u5c06\u6c47\u7f16\u6307\u4ee4\u4e2d %[ret_val] \u7684\u503c\u66f4\u65b0\u5230\u53d8\u91cf ret_val \u4e2d\u3002 \u793a\u4f8b\u4e8c 1 2 #define write_csr(reg, val) ({ __asm__ volatile ( \"csrw \" # reg \", %0\" :: \"r\" ( val )); }) \u793a\u4f8b\u4e8c\u5b9a\u4e49\u4e86\u4e00\u4e2a\u5b8f\uff0c\u5176\u4e2d %0 \u4ee3\u8868\u7740\u8f93\u51fa\u8f93\u5165\u90e8\u5206\u7684\u7b2c\u4e00\u4e2a\u7b26\u53f7\uff0c\u5373 val \u3002 #reg \u662fc\u8bed\u8a00\u7684\u4e00\u4e2a\u7279\u6b8a\u5b8f\u5b9a\u4e49\u8bed\u6cd5\uff0c\u76f8\u5f53\u4e8e\u5c06reg\u8fdb\u884c\u5b8f\u66ff\u6362\u5e76\u7528\u53cc\u5f15\u53f7\u5305\u88f9\u8d77\u6765\u3002 \u4f8b\u5982 write_csr(sstatus,val) \u7ecf\u5b8f\u5c55\u5f00\u4f1a\u5f97\u5230\uff1a 1 2 ({ __asm__ volatile ( \"csrw \" \"sstatus\" \", %0\" :: \"r\" ( val )); }) 3.7 \u7f16\u8bd1\u76f8\u5173\u77e5\u8bc6\u4ecb\u7ecd vmlinux.lds GNU ld\u5373\u94fe\u63a5\u5668\uff0c\u7528\u4e8e\u5c06 *.o \u6587\u4ef6\uff08\u548c\u5e93\u6587\u4ef6\uff09\u94fe\u63a5\u6210\u53ef\u6267\u884c\u6587\u4ef6\u3002 \u5728\u64cd\u4f5c\u7cfb\u7edf\u5f00\u53d1\u4e2d\uff0c\u4e3a\u4e86\u6307\u5b9a\u7a0b\u5e8f\u7684\u5185\u5b58\u5e03\u5c40\uff0cld\u4f7f\u7528\u94fe\u63a5\u811a\u672c\uff08Linker Script\uff09\u6765\u63a7\u5236\uff0c\u5728Linux Kernel\u4e2d\u94fe\u63a5\u811a\u672c\u88ab\u547d\u540d\u4e3avmlinux.lds\u3002 \u66f4\u591a\u5173\u4e8eld\u7684\u4ecb\u7ecd\u53ef\u4ee5\u4f7f\u7528 man ld \u547d\u4ee4\u3002 \u4e0b\u9762\u7ed9\u51fa\u4e00\u4e2a vmlinux.lds \u7684\u4f8b\u5b50\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 OUTPUT_ARCH( \"riscv\" ) /* \u7a0b\u5e8f\u5165\u53e3 */ ENTRY( _start ) /* kernel\u4ee3\u7801\u8d77\u59cb\u4f4d\u7f6e */ BASE_ADDR = 0x80200000; SECTIONS { /* . \u4ee3\u8868\u5f53\u524d\u5730\u5740 */ . = BASE_ADDR; /* \u8bb0\u5f55kernel\u4ee3\u7801\u7684\u8d77\u59cb\u5730\u5740 */ _start = .; /* ALIGN(0x1000) \u8868\u793a4KB\u5bf9\u9f50 */ /* _stext, _etext \u5206\u522b\u8bb0\u5f55\u4e86text\u6bb5\u7684\u8d77\u59cb\u4e0e\u7ed3\u675f\u5730\u5740 */ .text : ALIGN(0x1000){ _stext = .; *(.text.entry) *(.text .text.*) _etext = .; } .rodata : ALIGN(0x1000){ _srodata = .; *(.rodata .rodata.*) _erodata = .; } .data : ALIGN(0x1000){ _sdata = .; *(.data .data.*) _edata = .; } .bss : ALIGN(0x1000){ _sbss = .; *(.sbss .sbss.*) *(.bss .bss.*) _ebss = .; } /* \u8bb0\u5f55kernel\u4ee3\u7801\u7684\u7ed3\u675f\u5730\u5740 */ . = ALIGN(0x1000); _end = .; } \u9996\u5148\u6211\u4eec\u4f7f\u7528OUTPUT_ARCH\u6307\u5b9a\u4e86\u67b6\u6784\u4e3aRISC-V\uff0c\u4e4b\u540e\u4f7f\u7528ENTRY\u6307\u5b9a\u7a0b\u5e8f\u5165\u53e3\u70b9\u4e3a _start \u51fd\u6570\uff0c\u7a0b\u5e8f\u5165\u53e3\u70b9\u5373\u7a0b\u5e8f\u542f\u52a8\u65f6\u8fd0\u884c\u7684\u51fd\u6570\uff0c\u7ecf\u8fc7\u8fd9\u6837\u7684\u6307\u5b9a\u540e\u5728head.S\u4e2d\u9700\u8981\u7f16\u5199 _start \u51fd\u6570\uff0c\u7a0b\u5e8f\u624d\u80fd\u6b63\u5e38\u8fd0\u884c\u3002 \u94fe\u63a5\u811a\u672c\u4e2d\u6709 . \u3001 * \u4e24\u4e2a\u91cd\u8981\u7684\u7b26\u53f7\u3002\u5355\u72ec\u7684 . \u5728\u94fe\u63a5\u811a\u672c\u4ee3\u8868\u5f53\u524d\u5730\u5740\uff0c\u5b83\u6709\u8d4b\u503c\u3001\u88ab\u8d4b\u503c\u3001\u81ea\u589e\u7b49\u64cd\u4f5c\u3002\u800c * \u6709\u4e24\u79cd\u7528\u6cd5\uff0c\u5176\u4e00\u662f *() \u5728\u5927\u62ec\u53f7\u4e2d\u8868\u793a\u5c06\u6240\u6709\u6587\u4ef6\u4e2d\u7b26\u5408\u62ec\u53f7\u5185\u8981\u6c42\u7684\u6bb5\u653e\u7f6e\u5728\u5f53\u524d\u4f4d\u7f6e\uff0c\u5176\u4e8c\u662f\u4f5c\u4e3a\u901a\u914d\u7b26\u3002 \u94fe\u63a5\u811a\u672c\u7684\u4e3b\u4f53\u662fSECTIONS\u90e8\u5206\uff0c\u5728\u8fd9\u91cc\u94fe\u63a5\u811a\u672c\u7684\u5de5\u4f5c\u662f\u5c06\u7a0b\u5e8f\u7684\u5404\u4e2a\u6bb5\u6309\u987a\u5e8f\u653e\u5728\u5404\u4e2a\u5730\u5740\u4e0a\uff0c\u5728\u4f8b\u5b50\u4e2d\u5c31\u662f\u4ece0x80200000\u5730\u5740\u5f00\u59cb\u653e\u7f6e\u4e86 .text \uff0c .rodata \uff0c .data \u548c .bss \u6bb5\u3002\u5404\u4e2a\u6bb5\u7684\u4f5c\u7528\u53ef\u4ee5\u7b80\u8981\u6982\u62ec\u6210\uff1a \u6bb5\u540d \u4e3b\u8981\u4f5c\u7528 .text \u901a\u5e38\u5b58\u653e\u7a0b\u5e8f\u6267\u884c\u4ee3\u7801 .rodata \u901a\u5e38\u5b58\u653e\u5e38\u91cf\u7b49\u53ea\u8bfb\u6570\u636e .data \u901a\u5e38\u5b58\u653e\u5df2\u521d\u59cb\u5316\u7684\u5168\u5c40\u53d8\u91cf\u3001\u9759\u6001\u53d8\u91cf .bss \u901a\u5e38\u5b58\u653e\u672a\u521d\u59cb\u5316\u7684\u5168\u5c40\u53d8\u91cf\u3001\u9759\u6001\u53d8\u91cf \u5728\u94fe\u63a5\u811a\u672c\u4e2d\u53ef\u4ee5\u81ea\u5b9a\u4e49\u7b26\u53f7\uff0c\u4f8b\u5982\u4ee5\u4e0a\u6240\u6709 _s \u4e0e _e \u5f00\u5934\u7684\u7b26\u53f7\u90fd\u662f\u6211\u4eec\u81ea\u5df1\u5b9a\u4e49\u7684\u3002 \u66f4\u591a\u6709\u5173\u94fe\u63a5\u811a\u672c\u8bed\u6cd5\u53ef\u4ee5\u53c2\u8003 \u8fd9\u91cc \u3002 vmlinux vmlinux\u901a\u5e38\u6307Linux Kernel\u7f16\u8bd1\u51fa\u7684\u53ef\u6267\u884c\u6587\u4ef6(Executable and Linkable Format / ELF)\uff0c\u7279\u70b9\u662f\u672a\u538b\u7f29\u7684\uff0c\u5e26\u8c03\u8bd5\u4fe1\u606f\u548c\u7b26\u53f7\u8868\u7684\u3002 \u5728\u6574\u5957\u5b9e\u9a8c\u4e2d\uff0cvmlinux\u901a\u5e38\u6307\u5c06\u4f60\u7684\u4ee3\u7801\u8fdb\u884c\u7f16\u8bd1\uff0c\u94fe\u63a5\u540e\u751f\u6210\u7684\u53ef\u4f9bQEMU\u8fd0\u884c\u7684RV64\u67b6\u6784\u7a0b\u5e8f\u3002\u5982\u679c\u5bf9vmlinux\u4f7f\u7528 file \u547d\u4ee4\uff0c\u4f60\u5c06\u770b\u5230\u5982\u4e0b\u4fe1\u606f\uff1a 1 2 $ file vmlinux vmlinux: ELF 64 -bit LSB executable, UCB RISC-V, version 1 ( SYSV ) , statically linked, not stripped System.map System.map\u662f\u5185\u6838\u7b26\u53f7\u8868\uff08Kernel Symbol Table\uff09\u6587\u4ef6\uff0c\u662f\u5b58\u50a8\u4e86\u6240\u6709\u5185\u6838\u7b26\u53f7\u53ca\u5176\u5730\u5740\u7684\u4e00\u4e2a\u5217\u8868\u3002\u201c\u7b26\u53f7\u201d\u901a\u5e38\u6307\u7684\u662f\u51fd\u6570\u540d\uff0c\u5168\u5c40\u53d8\u91cf\u540d\u7b49\u7b49\u3002\u4f7f\u7528 nm vmlinux \u547d\u4ee4\u5373\u53ef\u6253\u5370vmlinux\u7684\u7b26\u53f7\u8868\uff0c\u7b26\u53f7\u8868\u7684\u6837\u4f8b\u5982\u4e0b\uff1a 1 2 3 4 5 6 7 8 9 10 0000000000000800 A __vdso_rt_sigreturn ffffffe000000000 T __init_begin ffffffe000000000 T _sinittext ffffffe000000000 T _start ffffffe000000040 T _start_kernel ffffffe000000076 t clear_bss ffffffe000000080 t clear_bss_done ffffffe0000000c0 t relocate ffffffe00000017c t set_reset_devices ffffffe000000190 t debug_kernel \u4f7f\u7528 System.map \u53ef\u4ee5\u65b9\u4fbf\u5730\u8bfb\u51fa\u51fd\u6570\u6216\u53d8\u91cf\u7684\u5730\u5740\uff0c\u4e3a Debug \u63d0\u4f9b\u4e86\u65b9\u4fbf\u3002 4 \u5b9e\u9a8c\u6b65\u9aa4 4.1 \u51c6\u5907\u5de5\u7a0b \u3010\u91cd\u8981\u3011 \u4f7f\u7528 git \u547d\u4ee4\u4ece \u4e0a\u6e38\u4ed3\u5e93 \u540c\u6b65\u5b9e\u9a8c\u4ee3\u7801\u6846\u67b6\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 \u251c\u2500\u2500 arch \u2502 \u2514\u2500\u2500 riscv \u2502 \u251c\u2500\u2500 include \u2502 \u2502 \u251c\u2500\u2500 defs.h \u2502 \u2502 \u2514\u2500\u2500 sbi.h \u2502 \u251c\u2500\u2500 kernel \u2502 \u2502 \u251c\u2500\u2500 head.S \u2502 \u2502 \u251c\u2500\u2500 Makefile \u2502 \u2502 \u251c\u2500\u2500 sbi.c \u2502 \u2502 \u2514\u2500\u2500 vmlinux.lds \u2502 \u2514\u2500\u2500 Makefile \u251c\u2500\u2500 include \u2502 \u251c\u2500\u2500 print.h \u2502 \u2514\u2500\u2500 types.h \u251c\u2500\u2500 init \u2502 \u251c\u2500\u2500 main.c \u2502 \u251c\u2500\u2500 Makefile \u2502 \u2514\u2500\u2500 test.c \u251c\u2500\u2500 lib \u2502 \u251c\u2500\u2500 Makefile \u2502 \u2514\u2500\u2500 print.c \u2514\u2500\u2500 Makefile \u672c\u6b21\u5b9e\u9a8c\u4e2d\uff0c\u540c\u5b66\u4eec\u9700\u8981\u5b8c\u5584\u4ee5\u4e0b\u6587\u4ef6\uff0c\u5b9e\u9a8c\u6e90\u4ee3\u7801\u91cc\u6dfb\u52a0\u4e86\u9519\u8bef\u63d0\u793a\uff0c\u5b8c\u6210\u4ee3\u7801\u540e\u8bb0\u5f97\u5c06\u76f8\u5173\u7684\u63d0\u793a\u6e05\u9664\uff1a arch/riscv/kernel/head.S lib/Makefile arch/riscv/kernel/sbi.c lib/print.c arch/riscv/include/defs.h 4.2 \u7f16\u5199head.S \u5b66\u4e60riscv\u7684\u6c47\u7f16\uff0c\u5b8c\u6210arch/riscv/kernel/head.S\u3002 \u6211\u4eec\u9996\u5148\u4e3a\u5373\u5c06\u8fd0\u884c\u7684\u7b2c\u4e00\u4e2aC\u51fd\u6570\u8bbe\u7f6e\u7a0b\u5e8f\u6808\uff08\u6808\u7684\u5927\u5c0f\u53ef\u4ee5\u8bbe\u7f6e\u4e3a4KB\uff09\uff0c\u5e76\u5c06\u8be5\u6808\u653e\u7f6e\u5728\u7a0b\u5e8f\u7684\u540e\u9762\uff0c\u4e5f\u5c31\u662f _end \u4ee5\u540e\u7684\u5730\u5740\u7a7a\u95f4\u3002 \u4e0b\u56fe\u662fvmlinux.lds\u7684\u94fe\u63a5\u793a\u610f\u56fe\uff1a 1 2 3 4 5 6 7 8 9 _start---->+----------+ | text | +----------+ | rodata | +----------+ | data | +----------+ | bss | _end----->+----------+ \u6211\u4eec\u8981\u505a\u7684\u662f\u5c06 sp \u6307\u5411 _end \u540e4KB\u7684\u4f4d\u7f6e\uff0c\u5c06\u5176\u4f5c\u4e3a\u6808\u9876\uff0c\u9632\u6b62\u5728\u540e\u7eed\u8fc7\u7a0b\u4e2d\u4fee\u6539bss\u7b49\u6570\u636e\u6bb5\u3002 1 2 3 4 5 6 7 8 9 10 11 _start---->+----------+ | text | +----------+ | rodata | +----------+ | data | +----------+ | bss | _end----->+----------+ |4KB stack | sp------>+----------+ \u8bbe\u7f6e\u597dC\u6267\u884c\u73af\u5883\u540e\uff0c\u63a5\u4e0b\u6765\u6211\u4eec\u53ea\u9700\u8981\u901a\u8fc7\u8df3\u8f6c\u6307\u4ee4\uff0c\u8df3\u8f6c\u81f3 main.c \u4e2d\u7684 start_kernel \u51fd\u6570\u5373\u53ef\u3002 4.3 \u5b8c\u5584 Makefile \u811a\u672c \u9605\u8bfb\u6587\u6863\u4e2d\u5173\u4e8e Makefile \u7684\u7ae0\u8282\uff0c\u4ee5\u53ca\u5de5\u7a0b\u6587\u4ef6\u4e2d\u7684Makefile\u6587\u4ef6\u3002 \u6839\u636e\u6ce8\u91ca\u5b66\u4f1aMakefile\u7684\u4f7f\u7528\u89c4\u5219\u540e\uff0c\u6e05\u9664\u6389 lib/Makefile \u4e2d\u7684error\u51fd\u6570\u5e76\u5b8c\u6210\u6b63\u786e\u7684\u6784\u9020\u89c4\u5219\uff0c\u4f7f\u5de5\u7a0b\u5f97\u4ee5\u7f16\u8bd1\u3002 \u5b8c\u6210\u6b64\u6b65\u540e\u5728\u5de5\u7a0b\u6839\u6587\u4ef6\u5939\u6267\u884cmake\uff0c\u53ef\u4ee5\u770b\u5230\u4e0d\u4f1a\u518d\u63d0\u793aMakefile\u7684\u9519\u8bef\uff0c\u800c\u662fC\u7684\u672a\u5b8c\u6210\u7684\u4ee3\u7801\u5757\u7684\u63d0\u793a\u3002 4.4 \u8865\u5145 sbi.c OpenSBI\u5728M\u6001\uff0c\u4e3aS\u6001\u63d0\u4f9b\u4e86\u591a\u79cd\u63a5\u53e3\uff0c\u6bd4\u5982\u5b57\u7b26\u4e32\u8f93\u5165\u8f93\u51fa\u3002 \u56e0\u6b64\u6211\u4eec\u9700\u8981\u5b9e\u73b0\u8c03\u7528 OpenSBI \u63a5\u53e3\u7684\u529f\u80fd\u3002\u7ed9\u51fa\u51fd\u6570\u5b9a\u4e49\u5982\u4e0b\uff1a 1 2 3 4 5 6 7 8 struct sbiret { long error ; long value ; }; struct sbiret sbi_ecall ( int ext , int fid , uint64 arg0 , uint64 arg1 , uint64 arg2 , uint64 arg3 , uint64 arg4 , uint64 arg5 ); sbi_ecall \u51fd\u6570\u4e2d\uff0c\u9700\u8981\u5b8c\u6210\u4ee5\u4e0b\u5185\u5bb9\uff1a \u5c06ext(Extension ID)\u653e\u5165\u5bc4\u5b58\u5668a7\u4e2d\uff0cfid(Function ID)\u653e\u5165\u5bc4\u5b58\u5668a6\u4e2d\uff0c\u5c06arg[0-5]\u653e\u5165\u5bc4\u5b58\u5668a[0-5]\u4e2d\u3002 \u4f7f\u7528 ecall \u6307\u4ee4\u3002 ecall \u4e4b\u540e\u7cfb\u7edf\u4f1a\u8fdb\u5165M\u6a21\u5f0f\uff0c\u4e4b\u540eOpenSBI\u4f1a\u5b8c\u6210\u76f8\u5173\u64cd\u4f5c\u3002 OpenSBI\u7684\u8fd4\u56de\u7ed3\u679c\u4f1a\u5b58\u653e\u5728\u5bc4\u5b58\u5668a0\u3001a1\u4e2d\uff0c\u5176\u4e2da0\u4e3aerror code\uff0ca1\u4e3a\u8fd4\u56de\u503c\uff0c\u6211\u4eec\u7528sbiret\u7ed3\u6784\u6765\u63a5\u53d7\u8fd9\u4e24\u4e2a\u8fd4\u56de\u503c\u3002 \u540c\u5b66\u4eec\u53ef\u4ee5\u53c2\u7167\u5185\u8054\u6c47\u7f16\u7684\u793a\u4f8b\u4e00\u5b8c\u6210\u8be5\u51fd\u6570\u7684\u7f16\u5199\u3002 \u7f16\u5199\u6210\u529f\u540e\uff0c\u8c03\u7528 sbi_ecall(0x1, 0x0\uff0c 0x30, 0, 0, 0, 0, 0) \u5c06\u4f1a\u8f93\u51fa\u5b57\u7b26'0'\u3002 \u5176\u4e2d 0x1 \u4ee3\u8868 sbi_console_putchar \u7684ExtensionID\uff0c 0x0 \u4ee3\u8868FunctionID, 0x30\u4ee3\u8868'0'\u7684ascii\u503c\uff0c\u5176\u4f59\u53c2\u6570\u586b0\u3002 \u8bf7\u5728 arch/riscv/kernel/sbi.c \u4e2d\u8865\u5145 sbi_ecall() \u3002 \u4e0b\u9762\u5217\u51fa\u4e86\u4e00\u4e9b\u5728\u540e\u7eed\u7684\u5b9e\u9a8c\u4e2d\u53ef\u80fd\u9700\u8981\u4f7f\u7528\u7684\u529f\u80fd\u3002 Function Name Function ID Extension ID sbi_set_timer \uff08\u8bbe\u7f6e\u65f6\u949f\u76f8\u5173\u5bc4\u5b58\u5668\uff09 0 0x00 sbi_console_putchar \uff08\u6253\u5370\u5b57\u7b26\uff09 0 0x01 sbi_console_getchar \uff08\u63a5\u6536\u5b57\u7b26\uff09 0 0x02 4.5 puts() \u548c puti() \u8c03\u7528\u4ee5\u4e0a\u5b8c\u6210\u7684 sbi_ecall , \u5b8c\u6210 puts() \u548c puti() \u7684\u5b9e\u73b0\u3002 puts() \u7528\u4e8e\u6253\u5370\u5b57\u7b26\u4e32 puti() \u7528\u4e8e\u6253\u5370\u6574\u578b\u53d8\u91cf\u3002 \u8bf7\u7f16\u5199 lib/print.c \u4e2d\u7684 puts() \u548c puti() \uff0c\u51fd\u6570\u7684\u76f8\u5173\u5b9a\u4e49\u5df2\u7ecf\u5199\u5728\u4e86 print.h \u6587\u4ef6\u3002 4.6 \u4fee\u6539 defs \u5b66\u4e60\u4e86\u89e3\u4e86\u5185\u8054\u6c47\u7f16\u7684\u76f8\u5173\u77e5\u8bc6\u540e\uff0c\u8865\u5145 arch/riscv/include/defs.h \u4e2d\u7684\u4ee3\u7801\uff0c\u5b8c\u6210 read_csr \u5b8f\u5b9a\u4e49\u3002 \u5b8c\u6210\u5b8c\u4ee5\u4e0a\u5185\u5bb9\u540e\u518d\u6b21\u6267\u884cmake\uff0c\u53ef\u4ee5\u770b\u5230\u5728\u6839\u76ee\u5f55\u4e0b\u6210\u529f\u751f\u6210\u4e86vmlinux\u3002 \u8fd0\u884cmake run\u5373\u53ef\u6267\u884c\uff0c\u68c0\u6d4b\u4f60\u7684\u7a0b\u5e8f\u662f\u5426\u6b63\u786e\u5730\u6253\u5370\u51fa\u4e86\u6b22\u8fce\u4fe1\u606f 2022 ZJU Computer System II \u3002 \u601d\u8003\u9898 \u7f16\u8bd1\u4e4b\u540e\uff0c\u901a\u8fc7System.map\u67e5\u770bvmlinux.lds\u4e2d\u81ea\u5b9a\u4e49\u7b26\u53f7\u7684\u503c\uff0c\u6bd4\u8f83\u4ed6\u4eec\u7684\u5730\u5740\u662f\u5426\u7b26\u5408\u4f60\u7684\u9884\u671f \u5728\u4f60\u7684\u7b2c\u4e00\u6761\u6307\u4ee4\u5904\u6dfb\u52a0\u65ad\u70b9\uff0c\u89c2\u5bdf\u4f60\u7684\u7a0b\u5e8f\u5f00\u59cb\u6267\u884c\u65f6\u7684\u7279\u6743\u6001\u662f\u591a\u5c11\uff0c\u4e2d\u65ad\u7684\u5f00\u542f\u60c5\u51b5\u662f\u600e\u4e48\u6837\u7684\uff1f \u63d0\u793a \uff1a\u53ef\u4ee5\u5c1d\u8bd5\u5728\u7b2c\u4e00\u6761\u6307\u4ee4\u5904\u63d2\u5165\u4e00\u4e9b\u7279\u6743\u64cd\u4f5c\uff0c\u5982 csrr a0, mstatus \uff0c\u89c2\u5bdf\u8c03\u8bd5\u73b0\u8c61\uff0c\u8fdb\u884c\u5f53\u524d\u7279\u6743\u6001\u7684\u5224\u65ad\u3002 \u5728\u4f60\u7684\u7b2c\u4e00\u6761\u6307\u4ee4\u5904\u6dfb\u52a0\u65ad\u70b9\uff0c\u89c2\u5bdf\u5185\u5b58\u4e2dtext\u3001data\u3001bss\u6bb5\u7684\u5185\u5bb9\u662f\u600e\u6837\u7684\uff1f \u5c1d\u8bd5\u4ece\u6c47\u7f16\u4ee3\u7801\u4e2d\u7ed9C\u51fd\u6570start_kernel\u4f20\u9012\u53c2\u6570 \u4f5c\u4e1a\u63d0\u4ea4 \u540c\u5b66\u9700\u8981\u63d0\u4ea4\u5b9e\u9a8c\u62a5\u544a\u4ee5\u53ca\u6574\u4e2a\u5de5\u7a0b\u4ee3\u7801\uff0c\u63d0\u4ea4\u65f6\u8bf7\u6ce8\u610f\u5982\u4e0b\u51e0\u70b9\uff1a \u62a5\u544a\u7684pdf\u653e\u5728\u5916\u9762\uff0c\u538b\u7f29\u5305\u53ea\u653e\u4ee3\u7801\u3002 1 2 3 \u63d0\u4ea4\u6587\u4ef6 \u251c\u2500\u2500 report.pdf \u2514\u2500\u2500 code.zip \u63d0\u4ea4\u524d\u8bf7\u4f7f\u7528 make clean \u6e05\u9664\u6240\u6709\u6784\u5efa\u4ea7\u7269\u3002","title":"\u5b9e\u9a8c\u6307\u5bfc\u56db"},{"location":"lab4/#4-rv64","text":"","title":"\u5b9e\u9a8c4: RV64 \u5185\u6838\u5f15\u5bfc"},{"location":"lab4/#1","text":"\u5b66\u4e60RISC-V\u6c47\u7f16\uff0c \u7f16\u5199head.S\u5b9e\u73b0\u8df3\u8f6c\u5230\u5185\u6838\u8fd0\u884c\u7684\u7b2c\u4e00\u4e2aC\u51fd\u6570\u3002 \u5b66\u4e60OpenSBI\uff0c\u7406\u89e3OpenSBI\u5728\u5b9e\u9a8c\u4e2d\u6240\u8d77\u5230\u7684\u4f5c\u7528\uff0c\u5e76\u8c03\u7528OpenSBI\u63d0\u4f9b\u7684\u63a5\u53e3\u5b8c\u6210\u5b57\u7b26\u7684\u8f93\u51fa\u3002 \u5b66\u4e60Makefile\u76f8\u5173\u77e5\u8bc6\uff0c\u8865\u5145\u9879\u76ee\u4e2d\u7684Makefile\u6587\u4ef6\uff0c\u6765\u5b8c\u6210\u5bf9\u6574\u4e2a\u5de5\u7a0b\u7684\u7ba1\u7406\u3002","title":"1 \u5b9e\u9a8c\u76ee\u7684"},{"location":"lab4/#2","text":"Ubuntu 20.04, 22.04","title":"2 \u5b9e\u9a8c\u73af\u5883"},{"location":"lab4/#3","text":"","title":"3 \u5b9e\u9a8c\u57fa\u7840\u77e5\u8bc6\u4ecb\u7ecd"},{"location":"lab4/#31-risc-v","text":"\u5b9e\u9a8c\u4e2d\u6d89\u53ca\u7684RISC-V\u76f8\u5173\u7684\u77e5\u8bc6\u6765\u81ea\u4e8e\u4ee5\u4e0b\u6587\u6863\uff1a RISC-V Assembly Programmer's Manual RISC-V Unprivileged Spec RISC-V Privileged Spec \u6ce8\uff1aRISC-V \u624b\u518c\uff08\u4e2d\u6587\uff09\u4e2d\u6709\u4e00\u4e9bTypo\uff0c\u8bf7\u8c28\u614e\u53c2\u8003\u3002","title":"3.1 RISC-V \u67b6\u6784"},{"location":"lab4/#32-risc-v","text":"RISC-V \u6709\u4e09\u4e2a\u7279\u6743\u6a21\u5f0f\uff1aU (user) \u6a21\u5f0f\u3001S (supervisor) \u6a21\u5f0f\u548c M (machine) \u6a21\u5f0f\u3002 Level Encoding Name Abbreviation 0 00 User/Application U 1 01 Supervisor S 2 10 Hypervisor H 3 11 Machine M \u5176\u4e2d\uff1a M\u6a21\u5f0f\u662f\u5bf9\u786c\u4ef6\u64cd\u4f5c\u7684\u62bd\u8c61\uff0c\u6709 \u6700\u9ad8 \u7ea7\u522b\u7684\u6743\u9650 S\u6a21\u5f0f\u4ecb\u4e8eM\u6a21\u5f0f\u548cU\u6a21\u5f0f\u4e4b\u95f4\uff0c\u5728\u64cd\u4f5c\u7cfb\u7edf\u4e2d\u5bf9\u5e94\u4e8e\u5185\u6838\u6001(Kernel)\u3002\u5f53\u7528\u6237\u9700\u8981\u5185\u6838\u8d44\u6e90\u65f6\uff0c\u5411\u5185\u6838\u7533\u8bf7\uff0c\u5e76\u5207\u6362\u5230\u5185\u6838\u6001\u8fdb\u884c\u5904\u7406 U\u6a21\u5f0f\u7528\u4e8e\u6267\u884c\u7528\u6237\u7a0b\u5e8f\uff0c\u5728\u64cd\u4f5c\u7cfb\u7edf\u4e2d\u5bf9\u5e94\u4e8e\u7528\u6237\u6001\uff0c\u6709 \u6700\u4f4e \u7ea7\u522b\u7684\u6743\u9650","title":"3.2 RISC-V \u7684\u4e09\u79cd\u7279\u6743\u6a21\u5f0f"},{"location":"lab4/#33-os","text":"\u6211\u4eec\u4ee5\u6700\u57fa\u7840\u7684\u5d4c\u5165\u5f0f\u7cfb\u7edf\u4e3a\u4f8b\uff0c\u8ba1\u7b97\u673a\u4e0a\u7535\u540e\uff0c\u9996\u5148\u786c\u4ef6\u8fdb\u884c\u4e00\u4e9b\u57fa\u7840\u7684\u521d\u59cb\u5316\u540e\uff0c\u5c06CPU\u7684Program Counter\u79fb\u52a8\u5230\u5185\u5b58\u4e2dBootloader\u7684\u8d77\u59cb\u5730\u5740\u3002 Bootloader\u662f\u64cd\u4f5c\u7cfb\u7edf\u5185\u6838\u8fd0\u884c\u4e4b\u524d\uff0c\u7528\u4e8e\u521d\u59cb\u5316\u786c\u4ef6\uff0c\u52a0\u8f7d\u64cd\u4f5c\u7cfb\u7edf\u5185\u6838\u3002 \u5728RISC-V\u67b6\u6784\u91cc\uff0cBootloader\u8fd0\u884c\u5728M\u6a21\u5f0f\u4e0b\u3002Bootloader\u8fd0\u884c\u5b8c\u6bd5\u540e\u5c31\u4f1a\u628a\u5f53\u524d\u6a21\u5f0f\u5207\u6362\u5230S\u6a21\u5f0f\u4e0b\uff0c\u673a\u5668\u968f\u540e\u5f00\u59cb\u8fd0\u884cKernel\u3002 \u8fd9\u4e2a\u8fc7\u7a0b\u7b80\u5355\u800c\u8a00\u5c31\u662f\u8fd9\u6837\uff1a 1 2 3 4 Hardware RISC-V M Mode RISC-V S Mode +------------+ +--------------+ +----------+ | BootROM | ----> | Bootloader | ----> | Kernel | +------------+ +--------------+ +----------+","title":"3.3 \u4ece\u8ba1\u7b97\u673a\u4e0a\u7535\u5230 OS \u8fd0\u884c"},{"location":"lab4/#34-sbi-opensbi","text":"SBI(Supervisor Binary Interface)\u662fS-mode\u7684Kernel\u548cM-mode\u6267\u884c\u73af\u5883\u4e4b\u95f4\u7684\u63a5\u53e3\u89c4\u8303\uff0c\u800c OpenSBI \u662f\u4e00\u4e2aRISC-V SBI\u89c4\u8303\u7684\u5f00\u6e90\u5b9e\u73b0\u3002 RISC-V\u5e73\u53f0\u548cSoC\u4f9b\u5e94\u5546\u53ef\u4ee5\u81ea\u4e3b\u6269\u5c55OpenSBI\u5b9e\u73b0\uff0c\u4ee5\u9002\u5e94\u7279\u5b9a\u7684\u786c\u4ef6\u914d\u7f6e\u3002 \u7b80\u5355\u7684\u8bf4\uff0c\u4e3a\u4e86\u4f7f\u64cd\u4f5c\u7cfb\u7edf\u5185\u6838\u9002\u914d\u4e0d\u540c\u786c\u4ef6\uff0cOpenSBI\u63d0\u51fa\u4e86\u4e00\u7cfb\u5217\u89c4\u8303\u5bf9M-mode\u4e0b\u7684\u786c\u4ef6\u8fdb\u884c\u4e86\u7edf\u4e00\u5b9a\u4e49\uff0c\u8fd0\u884c\u5728S-mode\u4e0b\u7684\u5185\u6838\u53ef\u4ee5\u6309\u7167\u8fd9\u4e9b\u89c4\u8303\u5bf9\u4e0d\u540c\u786c\u4ef6\u8fdb\u884c\u64cd\u4f5c\u3002 \u5728\u542f\u52a8qemu\u65f6\uff0c\u6211\u4eec\u6307\u5b9a\u7684BIOS\u5c31\u662f\u7f16\u8bd1\u8fc7\u540e\u7684OpenSBI\uff0c\u5b83\u4f5c\u4e3aBootloader\u4f1a\u5b8c\u6210M-mode\u4e0b\u7684\u786c\u4ef6\u521d\u59cb\u5316\u4e0e\u5bc4\u5b58\u5668\u8bbe\u7f6e\uff0c\u5e76\u4f7f\u7528M\u6a21\u5f0f\u4e0b\u57fa\u672c\u7cfb\u7edf\u8c03\u7528\u670d\u52a1\uff0c\u4f8b\u5982\u5b57\u7b26\u6253\u5370\u3002 \u5728\u5b9e\u9a8c\u4e2d\uff0cvirt\u914d\u7f6e\u7684QEMU\u4f1a\u5c06OpenSBI\u4ee3\u7801\u52a0\u8f7d\u52300x80000000\u8d77\u59cb\u5904\uff0cOpenSBI\u521d\u59cb\u5316\u5b8c\u6210\u540e\uff0c\u4f1a\u8df3\u8f6c\u52300x80200000\u5904\u7ee7\u7eed\u6267\u884c\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u6240\u7f16\u5199\u7684\u4ee3\u7801\u9700\u8981\u653e\u52300x80200000\u5904\u3002 \u5982\u679c\u4f60\u5bf9\u5728RISC-V\u67b6\u6784\u4e0a\u4ece\u96f6\u6784\u9020\u5e76\u542f\u52a8\u771f\u5b9e\u7684Linux\u7cfb\u7edf\u6709\u66f4\u591a\u7684\u597d\u5947\uff0c\u53ef\u4ee5\u53c2\u8003ZJV\u56e2\u961f\u5f00\u53d1\u7684RISC-V\u6a21\u62df\u5668\u5f00\u53d1\u73af\u5883\u5957\u4ef6 riscv-rss-sdk \u3002","title":"3.4 SBI \u4e0e OpenSBI"},{"location":"lab4/#35-makefile","text":"Makefile \u53ef\u4ee5\u7b80\u5355\u7684\u8ba4\u4e3a\u662f\u4e00\u4e2a\u5de5\u7a0b\u6587\u4ef6\u7684\u7f16\u8bd1\u89c4\u5219\uff0c\u63cf\u8ff0\u4e86\u6574\u4e2a\u5de5\u7a0b\u7684\u7f16\u8bd1\u548c\u94fe\u63a5\u6d41\u7a0b\u3002\u5728Lab3\u4e2d\u6211\u4eec\u5df2\u7ecf\u4f7f\u7528\u4e86make\u5de5\u5177\u5229\u7528Makefile\u6587\u4ef6\u6765\u7ba1\u7406\u6574\u4e2a\u5de5\u7a0b\u3002 \u5728\u9605\u8bfb\u4e86 Makefile\u4ecb\u7ecd \u7ae0\u8282\u540e\uff0c\u540c\u5b66\u4eec\u53ef\u4ee5\u6839\u636e\u5de5\u7a0b\u6587\u4ef6\u5939\u91ccMakefile\u7684\u4ee3\u7801\u6765\u638c\u63e1\u4e00\u4e9b\u57fa\u672c\u7684\u4f7f\u7528\u6280\u5de7\u3002","title":"3.5 Makefile"},{"location":"lab4/#36","text":"\u5185\u8054\u6c47\u7f16\uff08\u901a\u5e38\u7531asm\u6216\u8005__asm__\u5173\u952e\u5b57\u5f15\u5165\uff09\u63d0\u4f9b\u4e86\u5c06\u6c47\u7f16\u8bed\u8a00\u6e90\u4ee3\u7801\u5d4c\u5165C\u7a0b\u5e8f\u7684\u80fd\u529b\u3002 \u5185\u8054\u6c47\u7f16\u7684\u8be6\u7ec6\u4ecb\u7ecd\u8bf7\u53c2\u8003 Assembler Instructions with C Expression Operands \u3002 \u4e0b\u9762\u7b80\u8981\u4ecb\u7ecd\u4e00\u4e0b\u8fd9\u6b21\u5b9e\u9a8c\u4f1a\u7528\u5230\u7684\u4e00\u4e9b\u5185\u8054\u6c47\u7f16\u77e5\u8bc6\uff1a \u5185\u8054\u6c47\u7f16\u57fa\u672c\u683c\u5f0f\u4e3a\uff1a 1 2 3 4 5 6 7 8 9 10 __asm__ volatile ( \"instruction1 \\n \" \"instruction2 \\n \" ...... ...... \"instruction3 \\n \" : [ out1 ] \"=r\" ( v1 ),[ out2 ] \"=r\" ( v2 ) : [ in1 ] \"r\" ( v1 ), [ in2 ] \"r\" ( v2 ) : \"memory\" ); \u5176\u4e2d\uff0c\u4e09\u4e2a : \u5c06\u6c47\u7f16\u90e8\u5206\u5206\u6210\u4e86\u56db\u90e8\u5206\uff1a \u7b2c\u4e00\u90e8\u5206\u662f\u6c47\u7f16\u6307\u4ee4\uff0c\u6307\u4ee4\u672b\u5c3e\u9700\u8981\u6dfb\u52a0'\\n'\u3002 \u7b2c\u4e8c\u90e8\u5206\u662f\u8f93\u51fa\u64cd\u4f5c\u6570\u90e8\u5206\u3002 \u7b2c\u4e09\u90e8\u5206\u662f\u8f93\u5165\u64cd\u4f5c\u6570\u90e8\u5206\u3002 \u7b2c\u56db\u90e8\u5206\u662f\u53ef\u80fd\u5f71\u54cd\u7684\u5bc4\u5b58\u5668\u6216\u5b58\u50a8\u5668\uff0c\u7528\u4e8e\u544a\u77e5\u7f16\u8bd1\u5668\u5f53\u524d\u5185\u8054\u6c47\u7f16\u8bed\u53e5\u53ef\u80fd\u4f1a\u5bf9\u67d0\u4e9b\u5bc4\u5b58\u5668\u6216\u5185\u5b58\u8fdb\u884c\u4fee\u6539\uff0c\u4f7f\u5f97\u7f16\u8bd1\u5668\u5728\u4f18\u5316\u65f6\u5c06\u5176\u56e0\u7d20\u8003\u8651\u8fdb\u53bb\u3002 \u8fd9\u56db\u90e8\u5206\u4e2d\u540e\u4e09\u90e8\u5206\u4e0d\u662f\u5fc5\u987b\u7684\u3002","title":"3.6 \u5185\u8054\u6c47\u7f16"},{"location":"lab4/#_1","text":"1 2 3 4 5 6 7 8 9 10 11 12 unsigned long long s_example ( unsigned long long type , unsigned long long arg0 ) { unsigned long long ret_val ; __asm__ volatile ( \"mv x10, %[type] \\n \" \"mv x11, %[arg0] \\n \" \"mv %[ret_val], x12\" : [ ret_val ] \"=r\" ( ret_val ) : [ type ] \"r\" ( type ), [ arg0 ] \"r\" ( arg0 ) : \"memory\" ); return ret_val ; } \u793a\u4f8b\u4e00\u4e2d\u6307\u4ee4\u90e8\u5206\uff0c %[type] \u3001 %[arg0] \u4ee5\u53ca %[ret_val] \u4ee3\u8868\u7740\u7279\u5b9a\u7684\u5bc4\u5b58\u5668\u6216\u662f\u5185\u5b58\u3002 \u8f93\u5165\u8f93\u51fa\u90e8\u5206\u4e2d\uff0c [type] \"r\" (type) \u4ee3\u8868\u7740\u5c06 () \u4e2d\u7684\u53d8\u91cf type \u653e\u5165\u5bc4\u5b58\u5668\u4e2d\uff08 \"r\" \u6307\u653e\u5165\u5bc4\u5b58\u5668\uff0c\u5982\u679c\u662f \"m\" \u5219\u4e3a\u653e\u5165\u5185\u5b58\uff09\uff0c\u5e76\u4e14\u7ed1\u5b9a\u5230 [] \u4e2d\u547d\u540d\u7684\u7b26\u53f7\u4e2d\u53bb\u3002 [ret_val] \"=r\" (ret_val) \u4ee3\u8868\u7740\u5c06\u6c47\u7f16\u6307\u4ee4\u4e2d %[ret_val] \u7684\u503c\u66f4\u65b0\u5230\u53d8\u91cf ret_val \u4e2d\u3002","title":"\u793a\u4f8b\u4e00"},{"location":"lab4/#_2","text":"1 2 #define write_csr(reg, val) ({ __asm__ volatile ( \"csrw \" # reg \", %0\" :: \"r\" ( val )); }) \u793a\u4f8b\u4e8c\u5b9a\u4e49\u4e86\u4e00\u4e2a\u5b8f\uff0c\u5176\u4e2d %0 \u4ee3\u8868\u7740\u8f93\u51fa\u8f93\u5165\u90e8\u5206\u7684\u7b2c\u4e00\u4e2a\u7b26\u53f7\uff0c\u5373 val \u3002 #reg \u662fc\u8bed\u8a00\u7684\u4e00\u4e2a\u7279\u6b8a\u5b8f\u5b9a\u4e49\u8bed\u6cd5\uff0c\u76f8\u5f53\u4e8e\u5c06reg\u8fdb\u884c\u5b8f\u66ff\u6362\u5e76\u7528\u53cc\u5f15\u53f7\u5305\u88f9\u8d77\u6765\u3002 \u4f8b\u5982 write_csr(sstatus,val) \u7ecf\u5b8f\u5c55\u5f00\u4f1a\u5f97\u5230\uff1a 1 2 ({ __asm__ volatile ( \"csrw \" \"sstatus\" \", %0\" :: \"r\" ( val )); })","title":"\u793a\u4f8b\u4e8c"},{"location":"lab4/#37","text":"","title":"3.7 \u7f16\u8bd1\u76f8\u5173\u77e5\u8bc6\u4ecb\u7ecd"},{"location":"lab4/#vmlinuxlds","text":"GNU ld\u5373\u94fe\u63a5\u5668\uff0c\u7528\u4e8e\u5c06 *.o \u6587\u4ef6\uff08\u548c\u5e93\u6587\u4ef6\uff09\u94fe\u63a5\u6210\u53ef\u6267\u884c\u6587\u4ef6\u3002 \u5728\u64cd\u4f5c\u7cfb\u7edf\u5f00\u53d1\u4e2d\uff0c\u4e3a\u4e86\u6307\u5b9a\u7a0b\u5e8f\u7684\u5185\u5b58\u5e03\u5c40\uff0cld\u4f7f\u7528\u94fe\u63a5\u811a\u672c\uff08Linker Script\uff09\u6765\u63a7\u5236\uff0c\u5728Linux Kernel\u4e2d\u94fe\u63a5\u811a\u672c\u88ab\u547d\u540d\u4e3avmlinux.lds\u3002 \u66f4\u591a\u5173\u4e8eld\u7684\u4ecb\u7ecd\u53ef\u4ee5\u4f7f\u7528 man ld \u547d\u4ee4\u3002 \u4e0b\u9762\u7ed9\u51fa\u4e00\u4e2a vmlinux.lds \u7684\u4f8b\u5b50\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 OUTPUT_ARCH( \"riscv\" ) /* \u7a0b\u5e8f\u5165\u53e3 */ ENTRY( _start ) /* kernel\u4ee3\u7801\u8d77\u59cb\u4f4d\u7f6e */ BASE_ADDR = 0x80200000; SECTIONS { /* . \u4ee3\u8868\u5f53\u524d\u5730\u5740 */ . = BASE_ADDR; /* \u8bb0\u5f55kernel\u4ee3\u7801\u7684\u8d77\u59cb\u5730\u5740 */ _start = .; /* ALIGN(0x1000) \u8868\u793a4KB\u5bf9\u9f50 */ /* _stext, _etext \u5206\u522b\u8bb0\u5f55\u4e86text\u6bb5\u7684\u8d77\u59cb\u4e0e\u7ed3\u675f\u5730\u5740 */ .text : ALIGN(0x1000){ _stext = .; *(.text.entry) *(.text .text.*) _etext = .; } .rodata : ALIGN(0x1000){ _srodata = .; *(.rodata .rodata.*) _erodata = .; } .data : ALIGN(0x1000){ _sdata = .; *(.data .data.*) _edata = .; } .bss : ALIGN(0x1000){ _sbss = .; *(.sbss .sbss.*) *(.bss .bss.*) _ebss = .; } /* \u8bb0\u5f55kernel\u4ee3\u7801\u7684\u7ed3\u675f\u5730\u5740 */ . = ALIGN(0x1000); _end = .; } \u9996\u5148\u6211\u4eec\u4f7f\u7528OUTPUT_ARCH\u6307\u5b9a\u4e86\u67b6\u6784\u4e3aRISC-V\uff0c\u4e4b\u540e\u4f7f\u7528ENTRY\u6307\u5b9a\u7a0b\u5e8f\u5165\u53e3\u70b9\u4e3a _start \u51fd\u6570\uff0c\u7a0b\u5e8f\u5165\u53e3\u70b9\u5373\u7a0b\u5e8f\u542f\u52a8\u65f6\u8fd0\u884c\u7684\u51fd\u6570\uff0c\u7ecf\u8fc7\u8fd9\u6837\u7684\u6307\u5b9a\u540e\u5728head.S\u4e2d\u9700\u8981\u7f16\u5199 _start \u51fd\u6570\uff0c\u7a0b\u5e8f\u624d\u80fd\u6b63\u5e38\u8fd0\u884c\u3002 \u94fe\u63a5\u811a\u672c\u4e2d\u6709 . \u3001 * \u4e24\u4e2a\u91cd\u8981\u7684\u7b26\u53f7\u3002\u5355\u72ec\u7684 . \u5728\u94fe\u63a5\u811a\u672c\u4ee3\u8868\u5f53\u524d\u5730\u5740\uff0c\u5b83\u6709\u8d4b\u503c\u3001\u88ab\u8d4b\u503c\u3001\u81ea\u589e\u7b49\u64cd\u4f5c\u3002\u800c * \u6709\u4e24\u79cd\u7528\u6cd5\uff0c\u5176\u4e00\u662f *() \u5728\u5927\u62ec\u53f7\u4e2d\u8868\u793a\u5c06\u6240\u6709\u6587\u4ef6\u4e2d\u7b26\u5408\u62ec\u53f7\u5185\u8981\u6c42\u7684\u6bb5\u653e\u7f6e\u5728\u5f53\u524d\u4f4d\u7f6e\uff0c\u5176\u4e8c\u662f\u4f5c\u4e3a\u901a\u914d\u7b26\u3002 \u94fe\u63a5\u811a\u672c\u7684\u4e3b\u4f53\u662fSECTIONS\u90e8\u5206\uff0c\u5728\u8fd9\u91cc\u94fe\u63a5\u811a\u672c\u7684\u5de5\u4f5c\u662f\u5c06\u7a0b\u5e8f\u7684\u5404\u4e2a\u6bb5\u6309\u987a\u5e8f\u653e\u5728\u5404\u4e2a\u5730\u5740\u4e0a\uff0c\u5728\u4f8b\u5b50\u4e2d\u5c31\u662f\u4ece0x80200000\u5730\u5740\u5f00\u59cb\u653e\u7f6e\u4e86 .text \uff0c .rodata \uff0c .data \u548c .bss \u6bb5\u3002\u5404\u4e2a\u6bb5\u7684\u4f5c\u7528\u53ef\u4ee5\u7b80\u8981\u6982\u62ec\u6210\uff1a \u6bb5\u540d \u4e3b\u8981\u4f5c\u7528 .text \u901a\u5e38\u5b58\u653e\u7a0b\u5e8f\u6267\u884c\u4ee3\u7801 .rodata \u901a\u5e38\u5b58\u653e\u5e38\u91cf\u7b49\u53ea\u8bfb\u6570\u636e .data \u901a\u5e38\u5b58\u653e\u5df2\u521d\u59cb\u5316\u7684\u5168\u5c40\u53d8\u91cf\u3001\u9759\u6001\u53d8\u91cf .bss \u901a\u5e38\u5b58\u653e\u672a\u521d\u59cb\u5316\u7684\u5168\u5c40\u53d8\u91cf\u3001\u9759\u6001\u53d8\u91cf \u5728\u94fe\u63a5\u811a\u672c\u4e2d\u53ef\u4ee5\u81ea\u5b9a\u4e49\u7b26\u53f7\uff0c\u4f8b\u5982\u4ee5\u4e0a\u6240\u6709 _s \u4e0e _e \u5f00\u5934\u7684\u7b26\u53f7\u90fd\u662f\u6211\u4eec\u81ea\u5df1\u5b9a\u4e49\u7684\u3002 \u66f4\u591a\u6709\u5173\u94fe\u63a5\u811a\u672c\u8bed\u6cd5\u53ef\u4ee5\u53c2\u8003 \u8fd9\u91cc \u3002","title":"vmlinux.lds"},{"location":"lab4/#vmlinux","text":"vmlinux\u901a\u5e38\u6307Linux Kernel\u7f16\u8bd1\u51fa\u7684\u53ef\u6267\u884c\u6587\u4ef6(Executable and Linkable Format / ELF)\uff0c\u7279\u70b9\u662f\u672a\u538b\u7f29\u7684\uff0c\u5e26\u8c03\u8bd5\u4fe1\u606f\u548c\u7b26\u53f7\u8868\u7684\u3002 \u5728\u6574\u5957\u5b9e\u9a8c\u4e2d\uff0cvmlinux\u901a\u5e38\u6307\u5c06\u4f60\u7684\u4ee3\u7801\u8fdb\u884c\u7f16\u8bd1\uff0c\u94fe\u63a5\u540e\u751f\u6210\u7684\u53ef\u4f9bQEMU\u8fd0\u884c\u7684RV64\u67b6\u6784\u7a0b\u5e8f\u3002\u5982\u679c\u5bf9vmlinux\u4f7f\u7528 file \u547d\u4ee4\uff0c\u4f60\u5c06\u770b\u5230\u5982\u4e0b\u4fe1\u606f\uff1a 1 2 $ file vmlinux vmlinux: ELF 64 -bit LSB executable, UCB RISC-V, version 1 ( SYSV ) , statically linked, not stripped","title":"vmlinux"},{"location":"lab4/#systemmap","text":"System.map\u662f\u5185\u6838\u7b26\u53f7\u8868\uff08Kernel Symbol Table\uff09\u6587\u4ef6\uff0c\u662f\u5b58\u50a8\u4e86\u6240\u6709\u5185\u6838\u7b26\u53f7\u53ca\u5176\u5730\u5740\u7684\u4e00\u4e2a\u5217\u8868\u3002\u201c\u7b26\u53f7\u201d\u901a\u5e38\u6307\u7684\u662f\u51fd\u6570\u540d\uff0c\u5168\u5c40\u53d8\u91cf\u540d\u7b49\u7b49\u3002\u4f7f\u7528 nm vmlinux \u547d\u4ee4\u5373\u53ef\u6253\u5370vmlinux\u7684\u7b26\u53f7\u8868\uff0c\u7b26\u53f7\u8868\u7684\u6837\u4f8b\u5982\u4e0b\uff1a 1 2 3 4 5 6 7 8 9 10 0000000000000800 A __vdso_rt_sigreturn ffffffe000000000 T __init_begin ffffffe000000000 T _sinittext ffffffe000000000 T _start ffffffe000000040 T _start_kernel ffffffe000000076 t clear_bss ffffffe000000080 t clear_bss_done ffffffe0000000c0 t relocate ffffffe00000017c t set_reset_devices ffffffe000000190 t debug_kernel \u4f7f\u7528 System.map \u53ef\u4ee5\u65b9\u4fbf\u5730\u8bfb\u51fa\u51fd\u6570\u6216\u53d8\u91cf\u7684\u5730\u5740\uff0c\u4e3a Debug \u63d0\u4f9b\u4e86\u65b9\u4fbf\u3002","title":"System.map"},{"location":"lab4/#4","text":"","title":"4 \u5b9e\u9a8c\u6b65\u9aa4"},{"location":"lab4/#41","text":"\u3010\u91cd\u8981\u3011 \u4f7f\u7528 git \u547d\u4ee4\u4ece \u4e0a\u6e38\u4ed3\u5e93 \u540c\u6b65\u5b9e\u9a8c\u4ee3\u7801\u6846\u67b6\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 \u251c\u2500\u2500 arch \u2502 \u2514\u2500\u2500 riscv \u2502 \u251c\u2500\u2500 include \u2502 \u2502 \u251c\u2500\u2500 defs.h \u2502 \u2502 \u2514\u2500\u2500 sbi.h \u2502 \u251c\u2500\u2500 kernel \u2502 \u2502 \u251c\u2500\u2500 head.S \u2502 \u2502 \u251c\u2500\u2500 Makefile \u2502 \u2502 \u251c\u2500\u2500 sbi.c \u2502 \u2502 \u2514\u2500\u2500 vmlinux.lds \u2502 \u2514\u2500\u2500 Makefile \u251c\u2500\u2500 include \u2502 \u251c\u2500\u2500 print.h \u2502 \u2514\u2500\u2500 types.h \u251c\u2500\u2500 init \u2502 \u251c\u2500\u2500 main.c \u2502 \u251c\u2500\u2500 Makefile \u2502 \u2514\u2500\u2500 test.c \u251c\u2500\u2500 lib \u2502 \u251c\u2500\u2500 Makefile \u2502 \u2514\u2500\u2500 print.c \u2514\u2500\u2500 Makefile \u672c\u6b21\u5b9e\u9a8c\u4e2d\uff0c\u540c\u5b66\u4eec\u9700\u8981\u5b8c\u5584\u4ee5\u4e0b\u6587\u4ef6\uff0c\u5b9e\u9a8c\u6e90\u4ee3\u7801\u91cc\u6dfb\u52a0\u4e86\u9519\u8bef\u63d0\u793a\uff0c\u5b8c\u6210\u4ee3\u7801\u540e\u8bb0\u5f97\u5c06\u76f8\u5173\u7684\u63d0\u793a\u6e05\u9664\uff1a arch/riscv/kernel/head.S lib/Makefile arch/riscv/kernel/sbi.c lib/print.c arch/riscv/include/defs.h","title":"4.1 \u51c6\u5907\u5de5\u7a0b"},{"location":"lab4/#42-heads","text":"\u5b66\u4e60riscv\u7684\u6c47\u7f16\uff0c\u5b8c\u6210arch/riscv/kernel/head.S\u3002 \u6211\u4eec\u9996\u5148\u4e3a\u5373\u5c06\u8fd0\u884c\u7684\u7b2c\u4e00\u4e2aC\u51fd\u6570\u8bbe\u7f6e\u7a0b\u5e8f\u6808\uff08\u6808\u7684\u5927\u5c0f\u53ef\u4ee5\u8bbe\u7f6e\u4e3a4KB\uff09\uff0c\u5e76\u5c06\u8be5\u6808\u653e\u7f6e\u5728\u7a0b\u5e8f\u7684\u540e\u9762\uff0c\u4e5f\u5c31\u662f _end \u4ee5\u540e\u7684\u5730\u5740\u7a7a\u95f4\u3002 \u4e0b\u56fe\u662fvmlinux.lds\u7684\u94fe\u63a5\u793a\u610f\u56fe\uff1a 1 2 3 4 5 6 7 8 9 _start---->+----------+ | text | +----------+ | rodata | +----------+ | data | +----------+ | bss | _end----->+----------+ \u6211\u4eec\u8981\u505a\u7684\u662f\u5c06 sp \u6307\u5411 _end \u540e4KB\u7684\u4f4d\u7f6e\uff0c\u5c06\u5176\u4f5c\u4e3a\u6808\u9876\uff0c\u9632\u6b62\u5728\u540e\u7eed\u8fc7\u7a0b\u4e2d\u4fee\u6539bss\u7b49\u6570\u636e\u6bb5\u3002 1 2 3 4 5 6 7 8 9 10 11 _start---->+----------+ | text | +----------+ | rodata | +----------+ | data | +----------+ | bss | _end----->+----------+ |4KB stack | sp------>+----------+ \u8bbe\u7f6e\u597dC\u6267\u884c\u73af\u5883\u540e\uff0c\u63a5\u4e0b\u6765\u6211\u4eec\u53ea\u9700\u8981\u901a\u8fc7\u8df3\u8f6c\u6307\u4ee4\uff0c\u8df3\u8f6c\u81f3 main.c \u4e2d\u7684 start_kernel \u51fd\u6570\u5373\u53ef\u3002","title":"4.2 \u7f16\u5199head.S"},{"location":"lab4/#43-makefile","text":"\u9605\u8bfb\u6587\u6863\u4e2d\u5173\u4e8e Makefile \u7684\u7ae0\u8282\uff0c\u4ee5\u53ca\u5de5\u7a0b\u6587\u4ef6\u4e2d\u7684Makefile\u6587\u4ef6\u3002 \u6839\u636e\u6ce8\u91ca\u5b66\u4f1aMakefile\u7684\u4f7f\u7528\u89c4\u5219\u540e\uff0c\u6e05\u9664\u6389 lib/Makefile \u4e2d\u7684error\u51fd\u6570\u5e76\u5b8c\u6210\u6b63\u786e\u7684\u6784\u9020\u89c4\u5219\uff0c\u4f7f\u5de5\u7a0b\u5f97\u4ee5\u7f16\u8bd1\u3002 \u5b8c\u6210\u6b64\u6b65\u540e\u5728\u5de5\u7a0b\u6839\u6587\u4ef6\u5939\u6267\u884cmake\uff0c\u53ef\u4ee5\u770b\u5230\u4e0d\u4f1a\u518d\u63d0\u793aMakefile\u7684\u9519\u8bef\uff0c\u800c\u662fC\u7684\u672a\u5b8c\u6210\u7684\u4ee3\u7801\u5757\u7684\u63d0\u793a\u3002","title":"4.3 \u5b8c\u5584 Makefile \u811a\u672c"},{"location":"lab4/#44-sbic","text":"OpenSBI\u5728M\u6001\uff0c\u4e3aS\u6001\u63d0\u4f9b\u4e86\u591a\u79cd\u63a5\u53e3\uff0c\u6bd4\u5982\u5b57\u7b26\u4e32\u8f93\u5165\u8f93\u51fa\u3002 \u56e0\u6b64\u6211\u4eec\u9700\u8981\u5b9e\u73b0\u8c03\u7528 OpenSBI \u63a5\u53e3\u7684\u529f\u80fd\u3002\u7ed9\u51fa\u51fd\u6570\u5b9a\u4e49\u5982\u4e0b\uff1a 1 2 3 4 5 6 7 8 struct sbiret { long error ; long value ; }; struct sbiret sbi_ecall ( int ext , int fid , uint64 arg0 , uint64 arg1 , uint64 arg2 , uint64 arg3 , uint64 arg4 , uint64 arg5 ); sbi_ecall \u51fd\u6570\u4e2d\uff0c\u9700\u8981\u5b8c\u6210\u4ee5\u4e0b\u5185\u5bb9\uff1a \u5c06ext(Extension ID)\u653e\u5165\u5bc4\u5b58\u5668a7\u4e2d\uff0cfid(Function ID)\u653e\u5165\u5bc4\u5b58\u5668a6\u4e2d\uff0c\u5c06arg[0-5]\u653e\u5165\u5bc4\u5b58\u5668a[0-5]\u4e2d\u3002 \u4f7f\u7528 ecall \u6307\u4ee4\u3002 ecall \u4e4b\u540e\u7cfb\u7edf\u4f1a\u8fdb\u5165M\u6a21\u5f0f\uff0c\u4e4b\u540eOpenSBI\u4f1a\u5b8c\u6210\u76f8\u5173\u64cd\u4f5c\u3002 OpenSBI\u7684\u8fd4\u56de\u7ed3\u679c\u4f1a\u5b58\u653e\u5728\u5bc4\u5b58\u5668a0\u3001a1\u4e2d\uff0c\u5176\u4e2da0\u4e3aerror code\uff0ca1\u4e3a\u8fd4\u56de\u503c\uff0c\u6211\u4eec\u7528sbiret\u7ed3\u6784\u6765\u63a5\u53d7\u8fd9\u4e24\u4e2a\u8fd4\u56de\u503c\u3002 \u540c\u5b66\u4eec\u53ef\u4ee5\u53c2\u7167\u5185\u8054\u6c47\u7f16\u7684\u793a\u4f8b\u4e00\u5b8c\u6210\u8be5\u51fd\u6570\u7684\u7f16\u5199\u3002 \u7f16\u5199\u6210\u529f\u540e\uff0c\u8c03\u7528 sbi_ecall(0x1, 0x0\uff0c 0x30, 0, 0, 0, 0, 0) \u5c06\u4f1a\u8f93\u51fa\u5b57\u7b26'0'\u3002 \u5176\u4e2d 0x1 \u4ee3\u8868 sbi_console_putchar \u7684ExtensionID\uff0c 0x0 \u4ee3\u8868FunctionID, 0x30\u4ee3\u8868'0'\u7684ascii\u503c\uff0c\u5176\u4f59\u53c2\u6570\u586b0\u3002 \u8bf7\u5728 arch/riscv/kernel/sbi.c \u4e2d\u8865\u5145 sbi_ecall() \u3002 \u4e0b\u9762\u5217\u51fa\u4e86\u4e00\u4e9b\u5728\u540e\u7eed\u7684\u5b9e\u9a8c\u4e2d\u53ef\u80fd\u9700\u8981\u4f7f\u7528\u7684\u529f\u80fd\u3002 Function Name Function ID Extension ID sbi_set_timer \uff08\u8bbe\u7f6e\u65f6\u949f\u76f8\u5173\u5bc4\u5b58\u5668\uff09 0 0x00 sbi_console_putchar \uff08\u6253\u5370\u5b57\u7b26\uff09 0 0x01 sbi_console_getchar \uff08\u63a5\u6536\u5b57\u7b26\uff09 0 0x02","title":"4.4 \u8865\u5145 sbi.c"},{"location":"lab4/#45-puts-puti","text":"\u8c03\u7528\u4ee5\u4e0a\u5b8c\u6210\u7684 sbi_ecall , \u5b8c\u6210 puts() \u548c puti() \u7684\u5b9e\u73b0\u3002 puts() \u7528\u4e8e\u6253\u5370\u5b57\u7b26\u4e32 puti() \u7528\u4e8e\u6253\u5370\u6574\u578b\u53d8\u91cf\u3002 \u8bf7\u7f16\u5199 lib/print.c \u4e2d\u7684 puts() \u548c puti() \uff0c\u51fd\u6570\u7684\u76f8\u5173\u5b9a\u4e49\u5df2\u7ecf\u5199\u5728\u4e86 print.h \u6587\u4ef6\u3002","title":"4.5 puts() \u548c puti()"},{"location":"lab4/#46-defs","text":"\u5b66\u4e60\u4e86\u89e3\u4e86\u5185\u8054\u6c47\u7f16\u7684\u76f8\u5173\u77e5\u8bc6\u540e\uff0c\u8865\u5145 arch/riscv/include/defs.h \u4e2d\u7684\u4ee3\u7801\uff0c\u5b8c\u6210 read_csr \u5b8f\u5b9a\u4e49\u3002 \u5b8c\u6210\u5b8c\u4ee5\u4e0a\u5185\u5bb9\u540e\u518d\u6b21\u6267\u884cmake\uff0c\u53ef\u4ee5\u770b\u5230\u5728\u6839\u76ee\u5f55\u4e0b\u6210\u529f\u751f\u6210\u4e86vmlinux\u3002 \u8fd0\u884cmake run\u5373\u53ef\u6267\u884c\uff0c\u68c0\u6d4b\u4f60\u7684\u7a0b\u5e8f\u662f\u5426\u6b63\u786e\u5730\u6253\u5370\u51fa\u4e86\u6b22\u8fce\u4fe1\u606f 2022 ZJU Computer System II \u3002","title":"4.6 \u4fee\u6539 defs"},{"location":"lab4/#_3","text":"\u7f16\u8bd1\u4e4b\u540e\uff0c\u901a\u8fc7System.map\u67e5\u770bvmlinux.lds\u4e2d\u81ea\u5b9a\u4e49\u7b26\u53f7\u7684\u503c\uff0c\u6bd4\u8f83\u4ed6\u4eec\u7684\u5730\u5740\u662f\u5426\u7b26\u5408\u4f60\u7684\u9884\u671f \u5728\u4f60\u7684\u7b2c\u4e00\u6761\u6307\u4ee4\u5904\u6dfb\u52a0\u65ad\u70b9\uff0c\u89c2\u5bdf\u4f60\u7684\u7a0b\u5e8f\u5f00\u59cb\u6267\u884c\u65f6\u7684\u7279\u6743\u6001\u662f\u591a\u5c11\uff0c\u4e2d\u65ad\u7684\u5f00\u542f\u60c5\u51b5\u662f\u600e\u4e48\u6837\u7684\uff1f \u63d0\u793a \uff1a\u53ef\u4ee5\u5c1d\u8bd5\u5728\u7b2c\u4e00\u6761\u6307\u4ee4\u5904\u63d2\u5165\u4e00\u4e9b\u7279\u6743\u64cd\u4f5c\uff0c\u5982 csrr a0, mstatus \uff0c\u89c2\u5bdf\u8c03\u8bd5\u73b0\u8c61\uff0c\u8fdb\u884c\u5f53\u524d\u7279\u6743\u6001\u7684\u5224\u65ad\u3002 \u5728\u4f60\u7684\u7b2c\u4e00\u6761\u6307\u4ee4\u5904\u6dfb\u52a0\u65ad\u70b9\uff0c\u89c2\u5bdf\u5185\u5b58\u4e2dtext\u3001data\u3001bss\u6bb5\u7684\u5185\u5bb9\u662f\u600e\u6837\u7684\uff1f \u5c1d\u8bd5\u4ece\u6c47\u7f16\u4ee3\u7801\u4e2d\u7ed9C\u51fd\u6570start_kernel\u4f20\u9012\u53c2\u6570","title":"\u601d\u8003\u9898"},{"location":"lab4/#_4","text":"\u540c\u5b66\u9700\u8981\u63d0\u4ea4\u5b9e\u9a8c\u62a5\u544a\u4ee5\u53ca\u6574\u4e2a\u5de5\u7a0b\u4ee3\u7801\uff0c\u63d0\u4ea4\u65f6\u8bf7\u6ce8\u610f\u5982\u4e0b\u51e0\u70b9\uff1a \u62a5\u544a\u7684pdf\u653e\u5728\u5916\u9762\uff0c\u538b\u7f29\u5305\u53ea\u653e\u4ee3\u7801\u3002 1 2 3 \u63d0\u4ea4\u6587\u4ef6 \u251c\u2500\u2500 report.pdf \u2514\u2500\u2500 code.zip \u63d0\u4ea4\u524d\u8bf7\u4f7f\u7528 make clean \u6e05\u9664\u6240\u6709\u6784\u5efa\u4ea7\u7269\u3002","title":"\u4f5c\u4e1a\u63d0\u4ea4"},{"location":"lab5/","text":"\u5b9e\u9a8c5: RV64 \u65f6\u949f\u4e2d\u65ad\u5904\u7406 1 \u5b9e\u9a8c\u76ee\u7684 \u5b66\u4e60 RISC-V \u7684\u5f02\u5e38\u5904\u7406\u76f8\u5173\u5bc4\u5b58\u5668\u4e0e\u6307\u4ee4\uff0c\u5b8c\u6210\u5bf9\u5f02\u5e38\u5904\u7406\u7684\u521d\u59cb\u5316\u3002 \u7406\u89e3 CPU \u4e0a\u4e0b\u6587\u5207\u6362\u673a\u5236\uff0c\u5e76\u6b63\u786e\u5b9e\u73b0\u4e0a\u4e0b\u6587\u5207\u6362\u529f\u80fd\u3002 \u7f16\u5199\u5f02\u5e38\u5904\u7406\u51fd\u6570\uff0c\u5b8c\u6210\u5bf9\u7279\u5b9a\u5f02\u5e38\u7684\u5904\u7406\u3002 \u8c03\u7528 OpenSBI \u63d0\u4f9b\u7684\u63a5\u53e3\uff0c\u5b8c\u6210\u5bf9\u65f6\u949f\u4e2d\u65ad\u4e8b\u4ef6\u7684\u8bbe\u7f6e\u3002 2 \u5b9e\u9a8c\u73af\u5883 Ubuntu 20.04, 22.04 3 \u80cc\u666f\u77e5\u8bc6 3.0 \u524d\u8a00 \u5728 lab4 \u4e2d\u6211\u4eec\u6210\u529f\u7684\u5c06\u4e00\u4e2a\u6700\u7b80\u5355\u7684 OS \u542f\u52a8\u8d77\u6765\uff0c \u4f46\u8fd8\u6ca1\u6709\u529e\u6cd5\u4e0e\u4e4b\u4ea4\u4e92\u3002\u6211\u4eec\u5728\u8bfe\u7a0b\u4e2d\u8bb2\u8fc7\u64cd\u4f5c\u7cfb\u7edf\u542f\u52a8\u4e4b\u540e\u7531 \u4e8b\u4ef6 \uff08 event \uff09\u9a71\u52a8\uff0c\u5728\u672c\u6b21\u5b9e\u9a8c\u4e2d\u6211\u4eec\u5c06\u5f15\u5165\u4e00\u79cd\u91cd\u8981\u7684\u4e8b\u4ef6 \u5f02\u5e38 \uff0c \u5f02\u5e38\u7ed9\u4e86 OS \u4e0e\u786c\u4ef6\u3001\u8f6f\u4ef6\u4ea4\u4e92\u7684\u80fd\u529b\u3002\u5728 lab4 \u4e2d\u6211\u4eec\u4ecb\u7ecd\u4e86\u5728 RISC-V \u4e2d\u6709\u4e09\u79cd\u7279\u6743\u7ea7 ( M \u6001\u3001 S \u6001\u3001 U \u6001 )\uff0c \u5728Boot\u9636\u6bb5\uff0c OpenSBI \u5df2\u7ecf\u5e2e\u6211\u4eec\u5c06 M \u6001\u7684\u5f02\u5e38\u5904\u7406\u8fdb\u884c\u4e86\u521d\u59cb\u5316\uff0c\u8fd9\u4e00\u90e8\u5206\u4e0d\u9700\u8981\u6211\u4eec\u518d\u53bb\u5b9e\u73b0\uff0c\u56e0\u6b64\u672c\u6b21\u8bd5\u9a8c\u6211\u4eec\u91cd\u70b9\u5173\u6ce8 S \u6001\u7684\u5f02\u5e38\u5904\u7406\u3002 3.1 RISC-V \u4e2d\u7684 Interrupt \u548c Exception 3.1.1 \u4ec0\u4e48\u662f Interrupt \u548c Exception We use the term exception to refer to an unusual condition occurring at run time associated with an instruction in the current RISC-V hart. We use the term interrupt to refer to an external asynchronous event that may cause a RISC-V hart to experience an unexpected transfer of control. We use the term trap to refer to the transfer of control to a trap handler caused by either an exception or an interrupt. \u4e0a\u8ff0\u662f RISC-V Unprivileged Spec 1.6 \u8282\u4e2d\u5bf9\u4e8e Trap \u3001 Interrupt \u4e0e Exception \u7684\u63cf\u8ff0\u3002\u603b\u7ed3\u8d77\u6765 Interrupt \u4e0e Exception \u7684\u4e3b\u8981\u533a\u522b\u5982\u4e0b\u8868\uff1a Interrupt Exception Hardware generate Software generate These are asynchronous external requests for service (like keyboard or printer needs service). These are synchronous internal requests for service based upon abnormal events (think of illegal instructions, illegal address, overflow etc). These are normal events and shouldn\u2019t interfere with the normal running of a computer. These are abnormal events and often result in the termination of a program \u4e0a\u6587\u4e2d\u7684 Trap \u63cf\u8ff0\u7684\u662f\u4e00\u79cd\u63a7\u5236\u8f6c\u79fb\u7684\u8fc7\u7a0b, \u8fd9\u4e2a\u8fc7\u7a0b\u662f\u7531 Interrupt \u6216\u8005 Exception \u5f15\u8d77\u7684\u3002\u8fd9\u91cc\u4e3a\u4e86\u65b9\u4fbf\u8d77\u89c1\uff0c\u6211\u4eec\u5728\u8fd9\u91cc\u7ea6\u5b9a Trap \u4e3a Interrput \u4e0e Exception \u7684\u603b\u79f0\u3002 \u5728\u4e0b\u6587\u4e2d \u6211\u4eec\u7528 \u5f02\u5e38 \u4ee3\u6307 Trap 3.1.2 \u76f8\u5173\u5bc4\u5b58\u5668 \u9664\u4e8632\u4e2a\u901a\u7528\u5bc4\u5b58\u5668\u4e4b\u5916\uff0cRISC-V \u67b6\u6784\u8fd8\u6709\u5927\u91cf\u7684 \u63a7\u5236\u72b6\u6001\u5bc4\u5b58\u5668 Control and Status Registers(CSRs) \uff0c\u4e0b\u9762\u5c06\u4ecb\u7ecd\u51e0\u4e2a\u548c\u5f02\u5e38\u673a\u5236\u76f8\u5173\u7684\u91cd\u8981\u5bc4\u5b58\u5668\u3002 Supervisor Mode \u5f02\u5e38\u76f8\u5173\u5bc4\u5bc4\u5b58\u5668: sstatus ( Supervisor Status Register )\u4e2d\u5b58\u5728\u4e00\u4e2a SIE ( Supervisor Interrupt Enable ) \u6bd4\u7279\u4f4d\uff0c\u5f53\u8be5\u6bd4\u7279\u4f4d\u8bbe\u7f6e\u4e3a 1 \u65f6\uff0c\u4f1a\u5bf9\u6240\u6709\u7684 S \u6001\u5f02\u5e38 \u54cd\u5e94 \uff0c \u5426\u5219\u5c06\u4f1a\u7981\u7528\u6240\u6709 S \u6001\u5f02\u5e38\u3002 sie ( Supervisor Interrupt Eable Register )\u3002\u5728 RISC-V \u4e2d\uff0c Interrupt \u88ab\u5212\u5206\u4e3a\u4e09\u7c7b Software Interrupt \uff0c Timer Interrupt \uff0c External Interrupt \u3002\u5728\u5f00\u542f\u4e86 sstatus[SIE] \u4e4b\u540e\uff0c\u7cfb\u7edf\u4f1a\u6839\u636e sie \u4e2d\u7684\u76f8\u5173\u6bd4\u7279\u4f4d\u6765\u51b3\u5b9a\u662f\u5426\u5bf9\u8be5 Interrupt \u8fdb\u884c \u5904\u7406 \u3002 stvec ( Supervisor Trap Vector Base Address Register ) \u5373\u6240\u8c13\u7684\u201d\u4e2d\u65ad\u5411\u91cf\u8868\u57fa\u5740\u201d\u3002 stvec \u6709\u4e24\u79cd\u6a21\u5f0f\uff1a Direct \u6a21\u5f0f \uff0c\u9002\u7528\u4e8e\u7cfb\u7edf\u4e2d\u53ea\u6709\u4e00\u4e2a\u4e2d\u65ad\u5904\u7406\u7a0b\u5e8f, \u5176\u6307\u5411\u4e2d\u65ad\u5904\u7406\u5165\u53e3\u51fd\u6570 \uff08 \u672c\u6b21\u5b9e\u9a8c\u4e2d\u6211\u4eec\u6240\u7528\u7684\u6a21\u5f0f \uff09\u3002 Vectored \u6a21\u5f0f \uff0c\u6307\u5411\u4e2d\u65ad\u5411\u91cf\u8868\uff0c \u9002\u7528\u4e8e\u7cfb\u7edf\u4e2d\u6709\u591a\u4e2a\u4e2d\u65ad\u5904\u7406\u7a0b\u5e8f \uff08 \u8be5\u6a21\u5f0f\u53ef\u4ee5\u53c2\u8003 RISC-V \u5185\u6838\u6e90\u7801 \uff09\u3002 scause ( Supervisor Cause Register ), \u4f1a\u8bb0\u5f55\u5f02\u5e38\u53d1\u751f\u7684\u539f\u56e0\uff0c\u8fd8\u4f1a\u8bb0\u5f55\u8be5\u5f02\u5e38\u662f Interrupt \u8fd8\u662f Exception \u3002 sepc ( Supervisor Exception Program Counter ), \u4f1a\u8bb0\u5f55\u89e6\u53d1\u5f02\u5e38\u7684\u90a3\u6761\u6307\u4ee4\u7684\u5730\u5740\u3002 Machine Mode \u5f02\u5e38\u76f8\u5173\u5bc4\u5bc4\u5b58\u5668: \u7c7b\u4f3c\u4e8e Supervisor Mode\uff0c Machine Mode \u4e5f\u6709\u76f8\u5bf9\u5e94\u7684\u5bc4\u5b58\u5668\uff0c\u4f46\u7531\u4e8e\u672c\u5b9e\u9a8c\u540c\u5b66\u4e0d\u9700\u8981\u64cd\u4f5c\u8fd9\u4e9b\u5bc4\u5b58\u5668\uff0c\u6545\u4e0d\u5728\u6b64\u4f5c\u4ecb\u7ecd\u3002 \u4ee5\u4e0a\u5bc4\u5b58\u5668\u7684\u8be6\u7ec6\u4ecb\u7ecd\u8bf7\u540c\u5b66\u4eec\u53c2\u8003 RISC-V Privileged Spec 3.1.3 \u76f8\u5173\u7279\u6743\u6307\u4ee4 ecall ( Environment Call )\uff0c\u5f53\u6211\u4eec\u5728 S \u6001\u6267\u884c\u8fd9\u6761\u6307\u4ee4\u65f6\uff0c\u4f1a\u89e6\u53d1\u4e00\u4e2a ecall-from-s-mode-exception \uff0c\u4ece\u800c\u8fdb\u5165 M \u6a21\u5f0f\u4e2d\u7684\u4e2d\u65ad\u5904\u7406\u6d41\u7a0b( \u5982\u8bbe\u7f6e\u5b9a\u65f6\u5668\u7b49 )\uff1b\u5f53\u6211\u4eec\u5728 U \u6001\u6267\u884c\u8fd9\u6761\u6307\u4ee4\u65f6\uff0c\u4f1a\u89e6\u53d1\u4e00\u4e2a ecall-from-u-mode-exception \uff0c\u4ece\u800c\u8fdb\u5165 S \u6a21\u5f0f\u4e2d\u7684\u4e2d\u65ad\u5904\u7406\u6d41\u7a0b ( \u5e38\u7528\u6765\u8fdb\u884c\u7cfb\u7edf\u8c03\u7528 )\u3002 sret \u7528\u4e8e S \u6001\u5f02\u5e38\u8fd4\u56de, \u901a\u8fc7 sepc \u6765\u8bbe\u7f6e pc \u7684\u503c\uff0c \u8fd4\u56de\u5230\u4e4b\u524d\u7a0b\u5e8f\u7ee7\u7eed\u8fd0\u884c\u3002 \u4ee5\u4e0a\u6307\u4ee4\u7684\u8be6\u7ec6\u4ecb\u7ecd\u8bf7\u540c\u5b66\u4eec\u53c2\u8003 RISC-V Privileged Spec 3.2 \u4e0a\u4e0b\u6587\u5904\u7406 \u7531\u4e8e\u5728\u5904\u7406\u5f02\u5e38\u65f6\uff0c\u6709\u53ef\u80fd\u4f1a\u6539\u53d8\u7cfb\u7edf\u7684\u72b6\u6001\u3002\u6240\u4ee5\u5728\u771f\u6b63\u5904\u7406\u5f02\u5e38\u4e4b\u524d\uff0c\u6211\u4eec\u6709\u5fc5\u8981\u5bf9\u7cfb\u7edf\u7684\u5f53\u524d\u72b6\u6001\u8fdb\u884c\u4fdd\u5b58\uff0c\u5728\u5f02\u5e38\u5904\u7406\u5b8c\u6210\u4e4b\u540e\uff0c\u6211\u4eec\u518d\u5c06\u7cfb\u7edf\u6062\u590d\u81f3\u539f\u5148\u7684\u72b6\u6001\uff0c\u5c31\u53ef\u4ee5\u786e\u4fdd\u4e4b\u524d\u7684\u7a0b\u5e8f\u7ee7\u7eed\u6b63\u5e38\u8fd0\u884c\u3002 \u8fd9\u91cc\u7684\u7cfb\u7edf\u72b6\u6001\u901a\u5e38\u662f\u6307\u5bc4\u5b58\u5668\uff0c\u8fd9\u4e9b\u5bc4\u5b58\u5668\u4e5f\u53eb\u505aCPU\u7684\u4e0a\u4e0b\u6587 ( Context ). 3.3 \u5f02\u5e38\u5904\u7406\u7a0b\u5e8f \u5f02\u5e38\u5904\u7406\u7a0b\u5e8f\u6839\u636e scause \u7684\u503c\uff0c \u8fdb\u5165\u4e0d\u540c\u7684\u5904\u7406\u903b\u8f91\uff0c\u5728\u672c\u6b21\u8bd5\u9a8c\u4e2d\u6211\u4eec\u9700\u8981\u5173\u5fc3\u7684\u53ea\u6709 Superviosr Timer Interrupt \u3002 3.4 \u65f6\u949f\u4e2d\u65ad \u65f6\u949f\u4e2d\u65ad\u9700\u8981 CPU \u786c\u4ef6\u7684\u652f\u6301\u3002CPU \u4ee5\"\u65f6\u949f\u5468\u671f\"\u4e3a\u5de5\u4f5c\u7684\u57fa\u672c\u65f6\u95f4\u5355\u4f4d\uff0c\u5bf9\u903b\u8f91\u95e8\u7684\u65f6\u5e8f\u7535\u8def\u8fdb\u884c\u540c\u6b65\u3002\u800c\u65f6\u949f\u4e2d\u65ad\u5b9e\u9645\u4e0a\u5c31\u662f\u201c\u6bcf\u9694\u82e5\u5e72\u4e2a\u65f6\u949f\u5468\u671f\u6267\u884c\u4e00\u6b21\u7684\u7a0b\u5e8f\u201d\u3002\u4e0b\u9762\u4ecb\u7ecd\u4e0e\u65f6\u949f\u4e2d\u65ad\u76f8\u5173\u7684\u5bc4\u5b58\u5668\u4ee5\u53ca\u5982\u4f55\u4ea7\u751f\u65f6\u949f\u4e2d\u65ad\u3002 mtime \u4e0e mtimecmp ( Machine Timer Register )\u3002 mtime \u662f\u4e00\u4e2a\u5b9e\u65f6\u8ba1\u65f6\u5668\uff0c \u7531\u786c\u4ef6\u4ee5\u6052\u5b9a\u7684\u9891\u7387\u81ea\u589e\u3002 mtimecmp \u4e2d\u4fdd\u5b58\u7740\u4e0b\u4e00\u6b21\u65f6\u949f\u4e2d\u65ad\u53d1\u751f\u7684\u65f6\u95f4\u70b9\uff0c\u5f53 mtime \u7684\u503c\u5927\u4e8e\u6216\u7b49\u4e8e mtimecmp \u7684\u503c\uff0c\u7cfb\u7edf\u5c31\u4f1a\u89e6\u53d1\u4e00\u6b21\u65f6\u949f\u4e2d\u65ad\u3002\u56e0\u6b64\u6211\u4eec\u53ea\u9700\u8981\u66f4\u65b0 mtimecmp \u4e2d\u7684\u503c\uff0c\u5c31\u53ef\u4ee5\u8bbe\u7f6e\u4e0b\u4e00\u6b21\u65f6\u949f\u4e2d\u65ad\u7684\u89e6\u53d1\u70b9\u3002 OpenSBI \u5df2\u7ecf\u4e3a\u6211\u4eec\u63d0\u4f9b\u4e86\u66f4\u65b0 mtimecmp \u7684\u63a5\u53e3 sbi_set_timer ( \u89c1 lab4 4.4\u8282 )\u3002 mcounteren ( Counter-Enable Registers )\u3002\u7531\u4e8e mtime \u662f\u5c5e\u4e8e M \u6001\u7684\u5bc4\u5b58\u5668\uff0c\u6211\u4eec\u5728 S \u6001\u65e0\u6cd5\u76f4\u63a5\u5bf9\u5176\u8bfb\u5199\uff0c \u5e78\u8fd0\u7684\u662f OpenSBI \u5728 M \u6001\u5df2\u7ecf\u901a\u8fc7\u8bbe\u7f6e mcounteren \u5bc4\u5b58\u5668\u7684 TM \u6bd4\u7279\u4f4d\uff0c \u8ba9\u6211\u4eec\u53ef\u4ee5\u5728 S \u6001\u4e2d\u53ef\u4ee5\u901a\u8fc7 time \u8fd9\u4e2a \u53ea\u8bfb \u5bc4\u5b58\u5668\u8bfb\u53d6\u5230 mtime \u7684\u5f53\u524d\u503c\uff0c\u76f8\u5173\u6c47\u7f16\u6307\u4ee4\u662f rdtime \u3002 \u4ee5\u4e0a\u5bc4\u5b58\u5668\u7684\u8be6\u7ec6\u4ecb\u7ecd\u8bf7\u540c\u5b66\u4eec\u53c2\u8003 RISC-V Privileged Spec 4 \u5b9e\u9a8c\u6b65\u9aa4 4.1 \u51c6\u5907\u5de5\u7a0b \u6b64\u6b21\u5b9e\u9a8c\u57fa\u4e8e lab4 \u540c\u5b66\u6240\u5b9e\u73b0\u7684\u4ee3\u7801\u8fdb\u884c\u3002 \u5728 lab4 \u4e2d\u6211\u4eec\u5b9e\u73b0\u7684 puti puts \u4f7f\u7528\u8d77\u6765\u8f83\u4e3a\u7e41\u7410\uff0c\u56e0\u6b64\u5728\u8fd9\u91cc\u6211\u4eec\u63d0\u4f9b\u4e86\u7b80\u5316\u7248\u7684 printk \u3002 \u4ece repo \u540c\u6b65\u4ee3\u7801\u3002 \u8fd8\u9700\u8981\u5c06\u4e4b\u524d\u6240\u6709 print.h puti puts \u7684\u5f15\u7528\u4fee\u6539\u4e3a printk.h printk \u3002\u540c\u6b65\u540e\u4ee3\u7801\u7684\u76ee\u5f55\u7ed3\u6784\u5982\u4e0b\u6240\u793a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 . \u251c\u2500\u2500 Makefile \u251c\u2500\u2500 arch \u2502 \u2514\u2500\u2500 riscv \u2502 \u251c\u2500\u2500 Makefile \u2502 \u251c\u2500\u2500 include \u2502 \u2502 \u251c\u2500\u2500 defs.h \u2502 \u2502 \u2514\u2500\u2500 sbi.h \u2502 \u2514\u2500\u2500 kernel \u2502 \u251c\u2500\u2500 Makefile \u2502 \u251c\u2500\u2500 clock.c \u2502 \u251c\u2500\u2500 entry.S \u2502 \u251c\u2500\u2500 head.S \u2502 \u251c\u2500\u2500 sbi.c \u2502 \u251c\u2500\u2500 trap.c \u2502 \u2514\u2500\u2500 vmlinux.lds \u251c\u2500\u2500 include \u2502 \u251c\u2500\u2500 printk.h \u2502 \u251c\u2500\u2500 stddef.h \u2502 \u2514\u2500\u2500 types.h \u251c\u2500\u2500 init \u2502 \u251c\u2500\u2500 Makefile \u2502 \u251c\u2500\u2500 main.c \u2502 \u2514\u2500\u2500 test.c \u2514\u2500\u2500 lib \u251c\u2500\u2500 Makefile \u2514\u2500\u2500 printk.c \u4fee\u6539 vmlinux.lds \u4ee5\u53ca head.S 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< \u539f\u5148\u7684 vmlinux.lds ... .text : ALIGN(0x1000){ _stext = .; *(.text.entry) *(.text .text.*) _etext = .; } ... >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> \u4fee\u6539\u4e4b\u540e\u7684 vmlinux.lds ... .text : ALIGN(0x1000){ _stext = .; *(.text.init) <- \u52a0\u5165\u4e86 .text.init *(.text.entry) <- \u4e4b\u540e\u6211\u4eec\u5b9e\u73b0 \u4e2d\u65ad\u5904\u7406\u903b\u8f91 \u4f1a\u653e\u7f6e\u5728 .text.entry *(.text .text.*) _etext = .; } ... 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< \u539f\u5148\u7684 head.S extern start_kernel .section .text.entry <- \u4e4b\u524d\u7684 _start \u653e\u7f6e\u5728 .text.entry section .globl _start _start: ... >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> \u4fee\u6539\u4e4b\u540e\u7684 head.S extern start_kernel .section .text.init <- \u5c06 _start \u653e\u5165.text.init section .globl _start _start: ... * \u4fee\u6539 init/test.c 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< \u539f\u5148\u7684 test.c ... while(1) {} >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> \u4fee\u6539\u4e4b\u540e\u7684 test.c ... unsigned long record_time = 0; while (1) { unsigned long present_time; __asm__ volatile(\"rdtime %[t]\" : [t] \"=r\" (present_time) : : \"memory\"); present_time /= 10000000; if (record_time < present_time) { printk(\"kernel is running! Time: %lus\\n\", present_time); record_time = present_time; } } 4.2 \u5f00\u542f\u5f02\u5e38\u5904\u7406 \u5728\u8fd0\u884c start_kernel \u4e4b\u524d\uff0c\u6211\u4eec\u8981\u5bf9\u4e0a\u9762\u63d0\u5230\u7684 CSR \u8fdb\u884c\u521d\u59cb\u5316\uff0c\u521d\u59cb\u5316\u5305\u62ec\u4ee5\u4e0b\u51e0\u4e2a\u6b65\u9aa4\uff1a \u8bbe\u7f6e stvec \uff0c \u5c06 _traps ( _trap \u5728 4.3 \u4e2d\u5b9e\u73b0 ) \u6240\u8868\u793a\u7684\u5730\u5740\u5199\u5165 stvec \uff0c\u8fd9\u91cc\u6211\u4eec\u91c7\u7528 Direct \u6a21\u5f0f , \u800c _traps \u5219\u662f\u4e2d\u65ad\u5904\u7406\u5165\u53e3\u51fd\u6570\u7684\u57fa\u5730\u5740\u3002 \u5f00\u542f\u65f6\u949f\u4e2d\u65ad\uff0c\u5c06 sie[STIE] \u7f6e 1\u3002 \u8bbe\u7f6e\u7b2c\u4e00\u6b21\u65f6\u949f\u4e2d\u65ad\uff0c\u53c2\u8003 clock_set_next_event() ( clock_set_next_event() \u5728 4.5 \u4e2d\u4ecb\u7ecd ) \u4e2d\u7684\u903b\u8f91\u7528\u6c47\u7f16\u5b9e\u73b0\u3002 \u5f00\u542f S \u6001\u4e0b\u7684\u4e2d\u65ad\u54cd\u5e94\uff0c \u5c06 sstatus[SIE] \u7f6e 1\u3002 \u6309\u7167\u4e0b\u65b9\u6a21\u7248\u4fee\u6539 arch/riscv/kernel/head.S \uff0c \u5e76\u8865\u5168 _start \u4e2d\u7684\u903b\u8f91\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 .extern start_kernel .section .text.init .globl _start _start: # YOUR CODE HERE # ------------------ # set stvec = _traps # ------------------ # set sie[STIE] = 1 # ------------------ # set first time interrupt # ------------------ # set sstatus[SIE] = 1 # ------------------ # ------------------ # - your lab4 code - # ------------------ ... Debug \u63d0\u793a\uff1a \u53ef\u4ee5\u5148\u4e0d\u5b9e\u73b0 stvec \u548c first time interrupt\uff0c \u5148\u5173\u6ce8 sie \u548c sstatus \u662f\u5426\u8bbe\u7f6e\u6b63\u786e\u3002 \u5728QEMU\u4e2d\uff0c mtime \u548c mtimecmp \u7684\u5b9e\u73b0\u662f\u901a\u8fc7 MMIO(Memory-mapped I/O) \u7684\u65b9\u5f0f\u5b9e\u73b0\u7684\uff0c\u5728QEMU\u7684\u9ed8\u8ba4\u8bbe\u7f6e\u4e2d mtime \u7684\u5730\u5740\u4f4d\u4e8e 0x200bff8 \uff0c\u8bfb\u8fd9\u4e2a\u5730\u5740\u7684\u503c\u5c31\u662f mtime \u7684\u503c(\u5b9e\u9a8c\u4e2d\u662f\u4e00\u4e2a64bit\u7684\u91cf)\uff0c mtimecmp \u7684\u5730\u5740\u5728 0x2004000 \u3002 4.3 \u5b9e\u73b0\u4e0a\u4e0b\u6587\u5207\u6362 \u6211\u4eec\u8981\u4f7f\u7528\u6c47\u7f16\u5b9e\u73b0\u4e0a\u4e0b\u6587\u5207\u6362\u673a\u5236\uff0c \u5305\u542b\u4ee5\u4e0b\u51e0\u4e2a\u6b65\u9aa4\uff1a \u4fee\u6539 arch/riscv/kernel/ \u76ee\u5f55\u4e0b\u7684 entry.S \u6587\u4ef6\u3002 \u4fdd\u5b58CPU\u7684\u5bc4\u5b58\u5668\uff08\u4e0a\u4e0b\u6587\uff09\u5230\u5185\u5b58\u4e2d\uff08\u6808\u4e0a\uff09\u3002 \u5c06 scause \u548c sepc \u4e2d\u7684\u503c\u4f20\u5165\u5f02\u5e38\u5904\u7406\u51fd\u6570 trap_handler ( trap_handler \u5728 4.4 \u4e2d\u4ecb\u7ecd ) \uff0c\u6211\u4eec\u5c06\u4f1a\u5728 trap_handler \u4e2d\u5b9e\u73b0\u5bf9\u5f02\u5e38\u7684\u5904\u7406\u3002 \u5728\u5b8c\u6210\u5bf9\u5f02\u5e38\u7684\u5904\u7406\u4e4b\u540e\uff0c \u6211\u4eec\u4ece\u5185\u5b58\u4e2d\uff08\u6808\u4e0a\uff09\u6062\u590dCPU\u7684\u5bc4\u5b58\u5668\uff08\u4e0a\u4e0b\u6587\uff09\u3002 \u4ece trap \u4e2d\u8fd4\u56de\u3002 \u6309\u7167\u4e0b\u65b9\u6a21\u7248\u4fee\u6539 arch/riscv/kernel/entry.S \uff0c \u5e76\u8865\u5168 _traps \u4e2d\u7684\u903b\u8f91\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 .section .text.entry .align 2 .globl _traps _traps : # YOUR CODE HERE # ----------- # 1. save 32 registers and sepc to stack # ----------- # 2. call trap_handler # ----------- # 3. restore sepc and 32 registers (x2(sp) should be restore last) from stack # ----------- # 4. return from trap # ----------- Debug \u63d0\u793a\uff1a \u53ef\u4ee5\u5148\u4e0d\u5b9e\u73b0 call trap_handler\uff0c \u5148\u5b9e\u73b0\u4e0a\u5199\u6587\u5207\u6362\u903b\u8f91\u3002\u901a\u8fc7 gdb \u8ddf\u8e2a\u5404\u4e2a\u5bc4\u5b58\u5668\uff0c\u786e\u4fdd\u4e0a\u4e0b\u6587\u7684 save \u4e0e restore \u6b63\u786e\u5b9e\u73b0\u5e76\u6b63\u786e\u8fd4\u56de\u3002 4.4 \u5b9e\u73b0\u5f02\u5e38\u5904\u7406\u51fd\u6570 \u4fee\u6539 arch/riscv/kernel/ \u76ee\u5f55\u4e0b\u7684 trap.c \u6587\u4ef6\u3002 \u5728 trap.c \u4e2d\u5b9e\u73b0\u5f02\u5e38\u5904\u7406\u51fd\u6570 trap_handler() , \u5176\u63a5\u6536\u7684\u4e24\u4e2a\u53c2\u6570\u5206\u522b\u662f scause \u548c sepc \u4e24\u4e2a\u5bc4\u5b58\u5668\u4e2d\u7684\u503c\u3002 1 2 3 4 5 6 7 8 9 10 11 // trap.c void trap_handler ( unsigned long scause , unsigned long sepc ) { // \u901a\u8fc7 `scause` \u5224\u65adtrap\u7c7b\u578b // \u5982\u679c\u662finterrupt \u5224\u65ad\u662f\u5426\u662ftimer interrupt // \u5982\u679c\u662ftimer interrupt \u5219\u6253\u5370\u8f93\u51fa\u76f8\u5173\u4fe1\u606f(\u5373 4.6 \u8282\u4e2d\u8f93\u51fa\u7684[S] Supervisor Mode Timer Interrupt), \u5e76\u901a\u8fc7 `clock_set_next_event()` \u8bbe\u7f6e\u4e0b\u4e00\u6b21\u65f6\u949f\u4e2d\u65ad // `clock_set_next_event()` \u89c1 4.5 \u8282 // \u5176\u4ed6interrupt / exception \u53ef\u4ee5\u76f4\u63a5\u5ffd\u7565 # YOUR CODE HERE } 4.5 \u5b9e\u73b0\u65f6\u949f\u4e2d\u65ad\u76f8\u5173\u51fd\u6570 \u4fee\u6539 arch/riscv/kernel/ \u76ee\u5f55\u4e0b\u7684 clock.c \u6587\u4ef6\u3002 \u5728 clock.c \u4e2d\u5b9e\u73b0 get_cycles ( ) : \u4f7f\u7528 rdtime \u6c47\u7f16\u6307\u4ee4\u83b7\u5f97\u5f53\u524d time \u5bc4\u5b58\u5668\u4e2d\u7684\u503c\u3002 \u5728 clock.c \u4e2d\u5b9e\u73b0 clock_set_next_event ( ) : \u8c03\u7528 sbi_ecall \uff0c\u8bbe\u7f6e\u4e0b\u4e00\u4e2a\u65f6\u949f\u4e2d\u65ad\u4e8b\u4ef6\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 // clock.c // QEMU\u4e2d\u65f6\u949f\u7684\u9891\u7387\u662f10MHz, \u4e5f\u5c31\u662f1\u79d2\u949f\u76f8\u5f53\u4e8e10000000\u4e2a\u65f6\u949f\u5468\u671f\u3002 unsigned long TIMECLOCK = 10000000 ; unsigned long get_cycles () { // \u4f7f\u7528 rdtime \u7f16\u5199\u5185\u8054\u6c47\u7f16\uff0c\u83b7\u53d6 time \u5bc4\u5b58\u5668\u4e2d (\u4e5f\u5c31\u662fmtime \u5bc4\u5b58\u5668 )\u7684\u503c\u5e76\u8fd4\u56de # YOUR CODE HERE } void clock_set_next_event () { // \u4e0b\u4e00\u6b21 \u65f6\u949f\u4e2d\u65ad \u7684\u65f6\u95f4\u70b9 unsigned long next = get_cycles () + TIMECLOCK ; // \u4f7f\u7528 sbi_ecall \u6765\u5b8c\u6210\u5bf9\u4e0b\u4e00\u6b21\u65f6\u949f\u4e2d\u65ad\u7684\u8bbe\u7f6e # YOUR CODE HERE } 4.6 \u7f16\u8bd1\u53ca\u6d4b\u8bd5 \u7531\u4e8e\u52a0\u5165\u4e86\u4e00\u4e9b\u65b0\u7684 .c \u6587\u4ef6\uff0c\u53ef\u80fd\u9700\u8981\u4fee\u6539\u6216\u6dfb\u52a0\u4e00\u4e9b Makefile \u6216 .h \u6587\u4ef6\uff0c\u8bf7\u540c\u5b66\u81ea\u5df1\u5c1d\u8bd5\u4fee\u6539\uff0c\u4f7f\u9879\u76ee\u53ef\u4ee5\u7f16\u8bd1\u5e76\u8fd0\u884c\u3002 \u4e0b\u9762\u662f\u4e00\u4e2a\u6b63\u786e\u5b9e\u73b0\u7684\u8f93\u51fa\u6837\u4f8b\u3002\uff08 \u4ec5\u4f9b\u53c2\u8003 \uff09 1 2 3 4 5 6 7 8 9 2022 ZJU Computer System II kernel is running! Time: 1s [S] Supervisor Mode Timer Interrupt kernel is running! Time: 2s [S] Supervisor Mode Timer Interrupt kernel is running! Time: 3s [S] Supervisor Mode Timer Interrupt kernel is running! Time: 4s [S] Supervisor Mode Timer Interrupt \u601d\u8003\u9898 \u5728\u6211\u4eec\u4f7f\u7528make run\u65f6\uff0c OpenSBI \u4f1a\u4ea7\u751f\u5982\u4e0b\u8f93\u51fa: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 OpenSBI v0.9 ____ _____ ____ _____ / __ \\ / ____ | _ \\_ _ | | | | | _ __ ___ _ __ | ( ___ | | _ ) || | | | | | '_ \\ / _ \\ ' _ \\ \\_ __ \\| _ < | | | | __ | | | _ ) | __/ | | | ____ ) | | _ ) || | _ \\_ ___/ | .__/ \\_ __ | _ | | _ | _____/ | ____/_____ | | | | _ | ...... Boot HART MIDELEG : 0x0000000000000222 Boot HART MEDELEG : 0x000000000000b109 ...... \u901a\u8fc7\u67e5\u770b RISC-V Privileged Spec \u4e2d\u7684 medeleg \u548c mideleg \u89e3\u91ca\u4e0a\u9762 MIDELEG \u503c\u7684\u542b\u4e49\uff0c\u5982\u679c\u5b9e\u9a8c\u4e2dmideleg\u6ca1\u6709\u8bbe\u5b9a\u4e3a\u6b63\u786e\u7684\u503c\u7ed3\u679c\u4f1a\u600e\u4e48\u6837\u5462\uff1f \u673a\u5668\u542f\u52a8\u540etime\u3001cycle\u5bc4\u5b58\u5668\u5206\u522b\u662f\u4ece0\u5f00\u59cb\u8ba1\u65f6\u7684\u5417\uff0c\u4ece0\u8ba1\u65f6\u662f\u5426\u662f\u5fc5\u8981\u7684\u5462\uff1f\uff08\u6709\u5173 mcycle \u5bc4\u5b58\u5668\u7684\u5185\u5bb9\u53ef\u4ee5\u53c2\u8003\u624b\u518c\uff09 \u9605\u8bfbThe RISC-V Instruction Set Manual Volume I: Unprivileged ISA (V20191213)\u4e2d\u7b2c1.2\u7ae0\u8282 RISC-V Software Execution Environments and Harts\uff0c\u8c08\u8c08\u5982\u4f55\u5728\u4e00\u53f0\u4e0d\u652f\u6301\u4e58\u9664\u6cd5\u6307\u4ee4\u6269\u5c55\u7684\u5904\u7406\u5668\u4e0a\u6267\u884c\u4e58\u9664\u6cd5\u6307\u4ee4\u3002 \u4f5c\u4e1a\u63d0\u4ea4 \u540c\u5b66\u9700\u8981\u63d0\u4ea4\u5b9e\u9a8c\u62a5\u544a\u4ee5\u53ca\u6574\u4e2a\u5de5\u7a0b\u4ee3\u7801\uff0c\u63d0\u4ea4\u65f6\u8bf7\u6ce8\u610f\u5982\u4e0b\u51e0\u70b9\uff1a \u62a5\u544a\u7684pdf\u653e\u5728\u5916\u9762\uff0c\u538b\u7f29\u5305\u53ea\u653e\u4ee3\u7801\u3002 1 2 3 \u63d0\u4ea4\u6587\u4ef6 \u251c\u2500\u2500 report.pdf \u2514\u2500\u2500 code.zip \u63d0\u4ea4\u524d\u8bf7\u4f7f\u7528 make clean \u6e05\u9664\u6240\u6709\u6784\u5efa\u4ea7\u7269\u3002","title":"\u5b9e\u9a8c\u6307\u5bfc\u4e94"},{"location":"lab5/#5-rv64","text":"","title":"\u5b9e\u9a8c5: RV64 \u65f6\u949f\u4e2d\u65ad\u5904\u7406"},{"location":"lab5/#1","text":"\u5b66\u4e60 RISC-V \u7684\u5f02\u5e38\u5904\u7406\u76f8\u5173\u5bc4\u5b58\u5668\u4e0e\u6307\u4ee4\uff0c\u5b8c\u6210\u5bf9\u5f02\u5e38\u5904\u7406\u7684\u521d\u59cb\u5316\u3002 \u7406\u89e3 CPU \u4e0a\u4e0b\u6587\u5207\u6362\u673a\u5236\uff0c\u5e76\u6b63\u786e\u5b9e\u73b0\u4e0a\u4e0b\u6587\u5207\u6362\u529f\u80fd\u3002 \u7f16\u5199\u5f02\u5e38\u5904\u7406\u51fd\u6570\uff0c\u5b8c\u6210\u5bf9\u7279\u5b9a\u5f02\u5e38\u7684\u5904\u7406\u3002 \u8c03\u7528 OpenSBI \u63d0\u4f9b\u7684\u63a5\u53e3\uff0c\u5b8c\u6210\u5bf9\u65f6\u949f\u4e2d\u65ad\u4e8b\u4ef6\u7684\u8bbe\u7f6e\u3002","title":"1 \u5b9e\u9a8c\u76ee\u7684"},{"location":"lab5/#2","text":"Ubuntu 20.04, 22.04","title":"2 \u5b9e\u9a8c\u73af\u5883"},{"location":"lab5/#3","text":"","title":"3 \u80cc\u666f\u77e5\u8bc6"},{"location":"lab5/#30","text":"\u5728 lab4 \u4e2d\u6211\u4eec\u6210\u529f\u7684\u5c06\u4e00\u4e2a\u6700\u7b80\u5355\u7684 OS \u542f\u52a8\u8d77\u6765\uff0c \u4f46\u8fd8\u6ca1\u6709\u529e\u6cd5\u4e0e\u4e4b\u4ea4\u4e92\u3002\u6211\u4eec\u5728\u8bfe\u7a0b\u4e2d\u8bb2\u8fc7\u64cd\u4f5c\u7cfb\u7edf\u542f\u52a8\u4e4b\u540e\u7531 \u4e8b\u4ef6 \uff08 event \uff09\u9a71\u52a8\uff0c\u5728\u672c\u6b21\u5b9e\u9a8c\u4e2d\u6211\u4eec\u5c06\u5f15\u5165\u4e00\u79cd\u91cd\u8981\u7684\u4e8b\u4ef6 \u5f02\u5e38 \uff0c \u5f02\u5e38\u7ed9\u4e86 OS \u4e0e\u786c\u4ef6\u3001\u8f6f\u4ef6\u4ea4\u4e92\u7684\u80fd\u529b\u3002\u5728 lab4 \u4e2d\u6211\u4eec\u4ecb\u7ecd\u4e86\u5728 RISC-V \u4e2d\u6709\u4e09\u79cd\u7279\u6743\u7ea7 ( M \u6001\u3001 S \u6001\u3001 U \u6001 )\uff0c \u5728Boot\u9636\u6bb5\uff0c OpenSBI \u5df2\u7ecf\u5e2e\u6211\u4eec\u5c06 M \u6001\u7684\u5f02\u5e38\u5904\u7406\u8fdb\u884c\u4e86\u521d\u59cb\u5316\uff0c\u8fd9\u4e00\u90e8\u5206\u4e0d\u9700\u8981\u6211\u4eec\u518d\u53bb\u5b9e\u73b0\uff0c\u56e0\u6b64\u672c\u6b21\u8bd5\u9a8c\u6211\u4eec\u91cd\u70b9\u5173\u6ce8 S \u6001\u7684\u5f02\u5e38\u5904\u7406\u3002","title":"3.0 \u524d\u8a00"},{"location":"lab5/#31-risc-v-interrupt-exception","text":"","title":"3.1 RISC-V \u4e2d\u7684 Interrupt \u548c Exception"},{"location":"lab5/#311-interrupt-exception","text":"We use the term exception to refer to an unusual condition occurring at run time associated with an instruction in the current RISC-V hart. We use the term interrupt to refer to an external asynchronous event that may cause a RISC-V hart to experience an unexpected transfer of control. We use the term trap to refer to the transfer of control to a trap handler caused by either an exception or an interrupt. \u4e0a\u8ff0\u662f RISC-V Unprivileged Spec 1.6 \u8282\u4e2d\u5bf9\u4e8e Trap \u3001 Interrupt \u4e0e Exception \u7684\u63cf\u8ff0\u3002\u603b\u7ed3\u8d77\u6765 Interrupt \u4e0e Exception \u7684\u4e3b\u8981\u533a\u522b\u5982\u4e0b\u8868\uff1a Interrupt Exception Hardware generate Software generate These are asynchronous external requests for service (like keyboard or printer needs service). These are synchronous internal requests for service based upon abnormal events (think of illegal instructions, illegal address, overflow etc). These are normal events and shouldn\u2019t interfere with the normal running of a computer. These are abnormal events and often result in the termination of a program \u4e0a\u6587\u4e2d\u7684 Trap \u63cf\u8ff0\u7684\u662f\u4e00\u79cd\u63a7\u5236\u8f6c\u79fb\u7684\u8fc7\u7a0b, \u8fd9\u4e2a\u8fc7\u7a0b\u662f\u7531 Interrupt \u6216\u8005 Exception \u5f15\u8d77\u7684\u3002\u8fd9\u91cc\u4e3a\u4e86\u65b9\u4fbf\u8d77\u89c1\uff0c\u6211\u4eec\u5728\u8fd9\u91cc\u7ea6\u5b9a Trap \u4e3a Interrput \u4e0e Exception \u7684\u603b\u79f0\u3002 \u5728\u4e0b\u6587\u4e2d \u6211\u4eec\u7528 \u5f02\u5e38 \u4ee3\u6307 Trap","title":"3.1.1 \u4ec0\u4e48\u662f Interrupt \u548c Exception"},{"location":"lab5/#312","text":"\u9664\u4e8632\u4e2a\u901a\u7528\u5bc4\u5b58\u5668\u4e4b\u5916\uff0cRISC-V \u67b6\u6784\u8fd8\u6709\u5927\u91cf\u7684 \u63a7\u5236\u72b6\u6001\u5bc4\u5b58\u5668 Control and Status Registers(CSRs) \uff0c\u4e0b\u9762\u5c06\u4ecb\u7ecd\u51e0\u4e2a\u548c\u5f02\u5e38\u673a\u5236\u76f8\u5173\u7684\u91cd\u8981\u5bc4\u5b58\u5668\u3002 Supervisor Mode \u5f02\u5e38\u76f8\u5173\u5bc4\u5bc4\u5b58\u5668: sstatus ( Supervisor Status Register )\u4e2d\u5b58\u5728\u4e00\u4e2a SIE ( Supervisor Interrupt Enable ) \u6bd4\u7279\u4f4d\uff0c\u5f53\u8be5\u6bd4\u7279\u4f4d\u8bbe\u7f6e\u4e3a 1 \u65f6\uff0c\u4f1a\u5bf9\u6240\u6709\u7684 S \u6001\u5f02\u5e38 \u54cd\u5e94 \uff0c \u5426\u5219\u5c06\u4f1a\u7981\u7528\u6240\u6709 S \u6001\u5f02\u5e38\u3002 sie ( Supervisor Interrupt Eable Register )\u3002\u5728 RISC-V \u4e2d\uff0c Interrupt \u88ab\u5212\u5206\u4e3a\u4e09\u7c7b Software Interrupt \uff0c Timer Interrupt \uff0c External Interrupt \u3002\u5728\u5f00\u542f\u4e86 sstatus[SIE] \u4e4b\u540e\uff0c\u7cfb\u7edf\u4f1a\u6839\u636e sie \u4e2d\u7684\u76f8\u5173\u6bd4\u7279\u4f4d\u6765\u51b3\u5b9a\u662f\u5426\u5bf9\u8be5 Interrupt \u8fdb\u884c \u5904\u7406 \u3002 stvec ( Supervisor Trap Vector Base Address Register ) \u5373\u6240\u8c13\u7684\u201d\u4e2d\u65ad\u5411\u91cf\u8868\u57fa\u5740\u201d\u3002 stvec \u6709\u4e24\u79cd\u6a21\u5f0f\uff1a Direct \u6a21\u5f0f \uff0c\u9002\u7528\u4e8e\u7cfb\u7edf\u4e2d\u53ea\u6709\u4e00\u4e2a\u4e2d\u65ad\u5904\u7406\u7a0b\u5e8f, \u5176\u6307\u5411\u4e2d\u65ad\u5904\u7406\u5165\u53e3\u51fd\u6570 \uff08 \u672c\u6b21\u5b9e\u9a8c\u4e2d\u6211\u4eec\u6240\u7528\u7684\u6a21\u5f0f \uff09\u3002 Vectored \u6a21\u5f0f \uff0c\u6307\u5411\u4e2d\u65ad\u5411\u91cf\u8868\uff0c \u9002\u7528\u4e8e\u7cfb\u7edf\u4e2d\u6709\u591a\u4e2a\u4e2d\u65ad\u5904\u7406\u7a0b\u5e8f \uff08 \u8be5\u6a21\u5f0f\u53ef\u4ee5\u53c2\u8003 RISC-V \u5185\u6838\u6e90\u7801 \uff09\u3002 scause ( Supervisor Cause Register ), \u4f1a\u8bb0\u5f55\u5f02\u5e38\u53d1\u751f\u7684\u539f\u56e0\uff0c\u8fd8\u4f1a\u8bb0\u5f55\u8be5\u5f02\u5e38\u662f Interrupt \u8fd8\u662f Exception \u3002 sepc ( Supervisor Exception Program Counter ), \u4f1a\u8bb0\u5f55\u89e6\u53d1\u5f02\u5e38\u7684\u90a3\u6761\u6307\u4ee4\u7684\u5730\u5740\u3002 Machine Mode \u5f02\u5e38\u76f8\u5173\u5bc4\u5bc4\u5b58\u5668: \u7c7b\u4f3c\u4e8e Supervisor Mode\uff0c Machine Mode \u4e5f\u6709\u76f8\u5bf9\u5e94\u7684\u5bc4\u5b58\u5668\uff0c\u4f46\u7531\u4e8e\u672c\u5b9e\u9a8c\u540c\u5b66\u4e0d\u9700\u8981\u64cd\u4f5c\u8fd9\u4e9b\u5bc4\u5b58\u5668\uff0c\u6545\u4e0d\u5728\u6b64\u4f5c\u4ecb\u7ecd\u3002 \u4ee5\u4e0a\u5bc4\u5b58\u5668\u7684\u8be6\u7ec6\u4ecb\u7ecd\u8bf7\u540c\u5b66\u4eec\u53c2\u8003 RISC-V Privileged Spec","title":"3.1.2 \u76f8\u5173\u5bc4\u5b58\u5668"},{"location":"lab5/#313","text":"ecall ( Environment Call )\uff0c\u5f53\u6211\u4eec\u5728 S \u6001\u6267\u884c\u8fd9\u6761\u6307\u4ee4\u65f6\uff0c\u4f1a\u89e6\u53d1\u4e00\u4e2a ecall-from-s-mode-exception \uff0c\u4ece\u800c\u8fdb\u5165 M \u6a21\u5f0f\u4e2d\u7684\u4e2d\u65ad\u5904\u7406\u6d41\u7a0b( \u5982\u8bbe\u7f6e\u5b9a\u65f6\u5668\u7b49 )\uff1b\u5f53\u6211\u4eec\u5728 U \u6001\u6267\u884c\u8fd9\u6761\u6307\u4ee4\u65f6\uff0c\u4f1a\u89e6\u53d1\u4e00\u4e2a ecall-from-u-mode-exception \uff0c\u4ece\u800c\u8fdb\u5165 S \u6a21\u5f0f\u4e2d\u7684\u4e2d\u65ad\u5904\u7406\u6d41\u7a0b ( \u5e38\u7528\u6765\u8fdb\u884c\u7cfb\u7edf\u8c03\u7528 )\u3002 sret \u7528\u4e8e S \u6001\u5f02\u5e38\u8fd4\u56de, \u901a\u8fc7 sepc \u6765\u8bbe\u7f6e pc \u7684\u503c\uff0c \u8fd4\u56de\u5230\u4e4b\u524d\u7a0b\u5e8f\u7ee7\u7eed\u8fd0\u884c\u3002 \u4ee5\u4e0a\u6307\u4ee4\u7684\u8be6\u7ec6\u4ecb\u7ecd\u8bf7\u540c\u5b66\u4eec\u53c2\u8003 RISC-V Privileged Spec","title":"3.1.3 \u76f8\u5173\u7279\u6743\u6307\u4ee4"},{"location":"lab5/#32","text":"\u7531\u4e8e\u5728\u5904\u7406\u5f02\u5e38\u65f6\uff0c\u6709\u53ef\u80fd\u4f1a\u6539\u53d8\u7cfb\u7edf\u7684\u72b6\u6001\u3002\u6240\u4ee5\u5728\u771f\u6b63\u5904\u7406\u5f02\u5e38\u4e4b\u524d\uff0c\u6211\u4eec\u6709\u5fc5\u8981\u5bf9\u7cfb\u7edf\u7684\u5f53\u524d\u72b6\u6001\u8fdb\u884c\u4fdd\u5b58\uff0c\u5728\u5f02\u5e38\u5904\u7406\u5b8c\u6210\u4e4b\u540e\uff0c\u6211\u4eec\u518d\u5c06\u7cfb\u7edf\u6062\u590d\u81f3\u539f\u5148\u7684\u72b6\u6001\uff0c\u5c31\u53ef\u4ee5\u786e\u4fdd\u4e4b\u524d\u7684\u7a0b\u5e8f\u7ee7\u7eed\u6b63\u5e38\u8fd0\u884c\u3002 \u8fd9\u91cc\u7684\u7cfb\u7edf\u72b6\u6001\u901a\u5e38\u662f\u6307\u5bc4\u5b58\u5668\uff0c\u8fd9\u4e9b\u5bc4\u5b58\u5668\u4e5f\u53eb\u505aCPU\u7684\u4e0a\u4e0b\u6587 ( Context ).","title":"3.2 \u4e0a\u4e0b\u6587\u5904\u7406"},{"location":"lab5/#33","text":"\u5f02\u5e38\u5904\u7406\u7a0b\u5e8f\u6839\u636e scause \u7684\u503c\uff0c \u8fdb\u5165\u4e0d\u540c\u7684\u5904\u7406\u903b\u8f91\uff0c\u5728\u672c\u6b21\u8bd5\u9a8c\u4e2d\u6211\u4eec\u9700\u8981\u5173\u5fc3\u7684\u53ea\u6709 Superviosr Timer Interrupt \u3002","title":"3.3 \u5f02\u5e38\u5904\u7406\u7a0b\u5e8f"},{"location":"lab5/#34","text":"\u65f6\u949f\u4e2d\u65ad\u9700\u8981 CPU \u786c\u4ef6\u7684\u652f\u6301\u3002CPU \u4ee5\"\u65f6\u949f\u5468\u671f\"\u4e3a\u5de5\u4f5c\u7684\u57fa\u672c\u65f6\u95f4\u5355\u4f4d\uff0c\u5bf9\u903b\u8f91\u95e8\u7684\u65f6\u5e8f\u7535\u8def\u8fdb\u884c\u540c\u6b65\u3002\u800c\u65f6\u949f\u4e2d\u65ad\u5b9e\u9645\u4e0a\u5c31\u662f\u201c\u6bcf\u9694\u82e5\u5e72\u4e2a\u65f6\u949f\u5468\u671f\u6267\u884c\u4e00\u6b21\u7684\u7a0b\u5e8f\u201d\u3002\u4e0b\u9762\u4ecb\u7ecd\u4e0e\u65f6\u949f\u4e2d\u65ad\u76f8\u5173\u7684\u5bc4\u5b58\u5668\u4ee5\u53ca\u5982\u4f55\u4ea7\u751f\u65f6\u949f\u4e2d\u65ad\u3002 mtime \u4e0e mtimecmp ( Machine Timer Register )\u3002 mtime \u662f\u4e00\u4e2a\u5b9e\u65f6\u8ba1\u65f6\u5668\uff0c \u7531\u786c\u4ef6\u4ee5\u6052\u5b9a\u7684\u9891\u7387\u81ea\u589e\u3002 mtimecmp \u4e2d\u4fdd\u5b58\u7740\u4e0b\u4e00\u6b21\u65f6\u949f\u4e2d\u65ad\u53d1\u751f\u7684\u65f6\u95f4\u70b9\uff0c\u5f53 mtime \u7684\u503c\u5927\u4e8e\u6216\u7b49\u4e8e mtimecmp \u7684\u503c\uff0c\u7cfb\u7edf\u5c31\u4f1a\u89e6\u53d1\u4e00\u6b21\u65f6\u949f\u4e2d\u65ad\u3002\u56e0\u6b64\u6211\u4eec\u53ea\u9700\u8981\u66f4\u65b0 mtimecmp \u4e2d\u7684\u503c\uff0c\u5c31\u53ef\u4ee5\u8bbe\u7f6e\u4e0b\u4e00\u6b21\u65f6\u949f\u4e2d\u65ad\u7684\u89e6\u53d1\u70b9\u3002 OpenSBI \u5df2\u7ecf\u4e3a\u6211\u4eec\u63d0\u4f9b\u4e86\u66f4\u65b0 mtimecmp \u7684\u63a5\u53e3 sbi_set_timer ( \u89c1 lab4 4.4\u8282 )\u3002 mcounteren ( Counter-Enable Registers )\u3002\u7531\u4e8e mtime \u662f\u5c5e\u4e8e M \u6001\u7684\u5bc4\u5b58\u5668\uff0c\u6211\u4eec\u5728 S \u6001\u65e0\u6cd5\u76f4\u63a5\u5bf9\u5176\u8bfb\u5199\uff0c \u5e78\u8fd0\u7684\u662f OpenSBI \u5728 M \u6001\u5df2\u7ecf\u901a\u8fc7\u8bbe\u7f6e mcounteren \u5bc4\u5b58\u5668\u7684 TM \u6bd4\u7279\u4f4d\uff0c \u8ba9\u6211\u4eec\u53ef\u4ee5\u5728 S \u6001\u4e2d\u53ef\u4ee5\u901a\u8fc7 time \u8fd9\u4e2a \u53ea\u8bfb \u5bc4\u5b58\u5668\u8bfb\u53d6\u5230 mtime \u7684\u5f53\u524d\u503c\uff0c\u76f8\u5173\u6c47\u7f16\u6307\u4ee4\u662f rdtime \u3002 \u4ee5\u4e0a\u5bc4\u5b58\u5668\u7684\u8be6\u7ec6\u4ecb\u7ecd\u8bf7\u540c\u5b66\u4eec\u53c2\u8003 RISC-V Privileged Spec","title":"3.4 \u65f6\u949f\u4e2d\u65ad"},{"location":"lab5/#4","text":"","title":"4 \u5b9e\u9a8c\u6b65\u9aa4"},{"location":"lab5/#41","text":"\u6b64\u6b21\u5b9e\u9a8c\u57fa\u4e8e lab4 \u540c\u5b66\u6240\u5b9e\u73b0\u7684\u4ee3\u7801\u8fdb\u884c\u3002 \u5728 lab4 \u4e2d\u6211\u4eec\u5b9e\u73b0\u7684 puti puts \u4f7f\u7528\u8d77\u6765\u8f83\u4e3a\u7e41\u7410\uff0c\u56e0\u6b64\u5728\u8fd9\u91cc\u6211\u4eec\u63d0\u4f9b\u4e86\u7b80\u5316\u7248\u7684 printk \u3002 \u4ece repo \u540c\u6b65\u4ee3\u7801\u3002 \u8fd8\u9700\u8981\u5c06\u4e4b\u524d\u6240\u6709 print.h puti puts \u7684\u5f15\u7528\u4fee\u6539\u4e3a printk.h printk \u3002\u540c\u6b65\u540e\u4ee3\u7801\u7684\u76ee\u5f55\u7ed3\u6784\u5982\u4e0b\u6240\u793a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 . \u251c\u2500\u2500 Makefile \u251c\u2500\u2500 arch \u2502 \u2514\u2500\u2500 riscv \u2502 \u251c\u2500\u2500 Makefile \u2502 \u251c\u2500\u2500 include \u2502 \u2502 \u251c\u2500\u2500 defs.h \u2502 \u2502 \u2514\u2500\u2500 sbi.h \u2502 \u2514\u2500\u2500 kernel \u2502 \u251c\u2500\u2500 Makefile \u2502 \u251c\u2500\u2500 clock.c \u2502 \u251c\u2500\u2500 entry.S \u2502 \u251c\u2500\u2500 head.S \u2502 \u251c\u2500\u2500 sbi.c \u2502 \u251c\u2500\u2500 trap.c \u2502 \u2514\u2500\u2500 vmlinux.lds \u251c\u2500\u2500 include \u2502 \u251c\u2500\u2500 printk.h \u2502 \u251c\u2500\u2500 stddef.h \u2502 \u2514\u2500\u2500 types.h \u251c\u2500\u2500 init \u2502 \u251c\u2500\u2500 Makefile \u2502 \u251c\u2500\u2500 main.c \u2502 \u2514\u2500\u2500 test.c \u2514\u2500\u2500 lib \u251c\u2500\u2500 Makefile \u2514\u2500\u2500 printk.c \u4fee\u6539 vmlinux.lds \u4ee5\u53ca head.S 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< \u539f\u5148\u7684 vmlinux.lds ... .text : ALIGN(0x1000){ _stext = .; *(.text.entry) *(.text .text.*) _etext = .; } ... >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> \u4fee\u6539\u4e4b\u540e\u7684 vmlinux.lds ... .text : ALIGN(0x1000){ _stext = .; *(.text.init) <- \u52a0\u5165\u4e86 .text.init *(.text.entry) <- \u4e4b\u540e\u6211\u4eec\u5b9e\u73b0 \u4e2d\u65ad\u5904\u7406\u903b\u8f91 \u4f1a\u653e\u7f6e\u5728 .text.entry *(.text .text.*) _etext = .; } ... 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< \u539f\u5148\u7684 head.S extern start_kernel .section .text.entry <- \u4e4b\u524d\u7684 _start \u653e\u7f6e\u5728 .text.entry section .globl _start _start: ... >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> \u4fee\u6539\u4e4b\u540e\u7684 head.S extern start_kernel .section .text.init <- \u5c06 _start \u653e\u5165.text.init section .globl _start _start: ... * \u4fee\u6539 init/test.c 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< \u539f\u5148\u7684 test.c ... while(1) {} >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> \u4fee\u6539\u4e4b\u540e\u7684 test.c ... unsigned long record_time = 0; while (1) { unsigned long present_time; __asm__ volatile(\"rdtime %[t]\" : [t] \"=r\" (present_time) : : \"memory\"); present_time /= 10000000; if (record_time < present_time) { printk(\"kernel is running! Time: %lus\\n\", present_time); record_time = present_time; } }","title":"4.1 \u51c6\u5907\u5de5\u7a0b"},{"location":"lab5/#42","text":"\u5728\u8fd0\u884c start_kernel \u4e4b\u524d\uff0c\u6211\u4eec\u8981\u5bf9\u4e0a\u9762\u63d0\u5230\u7684 CSR \u8fdb\u884c\u521d\u59cb\u5316\uff0c\u521d\u59cb\u5316\u5305\u62ec\u4ee5\u4e0b\u51e0\u4e2a\u6b65\u9aa4\uff1a \u8bbe\u7f6e stvec \uff0c \u5c06 _traps ( _trap \u5728 4.3 \u4e2d\u5b9e\u73b0 ) \u6240\u8868\u793a\u7684\u5730\u5740\u5199\u5165 stvec \uff0c\u8fd9\u91cc\u6211\u4eec\u91c7\u7528 Direct \u6a21\u5f0f , \u800c _traps \u5219\u662f\u4e2d\u65ad\u5904\u7406\u5165\u53e3\u51fd\u6570\u7684\u57fa\u5730\u5740\u3002 \u5f00\u542f\u65f6\u949f\u4e2d\u65ad\uff0c\u5c06 sie[STIE] \u7f6e 1\u3002 \u8bbe\u7f6e\u7b2c\u4e00\u6b21\u65f6\u949f\u4e2d\u65ad\uff0c\u53c2\u8003 clock_set_next_event() ( clock_set_next_event() \u5728 4.5 \u4e2d\u4ecb\u7ecd ) \u4e2d\u7684\u903b\u8f91\u7528\u6c47\u7f16\u5b9e\u73b0\u3002 \u5f00\u542f S \u6001\u4e0b\u7684\u4e2d\u65ad\u54cd\u5e94\uff0c \u5c06 sstatus[SIE] \u7f6e 1\u3002 \u6309\u7167\u4e0b\u65b9\u6a21\u7248\u4fee\u6539 arch/riscv/kernel/head.S \uff0c \u5e76\u8865\u5168 _start \u4e2d\u7684\u903b\u8f91\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 .extern start_kernel .section .text.init .globl _start _start: # YOUR CODE HERE # ------------------ # set stvec = _traps # ------------------ # set sie[STIE] = 1 # ------------------ # set first time interrupt # ------------------ # set sstatus[SIE] = 1 # ------------------ # ------------------ # - your lab4 code - # ------------------ ... Debug \u63d0\u793a\uff1a \u53ef\u4ee5\u5148\u4e0d\u5b9e\u73b0 stvec \u548c first time interrupt\uff0c \u5148\u5173\u6ce8 sie \u548c sstatus \u662f\u5426\u8bbe\u7f6e\u6b63\u786e\u3002 \u5728QEMU\u4e2d\uff0c mtime \u548c mtimecmp \u7684\u5b9e\u73b0\u662f\u901a\u8fc7 MMIO(Memory-mapped I/O) \u7684\u65b9\u5f0f\u5b9e\u73b0\u7684\uff0c\u5728QEMU\u7684\u9ed8\u8ba4\u8bbe\u7f6e\u4e2d mtime \u7684\u5730\u5740\u4f4d\u4e8e 0x200bff8 \uff0c\u8bfb\u8fd9\u4e2a\u5730\u5740\u7684\u503c\u5c31\u662f mtime \u7684\u503c(\u5b9e\u9a8c\u4e2d\u662f\u4e00\u4e2a64bit\u7684\u91cf)\uff0c mtimecmp \u7684\u5730\u5740\u5728 0x2004000 \u3002","title":"4.2 \u5f00\u542f\u5f02\u5e38\u5904\u7406"},{"location":"lab5/#43","text":"\u6211\u4eec\u8981\u4f7f\u7528\u6c47\u7f16\u5b9e\u73b0\u4e0a\u4e0b\u6587\u5207\u6362\u673a\u5236\uff0c \u5305\u542b\u4ee5\u4e0b\u51e0\u4e2a\u6b65\u9aa4\uff1a \u4fee\u6539 arch/riscv/kernel/ \u76ee\u5f55\u4e0b\u7684 entry.S \u6587\u4ef6\u3002 \u4fdd\u5b58CPU\u7684\u5bc4\u5b58\u5668\uff08\u4e0a\u4e0b\u6587\uff09\u5230\u5185\u5b58\u4e2d\uff08\u6808\u4e0a\uff09\u3002 \u5c06 scause \u548c sepc \u4e2d\u7684\u503c\u4f20\u5165\u5f02\u5e38\u5904\u7406\u51fd\u6570 trap_handler ( trap_handler \u5728 4.4 \u4e2d\u4ecb\u7ecd ) \uff0c\u6211\u4eec\u5c06\u4f1a\u5728 trap_handler \u4e2d\u5b9e\u73b0\u5bf9\u5f02\u5e38\u7684\u5904\u7406\u3002 \u5728\u5b8c\u6210\u5bf9\u5f02\u5e38\u7684\u5904\u7406\u4e4b\u540e\uff0c \u6211\u4eec\u4ece\u5185\u5b58\u4e2d\uff08\u6808\u4e0a\uff09\u6062\u590dCPU\u7684\u5bc4\u5b58\u5668\uff08\u4e0a\u4e0b\u6587\uff09\u3002 \u4ece trap \u4e2d\u8fd4\u56de\u3002 \u6309\u7167\u4e0b\u65b9\u6a21\u7248\u4fee\u6539 arch/riscv/kernel/entry.S \uff0c \u5e76\u8865\u5168 _traps \u4e2d\u7684\u903b\u8f91\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 .section .text.entry .align 2 .globl _traps _traps : # YOUR CODE HERE # ----------- # 1. save 32 registers and sepc to stack # ----------- # 2. call trap_handler # ----------- # 3. restore sepc and 32 registers (x2(sp) should be restore last) from stack # ----------- # 4. return from trap # ----------- Debug \u63d0\u793a\uff1a \u53ef\u4ee5\u5148\u4e0d\u5b9e\u73b0 call trap_handler\uff0c \u5148\u5b9e\u73b0\u4e0a\u5199\u6587\u5207\u6362\u903b\u8f91\u3002\u901a\u8fc7 gdb \u8ddf\u8e2a\u5404\u4e2a\u5bc4\u5b58\u5668\uff0c\u786e\u4fdd\u4e0a\u4e0b\u6587\u7684 save \u4e0e restore \u6b63\u786e\u5b9e\u73b0\u5e76\u6b63\u786e\u8fd4\u56de\u3002","title":"4.3 \u5b9e\u73b0\u4e0a\u4e0b\u6587\u5207\u6362"},{"location":"lab5/#44","text":"\u4fee\u6539 arch/riscv/kernel/ \u76ee\u5f55\u4e0b\u7684 trap.c \u6587\u4ef6\u3002 \u5728 trap.c \u4e2d\u5b9e\u73b0\u5f02\u5e38\u5904\u7406\u51fd\u6570 trap_handler() , \u5176\u63a5\u6536\u7684\u4e24\u4e2a\u53c2\u6570\u5206\u522b\u662f scause \u548c sepc \u4e24\u4e2a\u5bc4\u5b58\u5668\u4e2d\u7684\u503c\u3002 1 2 3 4 5 6 7 8 9 10 11 // trap.c void trap_handler ( unsigned long scause , unsigned long sepc ) { // \u901a\u8fc7 `scause` \u5224\u65adtrap\u7c7b\u578b // \u5982\u679c\u662finterrupt \u5224\u65ad\u662f\u5426\u662ftimer interrupt // \u5982\u679c\u662ftimer interrupt \u5219\u6253\u5370\u8f93\u51fa\u76f8\u5173\u4fe1\u606f(\u5373 4.6 \u8282\u4e2d\u8f93\u51fa\u7684[S] Supervisor Mode Timer Interrupt), \u5e76\u901a\u8fc7 `clock_set_next_event()` \u8bbe\u7f6e\u4e0b\u4e00\u6b21\u65f6\u949f\u4e2d\u65ad // `clock_set_next_event()` \u89c1 4.5 \u8282 // \u5176\u4ed6interrupt / exception \u53ef\u4ee5\u76f4\u63a5\u5ffd\u7565 # YOUR CODE HERE }","title":"4.4 \u5b9e\u73b0\u5f02\u5e38\u5904\u7406\u51fd\u6570"},{"location":"lab5/#45","text":"\u4fee\u6539 arch/riscv/kernel/ \u76ee\u5f55\u4e0b\u7684 clock.c \u6587\u4ef6\u3002 \u5728 clock.c \u4e2d\u5b9e\u73b0 get_cycles ( ) : \u4f7f\u7528 rdtime \u6c47\u7f16\u6307\u4ee4\u83b7\u5f97\u5f53\u524d time \u5bc4\u5b58\u5668\u4e2d\u7684\u503c\u3002 \u5728 clock.c \u4e2d\u5b9e\u73b0 clock_set_next_event ( ) : \u8c03\u7528 sbi_ecall \uff0c\u8bbe\u7f6e\u4e0b\u4e00\u4e2a\u65f6\u949f\u4e2d\u65ad\u4e8b\u4ef6\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 // clock.c // QEMU\u4e2d\u65f6\u949f\u7684\u9891\u7387\u662f10MHz, \u4e5f\u5c31\u662f1\u79d2\u949f\u76f8\u5f53\u4e8e10000000\u4e2a\u65f6\u949f\u5468\u671f\u3002 unsigned long TIMECLOCK = 10000000 ; unsigned long get_cycles () { // \u4f7f\u7528 rdtime \u7f16\u5199\u5185\u8054\u6c47\u7f16\uff0c\u83b7\u53d6 time \u5bc4\u5b58\u5668\u4e2d (\u4e5f\u5c31\u662fmtime \u5bc4\u5b58\u5668 )\u7684\u503c\u5e76\u8fd4\u56de # YOUR CODE HERE } void clock_set_next_event () { // \u4e0b\u4e00\u6b21 \u65f6\u949f\u4e2d\u65ad \u7684\u65f6\u95f4\u70b9 unsigned long next = get_cycles () + TIMECLOCK ; // \u4f7f\u7528 sbi_ecall \u6765\u5b8c\u6210\u5bf9\u4e0b\u4e00\u6b21\u65f6\u949f\u4e2d\u65ad\u7684\u8bbe\u7f6e # YOUR CODE HERE }","title":"4.5 \u5b9e\u73b0\u65f6\u949f\u4e2d\u65ad\u76f8\u5173\u51fd\u6570"},{"location":"lab5/#46","text":"\u7531\u4e8e\u52a0\u5165\u4e86\u4e00\u4e9b\u65b0\u7684 .c \u6587\u4ef6\uff0c\u53ef\u80fd\u9700\u8981\u4fee\u6539\u6216\u6dfb\u52a0\u4e00\u4e9b Makefile \u6216 .h \u6587\u4ef6\uff0c\u8bf7\u540c\u5b66\u81ea\u5df1\u5c1d\u8bd5\u4fee\u6539\uff0c\u4f7f\u9879\u76ee\u53ef\u4ee5\u7f16\u8bd1\u5e76\u8fd0\u884c\u3002 \u4e0b\u9762\u662f\u4e00\u4e2a\u6b63\u786e\u5b9e\u73b0\u7684\u8f93\u51fa\u6837\u4f8b\u3002\uff08 \u4ec5\u4f9b\u53c2\u8003 \uff09 1 2 3 4 5 6 7 8 9 2022 ZJU Computer System II kernel is running! Time: 1s [S] Supervisor Mode Timer Interrupt kernel is running! Time: 2s [S] Supervisor Mode Timer Interrupt kernel is running! Time: 3s [S] Supervisor Mode Timer Interrupt kernel is running! Time: 4s [S] Supervisor Mode Timer Interrupt","title":"4.6 \u7f16\u8bd1\u53ca\u6d4b\u8bd5"},{"location":"lab5/#_1","text":"\u5728\u6211\u4eec\u4f7f\u7528make run\u65f6\uff0c OpenSBI \u4f1a\u4ea7\u751f\u5982\u4e0b\u8f93\u51fa: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 OpenSBI v0.9 ____ _____ ____ _____ / __ \\ / ____ | _ \\_ _ | | | | | _ __ ___ _ __ | ( ___ | | _ ) || | | | | | '_ \\ / _ \\ ' _ \\ \\_ __ \\| _ < | | | | __ | | | _ ) | __/ | | | ____ ) | | _ ) || | _ \\_ ___/ | .__/ \\_ __ | _ | | _ | _____/ | ____/_____ | | | | _ | ...... Boot HART MIDELEG : 0x0000000000000222 Boot HART MEDELEG : 0x000000000000b109 ...... \u901a\u8fc7\u67e5\u770b RISC-V Privileged Spec \u4e2d\u7684 medeleg \u548c mideleg \u89e3\u91ca\u4e0a\u9762 MIDELEG \u503c\u7684\u542b\u4e49\uff0c\u5982\u679c\u5b9e\u9a8c\u4e2dmideleg\u6ca1\u6709\u8bbe\u5b9a\u4e3a\u6b63\u786e\u7684\u503c\u7ed3\u679c\u4f1a\u600e\u4e48\u6837\u5462\uff1f \u673a\u5668\u542f\u52a8\u540etime\u3001cycle\u5bc4\u5b58\u5668\u5206\u522b\u662f\u4ece0\u5f00\u59cb\u8ba1\u65f6\u7684\u5417\uff0c\u4ece0\u8ba1\u65f6\u662f\u5426\u662f\u5fc5\u8981\u7684\u5462\uff1f\uff08\u6709\u5173 mcycle \u5bc4\u5b58\u5668\u7684\u5185\u5bb9\u53ef\u4ee5\u53c2\u8003\u624b\u518c\uff09 \u9605\u8bfbThe RISC-V Instruction Set Manual Volume I: Unprivileged ISA (V20191213)\u4e2d\u7b2c1.2\u7ae0\u8282 RISC-V Software Execution Environments and Harts\uff0c\u8c08\u8c08\u5982\u4f55\u5728\u4e00\u53f0\u4e0d\u652f\u6301\u4e58\u9664\u6cd5\u6307\u4ee4\u6269\u5c55\u7684\u5904\u7406\u5668\u4e0a\u6267\u884c\u4e58\u9664\u6cd5\u6307\u4ee4\u3002","title":"\u601d\u8003\u9898"},{"location":"lab5/#_2","text":"\u540c\u5b66\u9700\u8981\u63d0\u4ea4\u5b9e\u9a8c\u62a5\u544a\u4ee5\u53ca\u6574\u4e2a\u5de5\u7a0b\u4ee3\u7801\uff0c\u63d0\u4ea4\u65f6\u8bf7\u6ce8\u610f\u5982\u4e0b\u51e0\u70b9\uff1a \u62a5\u544a\u7684pdf\u653e\u5728\u5916\u9762\uff0c\u538b\u7f29\u5305\u53ea\u653e\u4ee3\u7801\u3002 1 2 3 \u63d0\u4ea4\u6587\u4ef6 \u251c\u2500\u2500 report.pdf \u2514\u2500\u2500 code.zip \u63d0\u4ea4\u524d\u8bf7\u4f7f\u7528 make clean \u6e05\u9664\u6240\u6709\u6784\u5efa\u4ea7\u7269\u3002","title":"\u4f5c\u4e1a\u63d0\u4ea4"},{"location":"lab6/","text":"\u5b9e\u9a8c 6\uff1aRV64 \u5185\u6838\u7ebf\u7a0b\u8c03\u5ea6 1 \u5b9e\u9a8c\u76ee\u7684 \u4e86\u89e3\u7ebf\u7a0b\u6982\u5ff5\uff0c\u5e76\u5b66\u4e60\u7ebf\u7a0b\u76f8\u5173\u7ed3\u6784\u4f53\uff0c\u5e76\u5b9e\u73b0\u7ebf\u7a0b\u7684\u521d\u59cb\u5316\u529f\u80fd\u3002 \u4e86\u89e3\u5982\u4f55\u4f7f\u7528\u65f6\u949f\u4e2d\u65ad\u6765\u5b9e\u73b0\u7ebf\u7a0b\u7684\u8c03\u5ea6\u3002 \u4e86\u89e3\u7ebf\u7a0b\u5207\u6362\u539f\u7406\uff0c\u5e76\u5b9e\u73b0\u7ebf\u7a0b\u7684\u5207\u6362\u3002 \u638c\u63e1\u7b80\u5355\u7684\u7ebf\u7a0b\u8c03\u5ea6\u7b97\u6cd5\uff0c\u5e76\u5b8c\u6210\u4e00\u79cd\u7b80\u5355\u8c03\u5ea6\u7b97\u6cd5\u7684\u5b9e\u73b0\u3002 2 \u5b9e\u9a8c\u73af\u5883 Ubuntu 20.04, 22.04 3 \u80cc\u666f\u77e5\u8bc6 3.1 \u8fdb\u7a0b\u4e0e\u7ebf\u7a0b \u6e90\u4ee3\u7801 \u7ecf\u7f16\u8bd1\u5668\u4e00\u7cfb\u5217\u5904\u7406\uff08\u7f16\u8bd1\u3001\u94fe\u63a5\u3001\u4f18\u5316\u7b49\uff09\u540e\u5f97\u5230\u7684\u53ef\u6267\u884c\u6587\u4ef6\uff0c\u6211\u4eec\u79f0\u4e4b\u4e3a \u7a0b\u5e8f\uff08Program\uff09 \u3002\u800c\u901a\u4fd7\u5730\u8bf4\uff0c \u8fdb\u7a0b \u5c31\u662f \u6b63\u5728\u8fd0\u884c\u5e76\u4f7f\u7528\u8ba1\u7b97\u673a\u8d44\u6e90 \u7684\u7a0b\u5e8f\u3002 \u8fdb\u7a0b \u4e0e \u7a0b\u5e8f \u7684\u4e0d\u540c\u4e4b\u5904\u5728\u4e8e\uff0c \u8fdb\u7a0b \u662f\u4e00\u4e2a\u52a8\u6001\u7684\u6982\u5ff5\uff0c\u5176\u4e0d\u4ec5\u9700\u8981\u5c06\u5176\u8fd0\u884c\u7684\u7a0b\u5e8f\u7684\u4ee3\u7801/\u6570\u636e\u7b49\u52a0\u8f7d\u5230\u5185\u5b58\u7a7a\u95f4\u4e2d\uff0c\u8fd8\u9700\u8981\u62e5\u6709\u81ea\u5df1\u7684 \u8fd0\u884c\u6808 \u3002\u540c\u65f6\u4e00\u4e2a \u8fdb\u7a0b \u53ef\u4ee5\u5bf9\u5e94\u4e00\u4e2a\u6216\u591a\u4e2a \u7ebf\u7a0b \uff0c \u7ebf\u7a0b \u4e4b\u95f4\u5f80\u5f80\u5177\u6709\u76f8\u540c\u7684\u4ee3\u7801\uff0c\u5171\u4eab\u4e00\u5757\u5185\u5b58\uff0c\u4f46\u662f\u5374\u6709\u4e0d\u540c\u7684CPU\u6267\u884c\u72b6\u6001\u3002 \u5728\u672c\u6b21\u5b9e\u9a8c\u4e2d\uff0c\u4e3a\u4e86\u7b80\u5355\u8d77\u89c1\uff0c \u6211\u4eec\u91c7\u7528 single-threaded process \u6a21\u578b\uff0c \u5373 \u4e00\u4e2a\u8fdb\u7a0b \u5bf9\u5e94 \u4e00\u4e2a\u7ebf\u7a0b \uff0c\u8fdb\u7a0b\u4e0e\u7ebf\u7a0b\u4e0d\u505a\u660e\u663e\u533a\u5206\u3002 3.1 \u7ebf\u7a0b\u76f8\u5173\u5c5e\u6027 \u5728\u4e0d\u540c\u7684\u64cd\u4f5c\u7cfb\u7edf\u4e2d\uff0c\u4e3a\u6bcf\u4e2a\u7ebf\u7a0b\u6240\u4fdd\u5b58\u7684\u4fe1\u606f\u90fd\u4e0d\u540c\u3002\u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u63d0\u4f9b\u4e00\u79cd\u57fa\u7840\u7684\u5b9e\u73b0\uff0c\u6bcf\u4e2a\u7ebf\u7a0b\u4f1a\u5305\u62ec\uff1a \u7ebf\u7a0bID \uff1a\u7528\u4e8e\u552f\u4e00\u786e\u8ba4\u4e00\u4e2a\u7ebf\u7a0b\u3002 \u8fd0\u884c\u6808 \uff1a\u6bcf\u4e2a\u7ebf\u7a0b\u90fd\u5fc5\u987b\u6709\u4e00\u4e2a\u72ec\u7acb\u7684\u8fd0\u884c\u6808\uff0c\u4fdd\u5b58\u8fd0\u884c\u65f6\u7684\u6570\u636e\u3002 \u6267\u884c\u4e0a\u4e0b\u6587 \uff1a\u5f53\u7ebf\u7a0b\u4e0d\u5728\u6267\u884c\u72b6\u6001\u65f6\uff0c\u6211\u4eec\u9700\u8981\u4fdd\u5b58\u5176\u4e0a\u4e0b\u6587\uff08\u5176\u5b9e\u5c31\u662f \u72b6\u6001\u5bc4\u5b58\u5668 \u7684\u503c\uff09\uff0c\u8fd9\u6837\u4e4b\u540e\u624d\u80fd\u591f\u5c06\u5176\u6062\u590d\uff0c\u7ee7\u7eed\u8fd0\u884c\u3002 \u8fd0\u884c\u65f6\u95f4\u7247 \uff1a\u4e3a\u6bcf\u4e2a\u7ebf\u7a0b\u5206\u914d\u7684\u8fd0\u884c\u65f6\u95f4\u3002 \u4f18\u5148\u7ea7 \uff1a\u5728\u4f18\u5148\u7ea7\u76f8\u5173\u8c03\u5ea6\u65f6\uff0c\u914d\u5408\u8c03\u5ea6\u7b97\u6cd5\uff0c\u6765\u9009\u51fa\u4e0b\u4e00\u4e2a\u6267\u884c\u7684\u7ebf\u7a0b\u3002 3.2 \u7ebf\u7a0b\u5207\u6362\u6d41\u7a0b\u56fe 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 Process 1 Operating System Process 2 + | X P1 executing | X | X v Timer Interrupt Trap X +----------------------> X + X X do_timer() X X + X X schedule() X X + X X save state to PCB1 X X + X X restore state from PCB2 X X + X X | X X v Timer Interrupt Ret X +---------------------> X | X | P2 executing X | X Timer Interrupt Trap v X <---------------------+ X + X do_timer() X + X schedule() X + X save state to PCB2 X + X restore state from PCB1 X + X | Timer Interrupt Ret v <----------------------+ | P1 executing | | v \u5728\u6bcf\u6b21\u5904\u7406\u65f6\u949f\u4e2d\u65ad\u65f6\uff0c\u64cd\u4f5c\u7cfb\u7edf\u9996\u5148\u4f1a\u5c06\u5f53\u524d\u7ebf\u7a0b\u7684\u8fd0\u884c\u5269\u4f59\u65f6\u95f4\u51cf\u5c11\u4e00\u4e2a\u5355\u4f4d\u3002\u4e4b\u540e\u6839\u636e\u8c03\u5ea6\u7b97\u6cd5\u6765\u786e\u5b9a\u662f\u7ee7\u7eed\u8fd0\u884c\u8fd8\u662f\u8c03\u5ea6\u5176\u4ed6\u7ebf\u7a0b\u6765\u6267\u884c\u3002 \u5728\u8fdb\u7a0b\u8c03\u5ea6\u65f6\uff0c\u64cd\u4f5c\u7cfb\u7edf\u4f1a\u904d\u5386\u6240\u6709\u53ef\u8fd0\u884c\u7684\u7ebf\u7a0b\uff0c\u6309\u7167\u4e00\u5b9a\u7684\u8c03\u5ea6\u7b97\u6cd5\u9009\u51fa\u4e0b\u4e00\u4e2a\u6267\u884c\u7684\u7ebf\u7a0b\u3002\u6700\u7ec8\u5c06\u9009\u62e9\u5f97\u5230\u7684\u7ebf\u7a0b\u4e0e\u5f53\u524d\u7ebf\u7a0b\u5207\u6362\u3002 \u5728\u5207\u6362\u7684\u8fc7\u7a0b\u4e2d\uff0c\u9996\u5148\u6211\u4eec\u9700\u8981\u4fdd\u5b58\u5f53\u524d\u7ebf\u7a0b\u7684\u6267\u884c\u4e0a\u4e0b\u6587\uff0c\u518d\u5c06\u5c06\u8981\u6267\u884c\u7ebf\u7a0b\u7684\u4e0a\u4e0b\u6587\u8f7d\u5165\u5230\u76f8\u5173\u5bc4\u5b58\u5668\u4e2d\uff0c\u81f3\u6b64\u6211\u4eec\u5c31\u5b8c\u6210\u4e86\u7ebf\u7a0b\u7684\u8c03\u5ea6\u4e0e\u5207\u6362\u3002 4 \u5b9e\u9a8c\u6b65\u9aa4 4.1 \u51c6\u5907\u5de5\u7a0b \u6b64\u6b21\u5b9e\u9a8c\u57fa\u4e8e lab5 \u540c\u5b66\u6240\u5b9e\u73b0\u7684\u4ee3\u7801\u8fdb\u884c\u3002 \u4ece repo \u540c\u6b65\u4ee5\u4e0b\u4ee3\u7801: rand.h/rand.c , string.h/string.c , mm.h/mm.c \u3002\u5e76\u6309\u7167\u4ee5\u4e0b\u6b65\u9aa4\u5c06\u8fd9\u4e9b\u6587\u4ef6\u6b63\u786e\u653e\u7f6e\u3002\u5176\u4e2d mm.h\\mm.c \u63d0\u4f9b\u4e86\u7b80\u5355\u7684\u7269\u7406\u5185\u5b58\u7ba1\u7406\u63a5\u53e3\uff0c rand.h\\rand.c \u63d0\u4f9b\u4e86 rand() \u63a5\u53e3\u7528\u4ee5\u63d0\u4f9b\u4f2a\u968f\u673a\u6570\u5e8f\u5217\uff0c string.h/string.c \u63d0\u4f9b\u4e86 memset \u63a5\u53e3\u7528\u4ee5\u521d\u59cb\u5316\u4e00\u6bb5\u5185\u5b58\u7a7a\u95f4\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 . \u251c\u2500\u2500 arch \u2502 \u2514\u2500\u2500 riscv \u2502 \u251c\u2500\u2500 include \u2502 \u2502 \u2514\u2500\u2500 mm.h \u2502 \u2514\u2500\u2500 kernel \u2502 \u2514\u2500\u2500 mm.c \u251c\u2500\u2500 include \u2502 \u251c\u2500\u2500 rand.h \u2502 \u2514\u2500\u2500 string.h \u2514\u2500\u2500 lib \u251c\u2500\u2500 rand.c \u2514\u2500\u2500 string.c \u5728 lab6 \u4e2d\u6211\u4eec\u9700\u8981\u4e00\u4e9b\u7269\u7406\u5185\u5b58\u7ba1\u7406\u7684\u63a5\u53e3\uff0c\u5728\u6b64\u6211\u4eec\u63d0\u4f9b\u4e86 kalloc \u63a5\u53e3 ( \u89c1 mm.c ) \u3002\u540c\u5b66\u53ef\u4ee5\u7528 kalloc \u6765\u7533\u8bf7 4KB \u7684\u7269\u7406\u9875\u3002\u7531\u4e8e\u5f15\u5165\u4e86\u7b80\u5355\u7684\u7269\u7406\u5185\u5b58\u7ba1\u7406\uff0c\u9700\u8981\u5728 _start \u7684\u9002\u5f53\u4f4d\u7f6e\u8c03\u7528 mm_init , \u6765\u521d\u59cb\u5316\u5185\u5b58\u7ba1\u7406\u7cfb\u7edf\uff0c\u5e76\u4e14\u5728\u521d\u59cb\u5316\u65f6\u9700\u8981\u7528\u4e00\u4e9b\u81ea\u5b9a\u4e49\u7684\u5b8f\uff0c\u9700\u8981\u4fee\u6539 defs.h , \u5728 defs.h \u6dfb\u52a0 \u5982\u4e0b\u5185\u5bb9\uff1a 1 2 3 4 5 6 7 #define PHY_START 0x0000000080000000 #define PHY_SIZE 128 * 1024 * 1024 // 128MB\uff0c QEMU \u9ed8\u8ba4\u5185\u5b58\u5927\u5c0f #define PHY_END (PHY_START + PHY_SIZE) #define PGSIZE 0x1000 // 4KB #define PGROUNDUP(addr) ((addr + PGSIZE - 1) & (~(PGSIZE - 1))) #define PGROUNDDOWN(addr) (addr & (~(PGSIZE - 1))) \u8bf7\u5728\u6dfb\u52a0/\u4fee\u6539\u4e0a\u8ff0\u6587\u4ef6\u4ee3\u7801\u4e4b\u540e\uff0c\u786e\u4fdd\u5de5\u7a0b\u53ef\u4ee5\u6b63\u5e38\u8fd0\u884c\uff0c\u4e4b\u540e\u518d\u5f00\u59cb\u5b9e\u73b0 lab6 (\u6709\u53ef\u80fd\u9700\u8981\u540c\u5b66\u81ea\u5df1\u8c03\u6574\u4e00\u4e9b\u5934\u6587\u4ef6\u7684\u5f15\u5165)\u3002 \u5728 lab6 \u4e2d\u9700\u8981\u540c\u5b66\u9700\u8981\u6dfb\u52a0\u5e76\u4fee\u6539 arch/riscv/include/proc.h arch/riscv/kernel/proc.c \u4e24\u4e2a\u6587\u4ef6\u3002 \u672c\u6b21\u5b9e\u9a8c\u9700\u8981\u5b9e\u73b0\u4e00\u79cd\u8c03\u5ea6\u7b97\u6cd5\uff0c \u5982\u4f55\u63a7\u5236\u4ee3\u7801\u903b\u8f91\u89c1 4.4 4.2 proc.h \u6570\u636e\u7ed3\u6784\u5b9a\u4e49 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 // arch/riscv/include/proc.h #include \"types.h\" #define NR_TASKS (1 + 3) // \u7528\u4e8e\u63a7\u5236 \u6700\u5927\u7ebf\u7a0b\u6570\u91cf \uff08idle \u7ebf\u7a0b + 3 \u5185\u6838\u7ebf\u7a0b\uff09 #define TASK_RUNNING 0 // \u4e3a\u4e86\u7b80\u5316\u5b9e\u9a8c\uff0c\u6240\u6709\u7684\u7ebf\u7a0b\u90fd\u53ea\u6709\u4e00\u79cd\u72b6\u6001 #define PRIORITY_MIN 1 #define PRIORITY_MAX 5 /* \u7528\u4e8e\u8bb0\u5f55 `\u7ebf\u7a0b` \u7684 `\u5185\u6838\u6808\u4e0e\u7528\u6237\u6808\u6307\u9488` */ /* (lab6\u4e2d\u65e0\u9700\u8003\u8651\uff0c\u5728\u8fd9\u91cc\u5f15\u5165\u662f\u4e3a\u4e86\u4e4b\u540e\u5b9e\u9a8c\u7684\u4f7f\u7528) */ struct thread_info { uint64 kernel_sp ; uint64 user_sp ; }; /* \u7ebf\u7a0b\u72b6\u6001\u6bb5\u6570\u636e\u7ed3\u6784 */ struct thread_struct { uint64 ra ; uint64 sp ; uint64 s [ 12 ]; }; /* \u7ebf\u7a0b\u6570\u636e\u7ed3\u6784 */ struct task_struct { struct thread_info * thread_info ; uint64 state ; // \u7ebf\u7a0b\u72b6\u6001 uint64 counter ; // \u8fd0\u884c\u5269\u4f59\u65f6\u95f4 uint64 priority ; // \u8fd0\u884c\u4f18\u5148\u7ea7 uint64 pid ; // \u7ebf\u7a0bid struct thread_struct thread ; }; /* \u7ebf\u7a0b\u521d\u59cb\u5316 \u521b\u5efa NR_TASKS \u4e2a\u7ebf\u7a0b */ void task_init (); /* \u5728\u65f6\u949f\u4e2d\u65ad\u5904\u7406\u4e2d\u88ab\u8c03\u7528 \u7528\u4e8e\u5224\u65ad\u662f\u5426\u9700\u8981\u8fdb\u884c\u8c03\u5ea6 */ void do_timer (); /* \u8c03\u5ea6\u7a0b\u5e8f \u9009\u62e9\u51fa\u4e0b\u4e00\u4e2a\u8fd0\u884c\u7684\u7ebf\u7a0b */ void schedule (); /* \u7ebf\u7a0b\u5207\u6362\u5165\u53e3\u51fd\u6570*/ void switch_to ( struct task_struct * next ); /* dummy funciton: \u4e00\u4e2a\u5faa\u73af\u7a0b\u5e8f\uff0c\u5faa\u73af\u8f93\u51fa\u81ea\u5df1\u7684 pid \u4ee5\u53ca\u4e00\u4e2a\u81ea\u589e\u7684\u5c40\u90e8\u53d8\u91cf*/ void dummy (); 4.3 \u7ebf\u7a0b\u8c03\u5ea6\u529f\u80fd\u5b9e\u73b0 4.3.1 \u7ebf\u7a0b\u521d\u59cb\u5316 \u5728\u521d\u59cb\u5316\u7ebf\u7a0b\u7684\u65f6\u5019\uff0c\u6211\u4eec\u53c2\u8003 Linux v0.11\u4e2d\u7684\u5b9e\u73b0 \u4e3a\u6bcf\u4e2a\u7ebf\u7a0b\u5206\u914d\u4e00\u4e2a 4KB \u7684\u7269\u7406\u9875\uff0c\u6211\u4eec\u5c06 task_struct \u5b58\u653e\u5728\u8be5\u9875\u7684\u4f4e\u5730\u5740\u90e8\u5206\uff0c \u5c06\u7ebf\u7a0b\u7684\u6808\u6307\u9488 sp \u6307\u5411\u8be5\u9875\u7684\u9ad8\u5730\u5740\u3002\u5177\u4f53\u5185\u5b58\u5e03\u5c40\u5982\u4e0b\u56fe\u6240\u793a\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\u25c4\u2500\u2500\u2500 High Address \u2502 \u2502 \u2502 stack \u2502 \u2502 \u2502 \u2502 \u2502 sp \u2500\u2500\u25ba\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502 \u2502 \u2502 \u2502 \u25bc \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 4KB Page \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502 \u2502 \u2502 \u2502 \u2502 task_struct \u2502 \u2502 \u2502 \u2502 \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\u25c4\u2500\u2500\u2500 Low Address \u5f53\u6211\u4eec\u7684 OS run \u8d77\u6765\u65f6\u5019\uff0c\u5176\u672c\u8eab\u5c31\u662f\u4e00\u4e2a\u7ebf\u7a0b idle \u7ebf\u7a0b \uff0c\u4f46\u662f\u6211\u4eec\u5e76\u6ca1\u6709\u4e3a\u5b83\u8bbe\u8ba1\u597d task_struct \u3002\u6240\u4ee5\u7b2c\u4e00\u6b65\u6211\u4eec\u8981\u4e3a idle \u8bbe\u7f6e task_struct \u3002\u5e76\u5c06 current , task[0] \u90fd\u6307\u5411 idle \u3002 \u4e3a\u4e86\u65b9\u4fbf\u8d77\u89c1\uff0c\u6211\u4eec\u5c06 task[1] ~ task[NR_TASKS - 1] , \u5168\u90e8\u521d\u59cb\u5316\uff0c \u8fd9\u91cc\u548c idle \u8bbe\u7f6e\u7684\u533a\u522b\u5728\u4e8e\u8981\u4e3a\u8fd9\u4e9b\u7ebf\u7a0b\u8bbe\u7f6e thread_struct \u4e2d\u7684 ra \u548c sp . \u5728 _start \u9002\u5f53\u7684\u4f4d\u7f6e\u8c03\u7528 task_init 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 //arch/riscv/kernel/proc.c extern void __dummy (); struct task_struct * idle ; // idle process struct task_struct * current ; // \u6307\u5411\u5f53\u524d\u8fd0\u884c\u7ebf\u7a0b\u7684 `task_struct` struct task_struct * task [ NR_TASKS ]; // \u7ebf\u7a0b\u6570\u7ec4\uff0c\u6240\u6709\u7684\u7ebf\u7a0b\u90fd\u4fdd\u5b58\u5728\u6b64 void task_init () { // 1. \u8c03\u7528 kalloc() \u4e3a idle \u5206\u914d\u4e00\u4e2a\u7269\u7406\u9875 // 2. \u8bbe\u7f6e state \u4e3a TASK_RUNNING; // 3. \u7531\u4e8e idle \u4e0d\u53c2\u4e0e\u8c03\u5ea6 \u53ef\u4ee5\u5c06\u5176 counter / priority \u8bbe\u7f6e\u4e3a 0 // 4. \u8bbe\u7f6e idle \u7684 pid \u4e3a 0 // 5. \u5c06 current \u548c task[0] \u6307\u5411 idle /* YOUR CODE HERE */ // 1. \u53c2\u8003 idle \u7684\u8bbe\u7f6e, \u4e3a task[1] ~ task[NR_TASKS - 1] \u8fdb\u884c\u521d\u59cb\u5316 // 2. \u5176\u4e2d\u6bcf\u4e2a\u7ebf\u7a0b\u7684 state \u4e3a TASK_RUNNING, counter \u4e3a 0, priority \u4f7f\u7528 rand() \u6765\u8bbe\u7f6e, pid \u4e3a\u8be5\u7ebf\u7a0b\u5728\u7ebf\u7a0b\u6570\u7ec4\u4e2d\u7684\u4e0b\u6807\u3002 // 3. \u4e3a task[1] ~ task[NR_TASKS - 1] \u8bbe\u7f6e `thread_struct` \u4e2d\u7684 `ra` \u548c `sp`, // 4. \u5176\u4e2d `ra` \u8bbe\u7f6e\u4e3a __dummy \uff08\u89c1 4.3.2\uff09\u7684\u5730\u5740\uff0c `sp` \u8bbe\u7f6e\u4e3a \u8be5\u7ebf\u7a0b\u7533\u8bf7\u7684\u7269\u7406\u9875\u7684\u9ad8\u5730\u5740 /* YOUR CODE HERE */ printk ( \"...proc_init done! \\n \" ); } 4.3.2 __dummy \u4e0e dummy \u4ecb\u7ecd task[1] ~ task[NR_TASKS - 1] \u90fd\u8fd0\u884c\u540c\u4e00\u6bb5\u4ee3\u7801 dummy() \u6211\u4eec\u5728 proc.c \u6dfb\u52a0 dummy() : 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 // arch/riscv/kernel/proc.c void dummy () { uint64 MOD = 1000000007 ; uint64 auto_inc_local_var = 0 ; int last_counter = -1 ; // \u8bb0\u5f55\u4e0a\u4e00\u4e2acounter int last_last_counter = -1 ; // \u8bb0\u5f55\u4e0a\u4e0a\u4e2acounter while ( 1 ) { if ( last_counter == -1 || current -> counter != last_counter ) { last_last_counter = last_counter ; last_counter = current -> counter ; auto_inc_local_var = ( auto_inc_local_var + 1 ) % MOD ; printk ( \"[PID = %d] is running. auto_inc_local_var = %d \\n \" , current -> pid , auto_inc_local_var ); } else if (( last_last_counter == 0 || last_last_counter == -1 ) && last_counter == 1 ) { // counter\u6052\u4e3a1\u7684\u60c5\u51b5 // \u8fd9\u91cc\u6bd4\u8f83 tricky\uff0c\u4e0d\u8981\u6c42\u7406\u89e3\u3002 last_counter = 0 ; current -> counter = 0 ; } } Debug \u63d0\u793a\uff1a \u53ef\u4ee5\u4fee\u6539 printk \u6253\u5370\u66f4\u591a\u7684\u4fe1\u606f \u5f53\u7ebf\u7a0b\u5728\u8fd0\u884c\u65f6\uff0c\u7531\u4e8e\u65f6\u949f\u4e2d\u65ad\u7684\u89e6\u53d1\uff0c\u4f1a\u5c06\u5f53\u524d\u8fd0\u884c\u7ebf\u7a0b\u7684\u4e0a\u4e0b\u6587\u73af\u5883\u4fdd\u5b58\u5728\u6808\u4e0a ( lab5 \u4e2d\u5b9e\u73b0\u7684 _traps )\u3002 \u5f53\u7ebf\u7a0b\u518d\u6b21\u88ab\u8c03\u5ea6\u65f6\uff0c\u4f1a\u5c06\u4e0a\u4e0b\u6587\u4ece\u6808\u4e0a\u6062\u590d\uff0c\u4f46\u662f\u5f53\u6211\u4eec\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u7ebf\u7a0b\uff0c\u6b64\u65f6\u7ebf\u7a0b\u7684\u6808\u4e3a\u7a7a\uff0c\u5f53\u8fd9\u4e2a\u7ebf\u7a0b\u88ab\u8c03\u5ea6\u65f6\uff0c\u662f\u6ca1\u6709\u4e0a\u4e0b\u6587\u9700\u8981\u88ab\u6062\u590d\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u4e3a\u7ebf\u7a0b \u7b2c\u4e00\u6b21\u8c03\u5ea6 \u63d0\u4f9b\u4e00\u4e2a\u7279\u6b8a\u7684\u8fd4\u56de\u51fd\u6570 __dummy \u5728 entry.S \u6dfb\u52a0 __dummy \u5728 __dummy \u4e2d\u5c06 sepc \u8bbe\u7f6e\u4e3a dummy() \u7684\u5730\u5740, \u5e76\u4f7f\u7528 sret \u4ece\u4e2d\u65ad\u4e2d\u8fd4\u56de\u3002 __dummy \u4e0e _traps \u7684 restore \u90e8\u5206\u76f8\u6bd4\uff0c \u5176\u5b9e\u5c31\u662f\u7701\u7565\u4e86\u4ece\u6808\u4e0a\u6062\u590d\u4e0a\u4e0b\u6587\u7684\u8fc7\u7a0b \uff08 \u4f46\u662f\u624b\u52a8\u8bbe\u7f6e\u4e86 sepc \uff09\u3002 1 2 3 4 5 # arch/riscv/kernel/entry.S .global __dummy __dummy: # YOUR CODE HERE 4.3.3 \u5b9e\u73b0\u7ebf\u7a0b\u5207\u6362 \u5224\u65ad\u4e0b\u4e00\u4e2a\u6267\u884c\u7684\u7ebf\u7a0b next \u4e0e\u5f53\u524d\u7684\u7ebf\u7a0b current \u662f\u5426\u4e3a\u540c\u4e00\u4e2a\u7ebf\u7a0b\uff0c\u5982\u679c\u662f\u540c\u4e00\u4e2a\u7ebf\u7a0b\uff0c\u5219\u65e0\u9700\u505a\u4efb\u4f55\u5904\u7406\uff0c\u5426\u5219\u8c03\u7528 __switch_to \u8fdb\u884c\u7ebf\u7a0b\u5207\u6362\u3002 1 2 3 4 5 6 7 // arch/riscv/kernel/proc.c extern void __switch_to ( struct task_struct * prev , struct task_struct * next ); void switch_to ( struct task_struct * next ) { /* YOUR CODE HERE */ } \u5728 entry.S \u4e2d\u5b9e\u73b0\u7ebf\u7a0b\u4e0a\u4e0b\u6587\u5207\u6362 __switch_to : __switch_to \u63a5\u53d7\u4e24\u4e2a task_struct \u6307\u9488\u4f5c\u4e3a\u53c2\u6570 \u4fdd\u5b58\u5f53\u524d\u7ebf\u7a0b\u7684 ra , sp , s0~s11 \u5230\u5f53\u524d\u7ebf\u7a0b\u7684 thread_struct \u4e2d \u5c06\u4e0b\u4e00\u4e2a\u7ebf\u7a0b\u7684 thread_struct \u4e2d\u7684\u76f8\u5173\u6570\u636e\u8f7d\u5165\u5230 ra , sp , s0~s11 \u4e2d\u3002 1 2 3 4 5 6 7 8 9 10 11 # arch/riscv/kernel/entry.S .globl __switch_to __switch_to: # save state to prev process # YOUR CODE HERE # restore state from next process # YOUR CODE HERE ret Debug \u63d0\u793a\uff1a \u53ef\u4ee5\u5c1d\u8bd5\u662f\u5426\u53ef\u4ee5\u4ece idle \u6b63\u786e\u5207\u6362\u5230 process 1 4.3.4 \u5b9e\u73b0\u8c03\u5ea6\u5165\u53e3\u51fd\u6570 \u5b9e\u73b0 do_timer() , \u5e76\u5728 \u65f6\u949f\u4e2d\u65ad\u5904\u7406\u51fd\u6570 \u4e2d\u8c03\u7528\u3002 1 2 3 4 5 6 7 8 // arch/riscv/kernel/proc.c void do_timer ( void ) { /* 1. \u5c06\u5f53\u524d\u8fdb\u7a0b\u7684counter--\uff0c\u5982\u679c\u7ed3\u679c\u5927\u4e8e\u96f6\u5219\u76f4\u63a5\u8fd4\u56de*/ /* 2. \u5426\u5219\u8fdb\u884c\u8fdb\u7a0b\u8c03\u5ea6 */ /* YOUR CODE HERE */ } 4.3.5 \u5b9e\u73b0\u7ebf\u7a0b\u8c03\u5ea6 \u672c\u6b21\u5b9e\u9a8c\u6211\u4eec\u9700\u8981\u5b9e\u73b0\u8fdb\u7a0b\u8c03\u5ea6\u7b97\u6cd5(\u8981\u6c42\u6700\u7ec8\u6267\u884c\u7ed3\u679c\u548c4.4\u7ed9\u51fa\u7684\u7ed3\u679c\u4e00\u81f4)\uff0c\u53ef\u53c2\u8003 Linux v0.11 \u8c03\u5ea6\u7b97\u6cd5\u5b9e\u73b0 \u3002 1 2 3 4 5 // arch/riscv/kernel/proc.c void schedule ( void ) { /* YOUR CODE HERE */ } 4.4 \u7f16\u8bd1\u53ca\u6d4b\u8bd5 \u7531\u4e8e\u52a0\u5165\u4e86\u4e00\u4e9b\u65b0\u7684 .c \u6587\u4ef6\uff0c\u53ef\u80fd\u9700\u8981\u4fee\u6539\u4e00\u4e9bMakefile\u6587\u4ef6\uff0c\u8bf7\u540c\u5b66\u81ea\u5df1\u5c1d\u8bd5\u4fee\u6539\uff0c\u4f7f\u9879\u76ee\u53ef\u4ee5\u7f16\u8bd1\u5e76\u8fd0\u884c\u3002 \u5173\u4e8e\u8fdb\u7a0b\u5207\u6362\u548c\u8fdb\u7a0b\u8bbe\u7f6e\u7684\u8f93\u51fa\u5e76\u4e3a\u5728\u6846\u67b6\u4ee3\u7801\u4e2d\u7ed9\u51fa\uff0c\u9700\u8981\u81ea\u4e3b\u6dfb\u52a0\u5230\u76f8\u5bf9\u5e94\u7684\u4f4d\u7f6e\uff1b\u5e76\u53bb\u6389lab5\u4e2d\u5173\u4e8e\u65f6\u949f\u4e2d\u65ad\u7684\u76f8\u5173\u8f93\u51fa\u3002\u6700\u7ec8\u7ed3\u679c\u5e94\u548c\u4e0b\u65b9\u4e00\u81f4\u3002 \u7ebf\u7a0b\u8c03\u5ea6\u8f93\u51fa\u793a\u4f8b\u5982\u4e0b\u6240\u793a\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 OpenSBI v1.1-80-g22f38ee ____ _____ ____ _____ / __ \\ / ____ | _ \\_ _ | | | | | _ __ ___ _ __ | ( ___ | | _ ) || | | | | | '_ \\ / _ \\ ' _ \\ \\_ __ \\| _ < | | | | __ | | | _ ) | __/ | | | ____ ) | | _ ) || | _ \\_ ___/ | .__/ \\_ __ | _ | | _ | _____/ | ____/_____ | | | | _ | Platform Name : riscv-virtio,qemu Platform Features : medeleg Platform HART Count : 1 Platform IPI Device : aclint-mswi Platform Timer Device : aclint-mtimer @ 10000000Hz Platform Console Device : uart8250 Platform HSM Device : --- Platform PMU Device : --- Platform Reboot Device : sifive_test Platform Shutdown Device : sifive_test Firmware Base : 0x80000000 Firmware Size : 196 KB Runtime SBI Version : 1 .0 Domain0 Name : root Domain0 Boot HART : 0 Domain0 HARTs : 0 * Domain0 Region00 : 0x0000000002000000-0x000000000200ffff ( I ) Domain0 Region01 : 0x0000000080000000-0x000000008003ffff () Domain0 Region02 : 0x0000000000000000-0xffffffffffffffff ( R,W,X ) Domain0 Next Address : 0x0000000080200000 Domain0 Next Arg1 : 0x0000000082200000 Domain0 Next Mode : S-mode Domain0 SysReset : yes Boot HART ID : 0 Boot HART Domain : root Boot HART Priv Version : v1.10 Boot HART Base ISA : rv64imafdc Boot HART ISA Extensions : none Boot HART PMP Count : 16 Boot HART PMP Granularity : 4 Boot HART PMP Address Bits: 54 Boot HART MHPM Count : 0 Boot HART MIDELEG : 0x0000000000000222 Boot HART MEDELEG : 0x000000000000b109 ...mm_init done ! ...proc_init done ! 2022 ZJU Computer System II SET [ PID = 1 , PRIORITY = 1 , COUNTER = 1 ] SET [ PID = 2 , PRIORITY = 4 , COUNTER = 4 ] SET [ PID = 3 , PRIORITY = 5 , COUNTER = 5 ] switch to [ PID = 1 , PRIORITY = 1 , COUNTER = 1 ] [ PID = 1 ] is running. auto_inc_local_var = 1 switch to [ PID = 2 , PRIORITY = 4 , COUNTER = 4 ] [ PID = 2 ] is running. auto_inc_local_var = 1 [ PID = 2 ] is running. auto_inc_local_var = 2 [ PID = 2 ] is running. auto_inc_local_var = 3 [ PID = 2 ] is running. auto_inc_local_var = 4 switch to [ PID = 3 , PRIORITY = 5 , COUNTER = 5 ] [ PID = 3 ] is running. auto_inc_local_var = 1 [ PID = 3 ] is running. auto_inc_local_var = 2 [ PID = 3 ] is running. auto_inc_local_var = 3 [ PID = 3 ] is running. auto_inc_local_var = 4 [ PID = 3 ] is running. auto_inc_local_var = 5 SET [ PID = 1 , PRIORITY = 1 , COUNTER = 1 ] SET [ PID = 2 , PRIORITY = 4 , COUNTER = 4 ] SET [ PID = 3 , PRIORITY = 5 , COUNTER = 5 ] switch to [ PID = 1 , PRIORITY = 1 , COUNTER = 1 ] [ PID = 1 ] is running. auto_inc_local_var = 2 switch to [ PID = 2 , PRIORITY = 4 , COUNTER = 4 ] [ PID = 2 ] is running. auto_inc_local_var = 5 [ PID = 2 ] is running. auto_inc_local_var = 6 [ PID = 2 ] is running. auto_inc_local_var = 7 [ PID = 2 ] is running. auto_inc_local_var = 8 switch to [ PID = 3 , PRIORITY = 5 , COUNTER = 5 ] [ PID = 3 ] is running. auto_inc_local_var = 6 [ PID = 3 ] is running. auto_inc_local_var = 7 [ PID = 3 ] is running. auto_inc_local_var = 8 [ PID = 3 ] is running. auto_inc_local_var = 9 [ PID = 3 ] is running. auto_inc_local_var = 10 SET [ PID = 1 , PRIORITY = 1 , COUNTER = 1 ] SET [ PID = 2 , PRIORITY = 4 , COUNTER = 4 ] SET [ PID = 3 , PRIORITY = 5 , COUNTER = 5 ] switch to [ PID = 1 , PRIORITY = 1 , COUNTER = 1 ] [ PID = 1 ] is running. auto_inc_local_var = 3 \u601d\u8003\u9898 \u5728 RV64 \u4e2d\u4e00\u5171\u7528 32 \u4e2a\u901a\u7528\u5bc4\u5b58\u5668\uff0c \u4e3a\u4ec0\u4e48 context_switch \u4e2d\u53ea\u4fdd\u5b58\u4e8614\u4e2a\uff1f \u5f53\u7ebf\u7a0b\u7b2c\u4e00\u6b21\u8c03\u7528\u65f6\uff0c \u5176 ra \u6240\u4ee3\u8868\u7684\u8fd4\u56de\u70b9\u662f __dummy \u3002 \u90a3\u4e48\u5728\u4e4b\u540e\u7684\u7ebf\u7a0b\u8c03\u7528\u4e2d context_switch \u4e2d\uff0c ra \u4fdd\u5b58/\u6062\u590d\u7684\u51fd\u6570\u8fd4\u56de\u70b9\u662f\u4ec0\u4e48\u5462 \uff1f \u8bf7\u540c\u5b66\u7528gdb\u5c1d\u8bd5\u8ffd\u8e2a\u4e00\u6b21\u5b8c\u6574\u7684\u7ebf\u7a0b\u5207\u6362\u6d41\u7a0b\uff0c \u5e76\u5173\u6ce8\u6bcf\u4e00\u6b21 ra \u7684\u53d8\u6362\u3002 \u4f5c\u4e1a\u63d0\u4ea4 \u540c\u5b66\u9700\u8981\u63d0\u4ea4\u5b9e\u9a8c\u62a5\u544a\u4ee5\u53ca\u6574\u4e2a\u5de5\u7a0b\u4ee3\u7801\uff0c\u63d0\u4ea4\u65f6\u8bf7\u6ce8\u610f\u5982\u4e0b\u51e0\u70b9\uff1a \u62a5\u544a\u7684pdf\u653e\u5728\u5916\u9762\uff0c\u538b\u7f29\u5305\u53ea\u653e\u4ee3\u7801\u3002 1 2 3 \u63d0\u4ea4\u6587\u4ef6 \u251c\u2500\u2500 report.pdf \u2514\u2500\u2500 code.zip \u63d0\u4ea4\u524d\u8bf7\u4f7f\u7528 make clean \u6e05\u9664\u6240\u6709\u6784\u5efa\u4ea7\u7269\u3002","title":"\u5b9e\u9a8c\u6307\u5bfc\u516d"},{"location":"lab6/#6rv64","text":"","title":"\u5b9e\u9a8c 6\uff1aRV64 \u5185\u6838\u7ebf\u7a0b\u8c03\u5ea6"},{"location":"lab6/#1","text":"\u4e86\u89e3\u7ebf\u7a0b\u6982\u5ff5\uff0c\u5e76\u5b66\u4e60\u7ebf\u7a0b\u76f8\u5173\u7ed3\u6784\u4f53\uff0c\u5e76\u5b9e\u73b0\u7ebf\u7a0b\u7684\u521d\u59cb\u5316\u529f\u80fd\u3002 \u4e86\u89e3\u5982\u4f55\u4f7f\u7528\u65f6\u949f\u4e2d\u65ad\u6765\u5b9e\u73b0\u7ebf\u7a0b\u7684\u8c03\u5ea6\u3002 \u4e86\u89e3\u7ebf\u7a0b\u5207\u6362\u539f\u7406\uff0c\u5e76\u5b9e\u73b0\u7ebf\u7a0b\u7684\u5207\u6362\u3002 \u638c\u63e1\u7b80\u5355\u7684\u7ebf\u7a0b\u8c03\u5ea6\u7b97\u6cd5\uff0c\u5e76\u5b8c\u6210\u4e00\u79cd\u7b80\u5355\u8c03\u5ea6\u7b97\u6cd5\u7684\u5b9e\u73b0\u3002","title":"1 \u5b9e\u9a8c\u76ee\u7684"},{"location":"lab6/#2","text":"Ubuntu 20.04, 22.04","title":"2 \u5b9e\u9a8c\u73af\u5883"},{"location":"lab6/#3","text":"","title":"3 \u80cc\u666f\u77e5\u8bc6"},{"location":"lab6/#31","text":"\u6e90\u4ee3\u7801 \u7ecf\u7f16\u8bd1\u5668\u4e00\u7cfb\u5217\u5904\u7406\uff08\u7f16\u8bd1\u3001\u94fe\u63a5\u3001\u4f18\u5316\u7b49\uff09\u540e\u5f97\u5230\u7684\u53ef\u6267\u884c\u6587\u4ef6\uff0c\u6211\u4eec\u79f0\u4e4b\u4e3a \u7a0b\u5e8f\uff08Program\uff09 \u3002\u800c\u901a\u4fd7\u5730\u8bf4\uff0c \u8fdb\u7a0b \u5c31\u662f \u6b63\u5728\u8fd0\u884c\u5e76\u4f7f\u7528\u8ba1\u7b97\u673a\u8d44\u6e90 \u7684\u7a0b\u5e8f\u3002 \u8fdb\u7a0b \u4e0e \u7a0b\u5e8f \u7684\u4e0d\u540c\u4e4b\u5904\u5728\u4e8e\uff0c \u8fdb\u7a0b \u662f\u4e00\u4e2a\u52a8\u6001\u7684\u6982\u5ff5\uff0c\u5176\u4e0d\u4ec5\u9700\u8981\u5c06\u5176\u8fd0\u884c\u7684\u7a0b\u5e8f\u7684\u4ee3\u7801/\u6570\u636e\u7b49\u52a0\u8f7d\u5230\u5185\u5b58\u7a7a\u95f4\u4e2d\uff0c\u8fd8\u9700\u8981\u62e5\u6709\u81ea\u5df1\u7684 \u8fd0\u884c\u6808 \u3002\u540c\u65f6\u4e00\u4e2a \u8fdb\u7a0b \u53ef\u4ee5\u5bf9\u5e94\u4e00\u4e2a\u6216\u591a\u4e2a \u7ebf\u7a0b \uff0c \u7ebf\u7a0b \u4e4b\u95f4\u5f80\u5f80\u5177\u6709\u76f8\u540c\u7684\u4ee3\u7801\uff0c\u5171\u4eab\u4e00\u5757\u5185\u5b58\uff0c\u4f46\u662f\u5374\u6709\u4e0d\u540c\u7684CPU\u6267\u884c\u72b6\u6001\u3002 \u5728\u672c\u6b21\u5b9e\u9a8c\u4e2d\uff0c\u4e3a\u4e86\u7b80\u5355\u8d77\u89c1\uff0c \u6211\u4eec\u91c7\u7528 single-threaded process \u6a21\u578b\uff0c \u5373 \u4e00\u4e2a\u8fdb\u7a0b \u5bf9\u5e94 \u4e00\u4e2a\u7ebf\u7a0b \uff0c\u8fdb\u7a0b\u4e0e\u7ebf\u7a0b\u4e0d\u505a\u660e\u663e\u533a\u5206\u3002","title":"3.1 \u8fdb\u7a0b\u4e0e\u7ebf\u7a0b"},{"location":"lab6/#31_1","text":"\u5728\u4e0d\u540c\u7684\u64cd\u4f5c\u7cfb\u7edf\u4e2d\uff0c\u4e3a\u6bcf\u4e2a\u7ebf\u7a0b\u6240\u4fdd\u5b58\u7684\u4fe1\u606f\u90fd\u4e0d\u540c\u3002\u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u63d0\u4f9b\u4e00\u79cd\u57fa\u7840\u7684\u5b9e\u73b0\uff0c\u6bcf\u4e2a\u7ebf\u7a0b\u4f1a\u5305\u62ec\uff1a \u7ebf\u7a0bID \uff1a\u7528\u4e8e\u552f\u4e00\u786e\u8ba4\u4e00\u4e2a\u7ebf\u7a0b\u3002 \u8fd0\u884c\u6808 \uff1a\u6bcf\u4e2a\u7ebf\u7a0b\u90fd\u5fc5\u987b\u6709\u4e00\u4e2a\u72ec\u7acb\u7684\u8fd0\u884c\u6808\uff0c\u4fdd\u5b58\u8fd0\u884c\u65f6\u7684\u6570\u636e\u3002 \u6267\u884c\u4e0a\u4e0b\u6587 \uff1a\u5f53\u7ebf\u7a0b\u4e0d\u5728\u6267\u884c\u72b6\u6001\u65f6\uff0c\u6211\u4eec\u9700\u8981\u4fdd\u5b58\u5176\u4e0a\u4e0b\u6587\uff08\u5176\u5b9e\u5c31\u662f \u72b6\u6001\u5bc4\u5b58\u5668 \u7684\u503c\uff09\uff0c\u8fd9\u6837\u4e4b\u540e\u624d\u80fd\u591f\u5c06\u5176\u6062\u590d\uff0c\u7ee7\u7eed\u8fd0\u884c\u3002 \u8fd0\u884c\u65f6\u95f4\u7247 \uff1a\u4e3a\u6bcf\u4e2a\u7ebf\u7a0b\u5206\u914d\u7684\u8fd0\u884c\u65f6\u95f4\u3002 \u4f18\u5148\u7ea7 \uff1a\u5728\u4f18\u5148\u7ea7\u76f8\u5173\u8c03\u5ea6\u65f6\uff0c\u914d\u5408\u8c03\u5ea6\u7b97\u6cd5\uff0c\u6765\u9009\u51fa\u4e0b\u4e00\u4e2a\u6267\u884c\u7684\u7ebf\u7a0b\u3002","title":"3.1 \u7ebf\u7a0b\u76f8\u5173\u5c5e\u6027"},{"location":"lab6/#32","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 Process 1 Operating System Process 2 + | X P1 executing | X | X v Timer Interrupt Trap X +----------------------> X + X X do_timer() X X + X X schedule() X X + X X save state to PCB1 X X + X X restore state from PCB2 X X + X X | X X v Timer Interrupt Ret X +---------------------> X | X | P2 executing X | X Timer Interrupt Trap v X <---------------------+ X + X do_timer() X + X schedule() X + X save state to PCB2 X + X restore state from PCB1 X + X | Timer Interrupt Ret v <----------------------+ | P1 executing | | v \u5728\u6bcf\u6b21\u5904\u7406\u65f6\u949f\u4e2d\u65ad\u65f6\uff0c\u64cd\u4f5c\u7cfb\u7edf\u9996\u5148\u4f1a\u5c06\u5f53\u524d\u7ebf\u7a0b\u7684\u8fd0\u884c\u5269\u4f59\u65f6\u95f4\u51cf\u5c11\u4e00\u4e2a\u5355\u4f4d\u3002\u4e4b\u540e\u6839\u636e\u8c03\u5ea6\u7b97\u6cd5\u6765\u786e\u5b9a\u662f\u7ee7\u7eed\u8fd0\u884c\u8fd8\u662f\u8c03\u5ea6\u5176\u4ed6\u7ebf\u7a0b\u6765\u6267\u884c\u3002 \u5728\u8fdb\u7a0b\u8c03\u5ea6\u65f6\uff0c\u64cd\u4f5c\u7cfb\u7edf\u4f1a\u904d\u5386\u6240\u6709\u53ef\u8fd0\u884c\u7684\u7ebf\u7a0b\uff0c\u6309\u7167\u4e00\u5b9a\u7684\u8c03\u5ea6\u7b97\u6cd5\u9009\u51fa\u4e0b\u4e00\u4e2a\u6267\u884c\u7684\u7ebf\u7a0b\u3002\u6700\u7ec8\u5c06\u9009\u62e9\u5f97\u5230\u7684\u7ebf\u7a0b\u4e0e\u5f53\u524d\u7ebf\u7a0b\u5207\u6362\u3002 \u5728\u5207\u6362\u7684\u8fc7\u7a0b\u4e2d\uff0c\u9996\u5148\u6211\u4eec\u9700\u8981\u4fdd\u5b58\u5f53\u524d\u7ebf\u7a0b\u7684\u6267\u884c\u4e0a\u4e0b\u6587\uff0c\u518d\u5c06\u5c06\u8981\u6267\u884c\u7ebf\u7a0b\u7684\u4e0a\u4e0b\u6587\u8f7d\u5165\u5230\u76f8\u5173\u5bc4\u5b58\u5668\u4e2d\uff0c\u81f3\u6b64\u6211\u4eec\u5c31\u5b8c\u6210\u4e86\u7ebf\u7a0b\u7684\u8c03\u5ea6\u4e0e\u5207\u6362\u3002","title":"3.2 \u7ebf\u7a0b\u5207\u6362\u6d41\u7a0b\u56fe"},{"location":"lab6/#4","text":"","title":"4 \u5b9e\u9a8c\u6b65\u9aa4"},{"location":"lab6/#41","text":"\u6b64\u6b21\u5b9e\u9a8c\u57fa\u4e8e lab5 \u540c\u5b66\u6240\u5b9e\u73b0\u7684\u4ee3\u7801\u8fdb\u884c\u3002 \u4ece repo \u540c\u6b65\u4ee5\u4e0b\u4ee3\u7801: rand.h/rand.c , string.h/string.c , mm.h/mm.c \u3002\u5e76\u6309\u7167\u4ee5\u4e0b\u6b65\u9aa4\u5c06\u8fd9\u4e9b\u6587\u4ef6\u6b63\u786e\u653e\u7f6e\u3002\u5176\u4e2d mm.h\\mm.c \u63d0\u4f9b\u4e86\u7b80\u5355\u7684\u7269\u7406\u5185\u5b58\u7ba1\u7406\u63a5\u53e3\uff0c rand.h\\rand.c \u63d0\u4f9b\u4e86 rand() \u63a5\u53e3\u7528\u4ee5\u63d0\u4f9b\u4f2a\u968f\u673a\u6570\u5e8f\u5217\uff0c string.h/string.c \u63d0\u4f9b\u4e86 memset \u63a5\u53e3\u7528\u4ee5\u521d\u59cb\u5316\u4e00\u6bb5\u5185\u5b58\u7a7a\u95f4\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 . \u251c\u2500\u2500 arch \u2502 \u2514\u2500\u2500 riscv \u2502 \u251c\u2500\u2500 include \u2502 \u2502 \u2514\u2500\u2500 mm.h \u2502 \u2514\u2500\u2500 kernel \u2502 \u2514\u2500\u2500 mm.c \u251c\u2500\u2500 include \u2502 \u251c\u2500\u2500 rand.h \u2502 \u2514\u2500\u2500 string.h \u2514\u2500\u2500 lib \u251c\u2500\u2500 rand.c \u2514\u2500\u2500 string.c \u5728 lab6 \u4e2d\u6211\u4eec\u9700\u8981\u4e00\u4e9b\u7269\u7406\u5185\u5b58\u7ba1\u7406\u7684\u63a5\u53e3\uff0c\u5728\u6b64\u6211\u4eec\u63d0\u4f9b\u4e86 kalloc \u63a5\u53e3 ( \u89c1 mm.c ) \u3002\u540c\u5b66\u53ef\u4ee5\u7528 kalloc \u6765\u7533\u8bf7 4KB \u7684\u7269\u7406\u9875\u3002\u7531\u4e8e\u5f15\u5165\u4e86\u7b80\u5355\u7684\u7269\u7406\u5185\u5b58\u7ba1\u7406\uff0c\u9700\u8981\u5728 _start \u7684\u9002\u5f53\u4f4d\u7f6e\u8c03\u7528 mm_init , \u6765\u521d\u59cb\u5316\u5185\u5b58\u7ba1\u7406\u7cfb\u7edf\uff0c\u5e76\u4e14\u5728\u521d\u59cb\u5316\u65f6\u9700\u8981\u7528\u4e00\u4e9b\u81ea\u5b9a\u4e49\u7684\u5b8f\uff0c\u9700\u8981\u4fee\u6539 defs.h , \u5728 defs.h \u6dfb\u52a0 \u5982\u4e0b\u5185\u5bb9\uff1a 1 2 3 4 5 6 7 #define PHY_START 0x0000000080000000 #define PHY_SIZE 128 * 1024 * 1024 // 128MB\uff0c QEMU \u9ed8\u8ba4\u5185\u5b58\u5927\u5c0f #define PHY_END (PHY_START + PHY_SIZE) #define PGSIZE 0x1000 // 4KB #define PGROUNDUP(addr) ((addr + PGSIZE - 1) & (~(PGSIZE - 1))) #define PGROUNDDOWN(addr) (addr & (~(PGSIZE - 1))) \u8bf7\u5728\u6dfb\u52a0/\u4fee\u6539\u4e0a\u8ff0\u6587\u4ef6\u4ee3\u7801\u4e4b\u540e\uff0c\u786e\u4fdd\u5de5\u7a0b\u53ef\u4ee5\u6b63\u5e38\u8fd0\u884c\uff0c\u4e4b\u540e\u518d\u5f00\u59cb\u5b9e\u73b0 lab6 (\u6709\u53ef\u80fd\u9700\u8981\u540c\u5b66\u81ea\u5df1\u8c03\u6574\u4e00\u4e9b\u5934\u6587\u4ef6\u7684\u5f15\u5165)\u3002 \u5728 lab6 \u4e2d\u9700\u8981\u540c\u5b66\u9700\u8981\u6dfb\u52a0\u5e76\u4fee\u6539 arch/riscv/include/proc.h arch/riscv/kernel/proc.c \u4e24\u4e2a\u6587\u4ef6\u3002 \u672c\u6b21\u5b9e\u9a8c\u9700\u8981\u5b9e\u73b0\u4e00\u79cd\u8c03\u5ea6\u7b97\u6cd5\uff0c \u5982\u4f55\u63a7\u5236\u4ee3\u7801\u903b\u8f91\u89c1 4.4","title":"4.1 \u51c6\u5907\u5de5\u7a0b"},{"location":"lab6/#42-proch","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 // arch/riscv/include/proc.h #include \"types.h\" #define NR_TASKS (1 + 3) // \u7528\u4e8e\u63a7\u5236 \u6700\u5927\u7ebf\u7a0b\u6570\u91cf \uff08idle \u7ebf\u7a0b + 3 \u5185\u6838\u7ebf\u7a0b\uff09 #define TASK_RUNNING 0 // \u4e3a\u4e86\u7b80\u5316\u5b9e\u9a8c\uff0c\u6240\u6709\u7684\u7ebf\u7a0b\u90fd\u53ea\u6709\u4e00\u79cd\u72b6\u6001 #define PRIORITY_MIN 1 #define PRIORITY_MAX 5 /* \u7528\u4e8e\u8bb0\u5f55 `\u7ebf\u7a0b` \u7684 `\u5185\u6838\u6808\u4e0e\u7528\u6237\u6808\u6307\u9488` */ /* (lab6\u4e2d\u65e0\u9700\u8003\u8651\uff0c\u5728\u8fd9\u91cc\u5f15\u5165\u662f\u4e3a\u4e86\u4e4b\u540e\u5b9e\u9a8c\u7684\u4f7f\u7528) */ struct thread_info { uint64 kernel_sp ; uint64 user_sp ; }; /* \u7ebf\u7a0b\u72b6\u6001\u6bb5\u6570\u636e\u7ed3\u6784 */ struct thread_struct { uint64 ra ; uint64 sp ; uint64 s [ 12 ]; }; /* \u7ebf\u7a0b\u6570\u636e\u7ed3\u6784 */ struct task_struct { struct thread_info * thread_info ; uint64 state ; // \u7ebf\u7a0b\u72b6\u6001 uint64 counter ; // \u8fd0\u884c\u5269\u4f59\u65f6\u95f4 uint64 priority ; // \u8fd0\u884c\u4f18\u5148\u7ea7 uint64 pid ; // \u7ebf\u7a0bid struct thread_struct thread ; }; /* \u7ebf\u7a0b\u521d\u59cb\u5316 \u521b\u5efa NR_TASKS \u4e2a\u7ebf\u7a0b */ void task_init (); /* \u5728\u65f6\u949f\u4e2d\u65ad\u5904\u7406\u4e2d\u88ab\u8c03\u7528 \u7528\u4e8e\u5224\u65ad\u662f\u5426\u9700\u8981\u8fdb\u884c\u8c03\u5ea6 */ void do_timer (); /* \u8c03\u5ea6\u7a0b\u5e8f \u9009\u62e9\u51fa\u4e0b\u4e00\u4e2a\u8fd0\u884c\u7684\u7ebf\u7a0b */ void schedule (); /* \u7ebf\u7a0b\u5207\u6362\u5165\u53e3\u51fd\u6570*/ void switch_to ( struct task_struct * next ); /* dummy funciton: \u4e00\u4e2a\u5faa\u73af\u7a0b\u5e8f\uff0c\u5faa\u73af\u8f93\u51fa\u81ea\u5df1\u7684 pid \u4ee5\u53ca\u4e00\u4e2a\u81ea\u589e\u7684\u5c40\u90e8\u53d8\u91cf*/ void dummy ();","title":"4.2 proc.h \u6570\u636e\u7ed3\u6784\u5b9a\u4e49"},{"location":"lab6/#43","text":"","title":"4.3 \u7ebf\u7a0b\u8c03\u5ea6\u529f\u80fd\u5b9e\u73b0"},{"location":"lab6/#431","text":"\u5728\u521d\u59cb\u5316\u7ebf\u7a0b\u7684\u65f6\u5019\uff0c\u6211\u4eec\u53c2\u8003 Linux v0.11\u4e2d\u7684\u5b9e\u73b0 \u4e3a\u6bcf\u4e2a\u7ebf\u7a0b\u5206\u914d\u4e00\u4e2a 4KB \u7684\u7269\u7406\u9875\uff0c\u6211\u4eec\u5c06 task_struct \u5b58\u653e\u5728\u8be5\u9875\u7684\u4f4e\u5730\u5740\u90e8\u5206\uff0c \u5c06\u7ebf\u7a0b\u7684\u6808\u6307\u9488 sp \u6307\u5411\u8be5\u9875\u7684\u9ad8\u5730\u5740\u3002\u5177\u4f53\u5185\u5b58\u5e03\u5c40\u5982\u4e0b\u56fe\u6240\u793a\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\u25c4\u2500\u2500\u2500 High Address \u2502 \u2502 \u2502 stack \u2502 \u2502 \u2502 \u2502 \u2502 sp \u2500\u2500\u25ba\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502 \u2502 \u2502 \u2502 \u25bc \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 4KB Page \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502 \u2502 \u2502 \u2502 \u2502 task_struct \u2502 \u2502 \u2502 \u2502 \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\u25c4\u2500\u2500\u2500 Low Address \u5f53\u6211\u4eec\u7684 OS run \u8d77\u6765\u65f6\u5019\uff0c\u5176\u672c\u8eab\u5c31\u662f\u4e00\u4e2a\u7ebf\u7a0b idle \u7ebf\u7a0b \uff0c\u4f46\u662f\u6211\u4eec\u5e76\u6ca1\u6709\u4e3a\u5b83\u8bbe\u8ba1\u597d task_struct \u3002\u6240\u4ee5\u7b2c\u4e00\u6b65\u6211\u4eec\u8981\u4e3a idle \u8bbe\u7f6e task_struct \u3002\u5e76\u5c06 current , task[0] \u90fd\u6307\u5411 idle \u3002 \u4e3a\u4e86\u65b9\u4fbf\u8d77\u89c1\uff0c\u6211\u4eec\u5c06 task[1] ~ task[NR_TASKS - 1] , \u5168\u90e8\u521d\u59cb\u5316\uff0c \u8fd9\u91cc\u548c idle \u8bbe\u7f6e\u7684\u533a\u522b\u5728\u4e8e\u8981\u4e3a\u8fd9\u4e9b\u7ebf\u7a0b\u8bbe\u7f6e thread_struct \u4e2d\u7684 ra \u548c sp . \u5728 _start \u9002\u5f53\u7684\u4f4d\u7f6e\u8c03\u7528 task_init 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 //arch/riscv/kernel/proc.c extern void __dummy (); struct task_struct * idle ; // idle process struct task_struct * current ; // \u6307\u5411\u5f53\u524d\u8fd0\u884c\u7ebf\u7a0b\u7684 `task_struct` struct task_struct * task [ NR_TASKS ]; // \u7ebf\u7a0b\u6570\u7ec4\uff0c\u6240\u6709\u7684\u7ebf\u7a0b\u90fd\u4fdd\u5b58\u5728\u6b64 void task_init () { // 1. \u8c03\u7528 kalloc() \u4e3a idle \u5206\u914d\u4e00\u4e2a\u7269\u7406\u9875 // 2. \u8bbe\u7f6e state \u4e3a TASK_RUNNING; // 3. \u7531\u4e8e idle \u4e0d\u53c2\u4e0e\u8c03\u5ea6 \u53ef\u4ee5\u5c06\u5176 counter / priority \u8bbe\u7f6e\u4e3a 0 // 4. \u8bbe\u7f6e idle \u7684 pid \u4e3a 0 // 5. \u5c06 current \u548c task[0] \u6307\u5411 idle /* YOUR CODE HERE */ // 1. \u53c2\u8003 idle \u7684\u8bbe\u7f6e, \u4e3a task[1] ~ task[NR_TASKS - 1] \u8fdb\u884c\u521d\u59cb\u5316 // 2. \u5176\u4e2d\u6bcf\u4e2a\u7ebf\u7a0b\u7684 state \u4e3a TASK_RUNNING, counter \u4e3a 0, priority \u4f7f\u7528 rand() \u6765\u8bbe\u7f6e, pid \u4e3a\u8be5\u7ebf\u7a0b\u5728\u7ebf\u7a0b\u6570\u7ec4\u4e2d\u7684\u4e0b\u6807\u3002 // 3. \u4e3a task[1] ~ task[NR_TASKS - 1] \u8bbe\u7f6e `thread_struct` \u4e2d\u7684 `ra` \u548c `sp`, // 4. \u5176\u4e2d `ra` \u8bbe\u7f6e\u4e3a __dummy \uff08\u89c1 4.3.2\uff09\u7684\u5730\u5740\uff0c `sp` \u8bbe\u7f6e\u4e3a \u8be5\u7ebf\u7a0b\u7533\u8bf7\u7684\u7269\u7406\u9875\u7684\u9ad8\u5730\u5740 /* YOUR CODE HERE */ printk ( \"...proc_init done! \\n \" ); }","title":"4.3.1 \u7ebf\u7a0b\u521d\u59cb\u5316"},{"location":"lab6/#432-__dummy-dummy","text":"task[1] ~ task[NR_TASKS - 1] \u90fd\u8fd0\u884c\u540c\u4e00\u6bb5\u4ee3\u7801 dummy() \u6211\u4eec\u5728 proc.c \u6dfb\u52a0 dummy() : 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 // arch/riscv/kernel/proc.c void dummy () { uint64 MOD = 1000000007 ; uint64 auto_inc_local_var = 0 ; int last_counter = -1 ; // \u8bb0\u5f55\u4e0a\u4e00\u4e2acounter int last_last_counter = -1 ; // \u8bb0\u5f55\u4e0a\u4e0a\u4e2acounter while ( 1 ) { if ( last_counter == -1 || current -> counter != last_counter ) { last_last_counter = last_counter ; last_counter = current -> counter ; auto_inc_local_var = ( auto_inc_local_var + 1 ) % MOD ; printk ( \"[PID = %d] is running. auto_inc_local_var = %d \\n \" , current -> pid , auto_inc_local_var ); } else if (( last_last_counter == 0 || last_last_counter == -1 ) && last_counter == 1 ) { // counter\u6052\u4e3a1\u7684\u60c5\u51b5 // \u8fd9\u91cc\u6bd4\u8f83 tricky\uff0c\u4e0d\u8981\u6c42\u7406\u89e3\u3002 last_counter = 0 ; current -> counter = 0 ; } } Debug \u63d0\u793a\uff1a \u53ef\u4ee5\u4fee\u6539 printk \u6253\u5370\u66f4\u591a\u7684\u4fe1\u606f \u5f53\u7ebf\u7a0b\u5728\u8fd0\u884c\u65f6\uff0c\u7531\u4e8e\u65f6\u949f\u4e2d\u65ad\u7684\u89e6\u53d1\uff0c\u4f1a\u5c06\u5f53\u524d\u8fd0\u884c\u7ebf\u7a0b\u7684\u4e0a\u4e0b\u6587\u73af\u5883\u4fdd\u5b58\u5728\u6808\u4e0a ( lab5 \u4e2d\u5b9e\u73b0\u7684 _traps )\u3002 \u5f53\u7ebf\u7a0b\u518d\u6b21\u88ab\u8c03\u5ea6\u65f6\uff0c\u4f1a\u5c06\u4e0a\u4e0b\u6587\u4ece\u6808\u4e0a\u6062\u590d\uff0c\u4f46\u662f\u5f53\u6211\u4eec\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u7ebf\u7a0b\uff0c\u6b64\u65f6\u7ebf\u7a0b\u7684\u6808\u4e3a\u7a7a\uff0c\u5f53\u8fd9\u4e2a\u7ebf\u7a0b\u88ab\u8c03\u5ea6\u65f6\uff0c\u662f\u6ca1\u6709\u4e0a\u4e0b\u6587\u9700\u8981\u88ab\u6062\u590d\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u4e3a\u7ebf\u7a0b \u7b2c\u4e00\u6b21\u8c03\u5ea6 \u63d0\u4f9b\u4e00\u4e2a\u7279\u6b8a\u7684\u8fd4\u56de\u51fd\u6570 __dummy \u5728 entry.S \u6dfb\u52a0 __dummy \u5728 __dummy \u4e2d\u5c06 sepc \u8bbe\u7f6e\u4e3a dummy() \u7684\u5730\u5740, \u5e76\u4f7f\u7528 sret \u4ece\u4e2d\u65ad\u4e2d\u8fd4\u56de\u3002 __dummy \u4e0e _traps \u7684 restore \u90e8\u5206\u76f8\u6bd4\uff0c \u5176\u5b9e\u5c31\u662f\u7701\u7565\u4e86\u4ece\u6808\u4e0a\u6062\u590d\u4e0a\u4e0b\u6587\u7684\u8fc7\u7a0b \uff08 \u4f46\u662f\u624b\u52a8\u8bbe\u7f6e\u4e86 sepc \uff09\u3002 1 2 3 4 5 # arch/riscv/kernel/entry.S .global __dummy __dummy: # YOUR CODE HERE","title":"4.3.2 __dummy \u4e0e dummy \u4ecb\u7ecd"},{"location":"lab6/#433","text":"\u5224\u65ad\u4e0b\u4e00\u4e2a\u6267\u884c\u7684\u7ebf\u7a0b next \u4e0e\u5f53\u524d\u7684\u7ebf\u7a0b current \u662f\u5426\u4e3a\u540c\u4e00\u4e2a\u7ebf\u7a0b\uff0c\u5982\u679c\u662f\u540c\u4e00\u4e2a\u7ebf\u7a0b\uff0c\u5219\u65e0\u9700\u505a\u4efb\u4f55\u5904\u7406\uff0c\u5426\u5219\u8c03\u7528 __switch_to \u8fdb\u884c\u7ebf\u7a0b\u5207\u6362\u3002 1 2 3 4 5 6 7 // arch/riscv/kernel/proc.c extern void __switch_to ( struct task_struct * prev , struct task_struct * next ); void switch_to ( struct task_struct * next ) { /* YOUR CODE HERE */ } \u5728 entry.S \u4e2d\u5b9e\u73b0\u7ebf\u7a0b\u4e0a\u4e0b\u6587\u5207\u6362 __switch_to : __switch_to \u63a5\u53d7\u4e24\u4e2a task_struct \u6307\u9488\u4f5c\u4e3a\u53c2\u6570 \u4fdd\u5b58\u5f53\u524d\u7ebf\u7a0b\u7684 ra , sp , s0~s11 \u5230\u5f53\u524d\u7ebf\u7a0b\u7684 thread_struct \u4e2d \u5c06\u4e0b\u4e00\u4e2a\u7ebf\u7a0b\u7684 thread_struct \u4e2d\u7684\u76f8\u5173\u6570\u636e\u8f7d\u5165\u5230 ra , sp , s0~s11 \u4e2d\u3002 1 2 3 4 5 6 7 8 9 10 11 # arch/riscv/kernel/entry.S .globl __switch_to __switch_to: # save state to prev process # YOUR CODE HERE # restore state from next process # YOUR CODE HERE ret Debug \u63d0\u793a\uff1a \u53ef\u4ee5\u5c1d\u8bd5\u662f\u5426\u53ef\u4ee5\u4ece idle \u6b63\u786e\u5207\u6362\u5230 process 1","title":"4.3.3 \u5b9e\u73b0\u7ebf\u7a0b\u5207\u6362"},{"location":"lab6/#434","text":"\u5b9e\u73b0 do_timer() , \u5e76\u5728 \u65f6\u949f\u4e2d\u65ad\u5904\u7406\u51fd\u6570 \u4e2d\u8c03\u7528\u3002 1 2 3 4 5 6 7 8 // arch/riscv/kernel/proc.c void do_timer ( void ) { /* 1. \u5c06\u5f53\u524d\u8fdb\u7a0b\u7684counter--\uff0c\u5982\u679c\u7ed3\u679c\u5927\u4e8e\u96f6\u5219\u76f4\u63a5\u8fd4\u56de*/ /* 2. \u5426\u5219\u8fdb\u884c\u8fdb\u7a0b\u8c03\u5ea6 */ /* YOUR CODE HERE */ }","title":"4.3.4 \u5b9e\u73b0\u8c03\u5ea6\u5165\u53e3\u51fd\u6570"},{"location":"lab6/#435","text":"\u672c\u6b21\u5b9e\u9a8c\u6211\u4eec\u9700\u8981\u5b9e\u73b0\u8fdb\u7a0b\u8c03\u5ea6\u7b97\u6cd5(\u8981\u6c42\u6700\u7ec8\u6267\u884c\u7ed3\u679c\u548c4.4\u7ed9\u51fa\u7684\u7ed3\u679c\u4e00\u81f4)\uff0c\u53ef\u53c2\u8003 Linux v0.11 \u8c03\u5ea6\u7b97\u6cd5\u5b9e\u73b0 \u3002 1 2 3 4 5 // arch/riscv/kernel/proc.c void schedule ( void ) { /* YOUR CODE HERE */ }","title":"4.3.5 \u5b9e\u73b0\u7ebf\u7a0b\u8c03\u5ea6"},{"location":"lab6/#44","text":"\u7531\u4e8e\u52a0\u5165\u4e86\u4e00\u4e9b\u65b0\u7684 .c \u6587\u4ef6\uff0c\u53ef\u80fd\u9700\u8981\u4fee\u6539\u4e00\u4e9bMakefile\u6587\u4ef6\uff0c\u8bf7\u540c\u5b66\u81ea\u5df1\u5c1d\u8bd5\u4fee\u6539\uff0c\u4f7f\u9879\u76ee\u53ef\u4ee5\u7f16\u8bd1\u5e76\u8fd0\u884c\u3002 \u5173\u4e8e\u8fdb\u7a0b\u5207\u6362\u548c\u8fdb\u7a0b\u8bbe\u7f6e\u7684\u8f93\u51fa\u5e76\u4e3a\u5728\u6846\u67b6\u4ee3\u7801\u4e2d\u7ed9\u51fa\uff0c\u9700\u8981\u81ea\u4e3b\u6dfb\u52a0\u5230\u76f8\u5bf9\u5e94\u7684\u4f4d\u7f6e\uff1b\u5e76\u53bb\u6389lab5\u4e2d\u5173\u4e8e\u65f6\u949f\u4e2d\u65ad\u7684\u76f8\u5173\u8f93\u51fa\u3002\u6700\u7ec8\u7ed3\u679c\u5e94\u548c\u4e0b\u65b9\u4e00\u81f4\u3002 \u7ebf\u7a0b\u8c03\u5ea6\u8f93\u51fa\u793a\u4f8b\u5982\u4e0b\u6240\u793a\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 OpenSBI v1.1-80-g22f38ee ____ _____ ____ _____ / __ \\ / ____ | _ \\_ _ | | | | | _ __ ___ _ __ | ( ___ | | _ ) || | | | | | '_ \\ / _ \\ ' _ \\ \\_ __ \\| _ < | | | | __ | | | _ ) | __/ | | | ____ ) | | _ ) || | _ \\_ ___/ | .__/ \\_ __ | _ | | _ | _____/ | ____/_____ | | | | _ | Platform Name : riscv-virtio,qemu Platform Features : medeleg Platform HART Count : 1 Platform IPI Device : aclint-mswi Platform Timer Device : aclint-mtimer @ 10000000Hz Platform Console Device : uart8250 Platform HSM Device : --- Platform PMU Device : --- Platform Reboot Device : sifive_test Platform Shutdown Device : sifive_test Firmware Base : 0x80000000 Firmware Size : 196 KB Runtime SBI Version : 1 .0 Domain0 Name : root Domain0 Boot HART : 0 Domain0 HARTs : 0 * Domain0 Region00 : 0x0000000002000000-0x000000000200ffff ( I ) Domain0 Region01 : 0x0000000080000000-0x000000008003ffff () Domain0 Region02 : 0x0000000000000000-0xffffffffffffffff ( R,W,X ) Domain0 Next Address : 0x0000000080200000 Domain0 Next Arg1 : 0x0000000082200000 Domain0 Next Mode : S-mode Domain0 SysReset : yes Boot HART ID : 0 Boot HART Domain : root Boot HART Priv Version : v1.10 Boot HART Base ISA : rv64imafdc Boot HART ISA Extensions : none Boot HART PMP Count : 16 Boot HART PMP Granularity : 4 Boot HART PMP Address Bits: 54 Boot HART MHPM Count : 0 Boot HART MIDELEG : 0x0000000000000222 Boot HART MEDELEG : 0x000000000000b109 ...mm_init done ! ...proc_init done ! 2022 ZJU Computer System II SET [ PID = 1 , PRIORITY = 1 , COUNTER = 1 ] SET [ PID = 2 , PRIORITY = 4 , COUNTER = 4 ] SET [ PID = 3 , PRIORITY = 5 , COUNTER = 5 ] switch to [ PID = 1 , PRIORITY = 1 , COUNTER = 1 ] [ PID = 1 ] is running. auto_inc_local_var = 1 switch to [ PID = 2 , PRIORITY = 4 , COUNTER = 4 ] [ PID = 2 ] is running. auto_inc_local_var = 1 [ PID = 2 ] is running. auto_inc_local_var = 2 [ PID = 2 ] is running. auto_inc_local_var = 3 [ PID = 2 ] is running. auto_inc_local_var = 4 switch to [ PID = 3 , PRIORITY = 5 , COUNTER = 5 ] [ PID = 3 ] is running. auto_inc_local_var = 1 [ PID = 3 ] is running. auto_inc_local_var = 2 [ PID = 3 ] is running. auto_inc_local_var = 3 [ PID = 3 ] is running. auto_inc_local_var = 4 [ PID = 3 ] is running. auto_inc_local_var = 5 SET [ PID = 1 , PRIORITY = 1 , COUNTER = 1 ] SET [ PID = 2 , PRIORITY = 4 , COUNTER = 4 ] SET [ PID = 3 , PRIORITY = 5 , COUNTER = 5 ] switch to [ PID = 1 , PRIORITY = 1 , COUNTER = 1 ] [ PID = 1 ] is running. auto_inc_local_var = 2 switch to [ PID = 2 , PRIORITY = 4 , COUNTER = 4 ] [ PID = 2 ] is running. auto_inc_local_var = 5 [ PID = 2 ] is running. auto_inc_local_var = 6 [ PID = 2 ] is running. auto_inc_local_var = 7 [ PID = 2 ] is running. auto_inc_local_var = 8 switch to [ PID = 3 , PRIORITY = 5 , COUNTER = 5 ] [ PID = 3 ] is running. auto_inc_local_var = 6 [ PID = 3 ] is running. auto_inc_local_var = 7 [ PID = 3 ] is running. auto_inc_local_var = 8 [ PID = 3 ] is running. auto_inc_local_var = 9 [ PID = 3 ] is running. auto_inc_local_var = 10 SET [ PID = 1 , PRIORITY = 1 , COUNTER = 1 ] SET [ PID = 2 , PRIORITY = 4 , COUNTER = 4 ] SET [ PID = 3 , PRIORITY = 5 , COUNTER = 5 ] switch to [ PID = 1 , PRIORITY = 1 , COUNTER = 1 ] [ PID = 1 ] is running. auto_inc_local_var = 3","title":"4.4 \u7f16\u8bd1\u53ca\u6d4b\u8bd5"},{"location":"lab6/#_1","text":"\u5728 RV64 \u4e2d\u4e00\u5171\u7528 32 \u4e2a\u901a\u7528\u5bc4\u5b58\u5668\uff0c \u4e3a\u4ec0\u4e48 context_switch \u4e2d\u53ea\u4fdd\u5b58\u4e8614\u4e2a\uff1f \u5f53\u7ebf\u7a0b\u7b2c\u4e00\u6b21\u8c03\u7528\u65f6\uff0c \u5176 ra \u6240\u4ee3\u8868\u7684\u8fd4\u56de\u70b9\u662f __dummy \u3002 \u90a3\u4e48\u5728\u4e4b\u540e\u7684\u7ebf\u7a0b\u8c03\u7528\u4e2d context_switch \u4e2d\uff0c ra \u4fdd\u5b58/\u6062\u590d\u7684\u51fd\u6570\u8fd4\u56de\u70b9\u662f\u4ec0\u4e48\u5462 \uff1f \u8bf7\u540c\u5b66\u7528gdb\u5c1d\u8bd5\u8ffd\u8e2a\u4e00\u6b21\u5b8c\u6574\u7684\u7ebf\u7a0b\u5207\u6362\u6d41\u7a0b\uff0c \u5e76\u5173\u6ce8\u6bcf\u4e00\u6b21 ra \u7684\u53d8\u6362\u3002","title":"\u601d\u8003\u9898"},{"location":"lab6/#_2","text":"\u540c\u5b66\u9700\u8981\u63d0\u4ea4\u5b9e\u9a8c\u62a5\u544a\u4ee5\u53ca\u6574\u4e2a\u5de5\u7a0b\u4ee3\u7801\uff0c\u63d0\u4ea4\u65f6\u8bf7\u6ce8\u610f\u5982\u4e0b\u51e0\u70b9\uff1a \u62a5\u544a\u7684pdf\u653e\u5728\u5916\u9762\uff0c\u538b\u7f29\u5305\u53ea\u653e\u4ee3\u7801\u3002 1 2 3 \u63d0\u4ea4\u6587\u4ef6 \u251c\u2500\u2500 report.pdf \u2514\u2500\u2500 code.zip \u63d0\u4ea4\u524d\u8bf7\u4f7f\u7528 make clean \u6e05\u9664\u6240\u6709\u6784\u5efa\u4ea7\u7269\u3002","title":"\u4f5c\u4e1a\u63d0\u4ea4"},{"location":"lab7/","text":"\u5b9e\u9a8c 7\uff1a\u7efc\u5408\u5b9e\u9a8c 1 \u5b9e\u9a8c\u76ee\u7684 \u5b66\u4e60 OS \u5728\u786c\u4ef6\u5c42\u9762\u7684\u62bd\u8c61 \u5b8c\u5584\u81ea\u5df1\u7684 CPU Core\uff0c\u8fd0\u884c\u8d77\u4e00\u4e2a\u7b80\u6613 ELF \u7a0b\u5e8f\uff1aNaive Kernel 2 \u5b9e\u9a8c\u73af\u5883 HDL \uff1aVerilog IDE \uff1aVivado \u5f00\u53d1\u677f \uff1aNexys A7 \u8f6f\u4ef6\u8f85\u52a9\u73af\u5883 \uff1aUbuntu 20.04, 22.04 3 \u80cc\u666f\u4ecb\u7ecd \u5728\u7cfb\u7edf\u4e8c\u8d2f\u901a\u8bfe\u7a0b\u7684\u5b66\u4e60\u4e2d\uff0c\u6211\u4eec\u65e2\u5b66\u4e60\u4e86\u786c\u4ef6\u7cfb\u7edf\uff08\u4f53\u7cfb\u7ed3\u6784\uff09\u4e5f\u5b66\u4e60\u4e86\u8f6f\u4ef6\u7cfb\u7edf\uff08\u64cd\u4f5c\u7cfb\u7edf\uff09\u3002\u5728\u8fd9\u6700\u540e\u4e00\u4e2a\u5b9e\u9a8c\u4e2d\uff0c\u6211\u4eec\u8981\u5c1d\u8bd5\u5c06\u4e00\u4e2a\u7b80\u6613\u7684 32 \u4f4d ELF \u7a0b\u5e8f\uff1aNaive Kernel \u8fd0\u884c\u5728\u81ea\u5df1\u7f16\u5199\u7684 CPU Core \u4e0a\u3002 Naive Kernel\u4ee3\u7801\uff0c\u5b9e\u73b0\u7684\u529f\u80fd\u7c7b\u4f3c\u4e8e lab6 \u4e2d\u7684\u5185\u5bb9\uff0c\u521d\u59cb\u5316\u591a\u4e2a\u8fdb\u7a0b\uff0c\u5f85\u65f6\u95f4\u7247\u8017\u5c3d\u540e\u8fdb\u884c\u8c03\u5ea6\uff0c\u5728\u57fa\u7840\u8981\u6c42\u4e2d\u53ea\u4f1a\u53d1\u751f\u8c03\u5ea6\u5bfc\u81f4\u7684\u5f02\u5e38\uff0c\u6309\u7167 lab6 \u4e2d\u7684\u8c03\u5ea6\u903b\u8f91 trap_handler -> traps -> schedule -> switch_to -> __switch_to \u987a\u5e8f\u6267\u884c\u3002 \u4e3a\u4e86\u964d\u4f4e\u5b9e\u9a8c\u96be\u5ea6\uff0cNaive Kernel \u5e76\u4e0d\u80fd\u7b97\u5f97\u4e0a\u4e00\u4e2a \u771f\u6b63 \u7684\u64cd\u4f5c\u7cfb\u7edf\uff0c\u6bd4\u5982\uff1a Naive Kernel \u53ea\u6709\u4e00\u4e2a\u7279\u6743\u6001\uff08Machine Mode\uff09 Naive Kernel \u7684\u4e2d\u65ad\u6808\u662f\u6bcf\u4e2a\u8fdb\u7a0b\u81ea\u5df1\u7ef4\u62a4\u7684 Naive Kernel \u8fdb\u7a0b\u51fa\u8ba9\u65f6\u95f4\u7247\u7684\u65b9\u5f0f\u662f\u81ea\u5df1\u51cf\u5c11\u8fdb\u7a0b\u7279\u6709\u7684 Counter\uff0c\u800c\u5e76\u4e0d\u662f\u901a\u8fc7\u5916\u90e8\u7684\u65f6\u949f\u4e2d\u65ad ... Naive Kernel \u4e0d\u4f7f\u7528\u4e32\u53e3\u6216\u5176\u4ed6\u534f\u8bae\u4e0e\u5916\u754c\u901a\u4fe1\uff0c\u800c\u662f\u4f7f\u7528 gp \u5bc4\u5b58\u5668\u6765\u6807\u5fd7\u5f53\u524d\u7684\u8fd0\u884c\u72b6\u6001\uff1a \u5f53\u8fdb\u7a0b\u5207\u6362\u540e\uff0cgp \u7684\u503c\u66f4\u65b0\u4e3a 0x100 + task-id \u5f53\u5904\u7406\u4e86 unimp \u6307\u4ee4\u5e26\u6765\u7684 Illegal Instruction \u5f02\u5e38\u540e\uff0cgp \u7684\u503c\u66f4\u65b0\u4e3a mcause \u7684\u503c\uff08\u8fdb\u9636\u7248\uff09 4 \u5b9e\u9a8c\u6b65\u9aa4 \u9996\u5148\u9700\u8981\u6e05\u695a\uff0c\u672c\u6b21\u7684\u5b9e\u9a8c\u7684\u4e3b\u8981\u5de5\u4f5c\u662f\u57fa\u4e8e\u6211\u4eec\u5728 lab2 \u4e2d\u5b8c\u6210\u7684\u6d41\u6c34\u7ebf CPU \u8fdb\u884c\u7684\u3002 4.1 \u51c6\u5907\u5de5\u4f5c \u9996\u5148\u4ece\u4ed3\u5e93\u4e2d\u540c\u6b65\u5982\u4e0b\u4ee3\u7801 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 lab7 \u251c\u2500\u2500 kernel \u2502 \u251c\u2500\u2500 Makefile \u2502 \u251c\u2500\u2500 build-advance \u2502 \u2502 \u251c\u2500\u2500 head.o \u2502 \u2502 \u251c\u2500\u2500 kernel.bin \u2502 \u2502 \u251c\u2500\u2500 kernel.coe \u2502 \u2502 \u251c\u2500\u2500 kernel.dump \u2502 \u2502 \u251c\u2500\u2500 kernel.elf \u2502 \u2502 \u251c\u2500\u2500 kernel.sim \u2502 \u2502 \u251c\u2500\u2500 main.o \u2502 \u2502 \u2514\u2500\u2500 sim.elf \u2502 \u251c\u2500\u2500 build-normal \u2502 \u2502 \u251c\u2500\u2500 head.o \u2502 \u2502 \u251c\u2500\u2500 kernel.bin \u2502 \u2502 \u251c\u2500\u2500 kernel.coe \u2502 \u2502 \u251c\u2500\u2500 kernel.dump \u2502 \u2502 \u251c\u2500\u2500 kernel.elf \u2502 \u2502 \u251c\u2500\u2500 kernel.sim \u2502 \u2502 \u251c\u2500\u2500 main.o \u2502 \u2502 \u2514\u2500\u2500 sim.elf \u2502 \u251c\u2500\u2500 head.S \u2502 \u251c\u2500\u2500 kernel.lds \u2502 \u251c\u2500\u2500 main.c \u2502 \u251c\u2500\u2500 main.h \u2502 \u2514\u2500\u2500 sim.lds \u2514\u2500\u2500 memory \u251c\u2500\u2500 myRam.v \u2514\u2500\u2500 myRom.v \u5728 lab7 \u4e0b\u6709\u4e24\u4e2a\u5b50\u6587\u4ef6\u5939\uff0c\u5176\u4e2d memory \u662f\u8981\u6dfb\u52a0\u5728 Vivado \u5de5\u7a0b\u4e2d\u7684 .v \u6587\u4ef6\uff0c kernel \u5219\u662f\u8981\u8fd0\u884c\u5728\u6211\u4eec\u81ea\u5df1\u7f16\u5199\u7684 CPU Core \u4e0a\u7684\u7a0b\u5e8f memory/myRom.v \u6587\u4ef6\u7684\u5185\u5bb9\u5982\u4e0b\u6240\u793a 1 2 3 4 5 6 7 8 9 10 11 12 13 module myRom ( input [ 10 : 0 ] address , output [ 31 : 0 ] out ); reg [ 31 : 0 ] rom [ 0 : 2047 ]; localparam FILE_PATH = \"kernel.sim\" ; // \u4fee\u6539\u4e3a\u4f60\u7684 kernel.sim \u7684\u8def\u5f84 initial begin $readmemh ( FILE_PATH , rom ); end assign out = rom [ address ]; endmodule \u4e4b\u524d\u6211\u4eec\u91c7\u7528\u7684\u662f\u901a\u8fc7 .coe \u6587\u4ef6\u7684\u65b9\u5f0f\u6765\u5b8c\u6210 IP \u6838\u4e2d\u7684\u6570\u636e\u88c5\u8f7d\uff0c\u4f46\u4e8b\u5b9e\u4e0a\uff0c .coe \u6587\u4ef6\u4e0d\u591f\u7075\u6d3b\uff0c\u6bcf\u6b21\u4fee\u6539 .coe \u6587\u4ef6\uff0c\u90fd\u8981\u91cd\u65b0\u751f\u4ea7 IP \u6838\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u5728\u672c\u6b21\u5b9e\u9a8c\u4e2d\u5c06\u91c7\u7528 $readmemh \u7cfb\u7edf\u51fd\u6570\u521d\u59cb\u5316\u6307\u4ee4\u6570\u636e\uff0c\u5e76\u91c7\u7528\u5bc4\u5b58\u5668\u6570\u7ec4\u4ee3\u66ff\u539f\u6765\u7684 IP \u6838\u3002\u8fd9\u6837\uff0c\u6bcf\u6b21\u9700\u8981\u52a0\u8f7d\u65b0\u7684\u6587\u4ef6\u65f6\uff0c\u6211\u4eec\u53ea\u9700\u5bf9\u53d8\u91cf FILE_PATH \u4fee\u6539\u4e3a\u76f8\u5e94\u7684\u8def\u5f84\u5373\u53ef\u3002 $readmemh \u4f1a\u81ea\u52a8\u4ece\u76f8\u5e94\u7684\u6587\u4ef6\u4e2d\u52a0\u8f7d\u6700\u65b0\u7684\u6570\u636e\u3002 \u8bf7\u5728\u5de5\u7a0b\u7684\u9002\u5f53\u4f4d\u7f6e\u6dfb\u52a0\u5982\u4e0b\u4ee3\u7801\uff0c\u7528\u4e8e\u5c06 myRom \u5b9e\u4f8b\u5316\uff0c\u5e76\u5c06\u539f\u6765\u7684\u7528 Block Memory Generator \u751f\u6210\u7684 IP \u6838\u7684\u5b9e\u4f8b\u5316\u4ee3\u7801\u6ce8\u91ca\u6389 1 2 3 4 myRom rom_unit ( . address ( pc_out [ 12 : 2 ]), . out ( inst ) ); \u9664\u6b64\u4e4b\u5916\uff0c\u8bf7\u4eff\u7167\u4e0a\u8ff0\u8fc7\u7a0b\u5c06 memory/myRam.v \u4e5f\u6dfb\u52a0\u5230\u9879\u76ee\u4e2d\u3002 \u800c\u5728 kernel \u6587\u4ef6\u5939\u4e0b build-advance \u548c build-normal \u5206\u522b\u662f\u505a bonus \u548c\u4e0d\u505a bonus \u7f16\u8bd1\u51fa\u7684\u6587\u4ef6\u3002\u8bf7\u5c06 build-normal \u76ee\u5f55\u4e0b\u7684 kernel.sim \u52a0\u8f7d\u5230\u7a0b\u5e8f\u4e2d\uff0c\u800c\u76f8\u5e94\u7684\u6c47\u7f16\u6587\u4ef6\u6211\u4eec\u53ef\u4ee5\u67e5\u770b kernel.dump \u800c head.S , main.c , main.h \u5219\u662f\u7a0b\u5e8f\u7684\u6e90\u4ee3\u7801\uff0c\u8bf7\u540c\u5b66\u4eec\u5728\u5b9e\u9a8c\u5f00\u59cb\u524d\u52a1\u7406\u89e3\u6e90\u4ee3\u7801\u3002 \u5728\u7f16\u8bd1\u5f97\u5230\u7684\u4ee3\u7801\u4e2d\u53ef\u80fd\u4f1a\u51fa\u73b0\u6211\u4eec\u4e4b\u524d\u6ca1\u6709\u8981\u6c42\u5b9e\u73b0\u7684\u6307\u4ee4\uff0c\u5982 auipc \uff0c\u9700\u8981\u540c\u5b66\u4eec\u6839\u636e\u5b9e\u9645\u60c5\u51b5\u5728\u672c\u6b21\u5b9e\u9a8c\u4e2d\u8865\u8db3\uff0c\u76f8\u5e94\u7684\u6307\u4ee4\u8bf7\u53c2\u8003 spec \u624b\u518c\u5b9e\u73b0\u3002 \u7531\u4e8e\u4e0a\u677f\u548c QEMU \u8c03\u8bd5 Naive Kernel \u9700\u8981\u4e0d\u540c\u7684\u5185\u5b58\u8d77\u59cb\u5730\u5740\uff08\u4e0a\u677f\u7684\u5730\u5740\u4ece 0x0 \u5f00\u59cb\uff0cQEMU \u8c03\u8bd5\u7684\u5730\u5740\u4ece 0x80000000 \u5f00\u59cb\uff09\uff0c\u6211\u4eec\u901a\u8fc7 lds \u6587\u4ef6\u63a7\u5236\u4e86\u52a0\u8f7d\u5730\u5740\u3002\u5728\u76f8\u5e94 build \u6587\u4ef6\u5939\u4e0b\u7684 sim.elf \u662f\u4f9b QEMU \u8c03\u8bd5\u7528\u7684 ELF\u3002 \u7531\u4e8e\u672c\u6b21\u5b9e\u9a8c\u7684\u4ee3\u7801\u91cf\u8f83\u5927\uff0c\u8c03\u8bd5\u8d77\u6765\u4f1a\u6709\u4e00\u5b9a\u96be\u5ea6\uff0c\u5efa\u8bae\u540c\u5b66\u4eec\u5728\u51fa\u73b0\u95ee\u9898\u65f6\u4ece\u67d0\u4e00\u6761\u6216\u8005\u67d0\u4e00\u7c7b\u6307\u4ee4\u53ef\u80fd\u51fa\u9519\u5206\u6790\uff0c\u4e00\u5b9a\u8981\u5148\u786e\u4fdd\u8981\u6c42\u5b9e\u73b0\u7684\u6307\u4ee4\u90fd\u53ef\u4ee5\u6b63\u5e38\u6267\u884c\uff0c\u518d\u8ddf\u8e2a\u6ce2\u5f62\u8c03\u8bd5\u3002 4.2 QEMU \u8fd0\u884c\u4e0e\u8c03\u8bd5 \u7531\u4e8e\u76f8\u5e94\u7684\u5de5\u5177\u94fe\u914d\u7f6e\u8d77\u6765\u5341\u5206\u9ebb\u70e6\uff0c\u56e0\u6b64\u6211\u4eec\u5df2\u7ecf\u5e2e\u5927\u5bb6\u505a\u597d\u4e86\u7f16\u8bd1\u7684\u5de5\u4f5c\uff0c\u4f46\u662f\uff0c\u6211\u4eec\u4ecd\u7136\u53ef\u4ee5\u5229\u7528 QEMU \u8fdb\u884c\u8c03\u8bd5 Naive Kernel \u4e0d\u9700\u8981\u4f7f\u7528 OpenSBI \u4f5c\u4e3a Bootloader\uff0c\u56e0\u6b64\u5728 QEMU \u9009\u9879\u4e2d\u4f7f\u7528 -bios \u800c\u975e -kernel \u6765\u52a0\u8f7d ELF \u6587\u4ef6\u3002\u56e0\u6b64\u4e3a\u4e86\u8c03\u8bd5 Naive Kernel\uff0c\u4f7f\u7528\u5982\u4e0b\u547d\u4ee4\uff1a 1 $ qemu-system-riscv32 -nographic -machine virt -bios path/to/sim.elf -S -s \u5176\u4ed6\u6d41\u7a0b\u5747\u4e0e\u4e4b\u524d\u7684\u5b9e\u9a8c\u76f8\u4f3c\u3002 4.3 \u589e\u52a0 CSR \u5bc4\u5b58\u5668 \u672c\u6b21\u5b9e\u9a8c\u9700\u8981\u65b0\u589e\u81f3\u5c113\u4e2aCSR\u5bc4\u5b58\u5668\uff1amtvec, mepc, mstatus\uff0c\u4ee5\u4fdd\u8bc1\u7a0b\u5e8f\u7684\u6b63\u786e\u6267\u884c\u3002CSR\u5bc4\u5b58\u5668\u7684\u957f\u5ea6\u4e3a MXLEN-bit \uff0c\u5728\u672c\u6b21\u5b9e\u9a8c\u4e2d\u53d6 MXLEN \u7684\u503c\u4e3a 32 \u3002\u6211\u4eec\u63a8\u8350\u5c06CSR\u5bc4\u5b58\u5668\u5c01\u88c5\u5728\u4e00\u4e2a\u72ec\u7acb\u7684CSR\u6a21\u5757\uff08module\uff09\u4e2d\uff0c\u5c06\u5b9e\u73b0\u7684CSR\u5bc4\u5b58\u5668\u901a\u8fc7\u63a5\u53e3\u4e0e\u6d41\u6c34\u7ebfCPU\u8fdb\u884c\u4ea4\u4e92\u3002 \u4e0b\u9762\u662f3\u4e2a\u5bc4\u5b58\u5668\u7684\u7b80\u8981\u4ecb\u7ecd\uff0c\u6211\u4eec\u5728\u5b9e\u9a8c\u4e2d\u53ea\u8981\u6c42\u5b9e\u73b0\u67d0\u4e9b\u5bc4\u5b58\u5668\u7684\u90e8\u5206\u529f\u80fd\uff0c\u5982\u679c\u60f3\u8981\u4e86\u89e3\u5b8c\u6574\u7684\u5904\u7406\u673a\u5236\u53ef\u4ee5\u53c2\u8003\u5b98\u65b9\u624b\u518c\u3002 mtvec(Machine Trap-Vector Base-Address Register)\u5bc4\u5b58\u5668\u662f\u53ef\u8bfb\u53ef\u5199\u5bc4\u5b58\u5668\uff0c\u5b58\u50a8\u5f02\u5e38\u5904\u7406\u4ee3\u7801\u7684\u5730\u5740\uff0c\u672c\u6b21\u5b9e\u9a8c\u53ea\u9700\u8981\u5b9e\u73b0 Direct \u6a21\u5f0f\uff0c\u5373\u53d1\u751f\u5f02\u5e38\u65f6\u8df3\u8f6c\u5230mtvec\u6240\u6307\u5411\u7684\u5730\u5740\u8fdb\u884c\u5904\u7406\u3002 mepc(Machine Exception Program Counter)\u5bc4\u5b58\u5668\u662f\u53ef\u8bfb\u53ef\u5199\u5bc4\u5b58\u5668\uff0c\u5b58\u50a8\u53d1\u751f\u5f02\u5e38\u65f6\u7684\u5730\u5740\u3002 mstatus(Machine Status Register)\u5bc4\u5b58\u5668\u662f\u53ef\u8bfb\u53ef\u5199\u5bc4\u5b58\u5668\uff0c\u5b58\u50a8M\u6a21\u5f0f\u4e0b\u7684\u5f02\u5e38\u76f8\u5173\u7684\u4fe1\u606f\uff0c\u5728\u672c\u6b21\u5b9e\u9a8c\u4e2d\u6211\u4eec\u53ea\u9700\u8981\u5b9e\u73b0\u5176\u4e2d\u7684 MIE(3) \u5373\u53ef\u3002 4.4 \u589e\u52a0\u7279\u6743\u6001\u6307\u4ee4 csrr[w/s/c][i]\u662f\u5bf9\u4e8eCSR\u5bc4\u5b58\u5668\u8fdb\u884c\u8bfb\u5199\u64cd\u4f5c\u7684\u6307\u4ee4\uff0c\u8fd9\u91cc\u4ee5 csrrw rd, csr, rs \u4e3e\u4f8b\u8bf4\u660e\uff0ccsrrw\u7684\u6307\u4ee4\u542b\u4e49\u662fAtomic Read/Write CSR\uff0c\u539f\u5b50\u5730\u8bfb\u5199CSR\u5bc4\u5b58\u5668\uff0c\u5373\u539f\u5b50\u6027\u5730\u5b8c\u6210 gpr[rd] = csr, csr = gpr[rs] \u4e00\u8bfb\u4e00\u5199\u4e24\u4e2a\u64cd\u4f5c\u3002\u4e0e\u4e4b\u76f8\u7c7b\u4f3c\uff0ccsrrs\u5373set\u64cd\u4f5c gpr[rd] = csr, csr = csr | gpr[rs] \uff0ccsrrc\u5373clear\u64cd\u4f5c gpr[rd] = csr, csr = csr & ~gpr[rs] \uff0c[i]\u5373\u4e3a\u7acb\u5373\u6570\u6307\u4ee4\uff0c\u66f4\u591a\u76f8\u5173\u7684\u7ec6\u8282\u53ef\u4ee5\u53c2\u8003 RISCV\u5b98\u7f51 \u3002 ecall\u6307\u4ee4\u7684\u542b\u4e49\u662f\u5411\u6267\u884c\u73af\u5883\u53d1\u51fa\u8bf7\u6c42\uff0c\u6211\u4eec\u5728 lab4~6 \u4e2d\u5b9e\u73b0\u7684 sbi_ecall \u5c31\u662f\u901a\u8fc7 ecall \u5411\u6743\u9650\u66f4\u9ad8\u7684M\u6a21\u5f0f\u53d1\u9001\u8bf7\u6c42\uff0c\u5b8c\u6210\u7c7b\u4f3c\u4e8e\u6253\u5370\u5b57\u7b26\uff0c\u8bbe\u7f6e\u65f6\u949f\u8ba1\u65f6\u7b49\u3002\u5728\u672c\u6b21\u5b9e\u9a8c\u4e2d\uff0c\u6211\u4eec\u53ea\u5b9e\u73b0M\u6a21\u5f0f\uff0c\u5728\u6267\u884c\u6307\u4ee4 ecall \u540e\u4f1a\u89e6\u53d1\u5f02\u5e38 Environmrnt call from M-mode \uff0c\u9700\u8981\u5bf9\u76f8\u5173\u5bc4\u5b58\u5668\u8fdb\u884c\u8bbe\u7f6e\u5e76\u8df3\u8f6c\u5230\u5f02\u5e38\u5904\u7406\u5730\u5740\u3002 mret\u6307\u4ee4\u7684\u542b\u4e49\u662f\u4eceM\u6a21\u5f0f\u7684Trap\u4e0b\u8fd4\u56de\uff0c\u5728\u672c\u6b21\u5b9e\u9a8c\u4e2d\uff0c\u6211\u4eec\u53ea\u5b9e\u73b0M\u6a21\u5f0f\uff0c\u56e0\u6b64\u65e0\u9700\u8003\u8651\u6240\u5904\u6a21\u5f0f\u7684\u53d8\u5316\uff0c\u5728\u6267\u884c\u6307\u4ee4 mret \u540e\u4f1a\u4eceTrap\u4e2d\u8fd4\u56de\u5230\u6b63\u5e38\u7684\u4ee3\u7801\u6267\u884c\u6d41\u4e2d\uff0c\u5373\u5bc4\u5b58\u5668 mepc \u6240\u50a8\u5b58\u7684\u5730\u5740\u3002\uff08\u8bf7\u601d\u8003\u5f53\u53d1\u751f\u5f02\u5e38\u548c\u4e2d\u65ad\u65f6\uff0c\u8fd4\u56de\u5730\u5740\u6709\u4ec0\u4e48\u533a\u522b\uff09 \u63d0\u793a\uff1a\u5728 csrr[w/s/c][i] \u6307\u4ee4\u4e2d\u4f1a\u51fa\u73b0\u6570\u636e\u5192\u9669\uff0c\u8fd9\u91cc\u63a8\u8350\u4f7f\u7528 stall \u7684\u65b9\u5f0f\u5904\u7406\u76f8\u5e94\u7684\u5192\u9669\u3002 4.5 \u589e\u52a0\u5f02\u5e38\u5904\u7406\u903b\u8f91 \u5f02\u5e38\u5904\u7406\u903b\u8f91\u4e0e\u63a7\u5236\u8df3\u8f6c\u7c7b\u4f3c\uff0c\u76f8\u4f3c\u70b9\u662f\u4ee5\u6d41\u6c34\u7ebf\u5185\u90e8\u7684\u89c6\u89d2\u6765\u770b\u90fd\u662f\u8df3\u8f6c\u5230\u4e00\u4e2a\u5730\u5740\u7ee7\u7eed\u6267\u884c\uff0c\u53ea\u4e0d\u8fc7\u5f02\u5e38\u662f\u8df3\u8f6c\u5230mtvec\u5bc4\u5b58\u5668\u6240\u5728\u7684\u5730\u5740\uff0c\u4e0d\u540c\u4e4b\u5904\u5728\u4e8eCSR\u6a21\u5757\u5185\u90e8\u7684\u5904\u7406\uff0c\u5f02\u5e38\u4f1a\u5bfc\u81f4\u76f8\u5173\u7684CSR\u5bc4\u5b58\u5668\u72b6\u6001\u53d1\u751f\u53d8\u5316\u3002\u5728\u672c\u6b21\u5b9e\u9a8c\u4e2d\uff0c\u6211\u4eec\u53ea\u5b9e\u73b0M\u6a21\u5f0f\uff0c\u4ee5\u53ca\u6700\u57fa\u672c\u7684\u4e09\u4e2aCSR\u5bc4\u5b58\u5668\uff0c\u5f53\u53d1\u751f ecall \u5f02\u5e38\u65f6\uff0c\u4f1a\u5bfc\u81f4 mepc \u5bc4\u5b58\u5668\u53d1\u751f\u53d8\u5316\uff0c\u5f53\u6267\u884c mret \u65f6\uff0c\u9700\u8981\u8fd4\u56de mepc \u6240\u6307\u5411\u7684\u5730\u5740\u3002 \u8fd9\u91cc\u8981\u6ce8\u610f\u5f02\u5e38\u7684\u673a\u5236\u8bbe\u8ba1\uff0c\u5148\u601d\u8003\u597d\u5f02\u5e38\u5728\u54ea\u4e2a\u9636\u6bb5\u5224\u65ad\uff0c\u5728\u5f02\u5e38\u53d1\u751f\u65f6\u54ea\u4e9b\u6307\u4ee4\u5e94\u8be5\u88ab\u6267\u884c\uff0c\u54ea\u4e9b\u6307\u4ee4\u4e0d\u8be5\u88ab\u6267\u884c\uff0c\u4ee5\u53ca\u6d41\u6c34\u7ebf\u7684\u5237\u65b0\uff0c\u4f20\u9012\u7b49\u95ee\u9898\u3002 CSR\u6a21\u5757\u7684\u57fa\u672c\u529f\u80fd\u662f\u5bf9CSR\u5bc4\u5b58\u5668\u8fdb\u884c\u8bfb\u5199\uff0c\u9700\u8981\u7684\u63a5\u53e3\u5373\u4e3a csr_write \u4f7f\u80fd, addr CSR\u7f16\u53f7, din, dout \u6570\u636e\u7aef\u53e3\u3002\u8003\u8651\u5230 ecall \u547d\u4ee4\u6267\u884c\u65f6\u9700\u8981\u8df3\u8f6c\u5230 mtvec \u5e76\u5c06\u5f53\u524d\u7684 pc \u5199\u5165 mepc \uff0c\u56e0\u6b64\u8fd8\u9700\u8981 ecall \u4fe1\u53f7\u7aef\u53e3\uff0c pc \u8f93\u5165\u7aef\u53e3\u548c mepc \u5199\u7aef\u53e3\uff0c\u5982\u679c\u5b9e\u73b0\u4e86\u9ad8\u9636\u7684\u529f\u80fd\u5219\u8fd8\u9700\u8981\u589e\u52a0 mcause \u7684\u5199\u7aef\u53e3\u3002 4.6 \u6ce2\u5f62\u4eff\u771f\u8c03\u8bd5 \u672c\u6b21\u5b9e\u9a8c\u4e2d\u6211\u4eec\u5c06\u6d4b\u8bd5\u6587\u4ef6\u7684\u6307\u4ee4\u6570\u63d0\u5347\u4e86\u82e5\u5e72\u500d\uff0c\u4e5f\u4f7f\u5f97\u8c03\u8bd5\u96be\u5ea6\u589e\u5927\u4e86\u8bb8\u591a\uff0c\u6211\u4eec\u7ed9\u51fa\u4ee5\u4e0b\u51e0\u70b9\u53c2\u8003\u5efa\u8bae\uff1a \u63a8\u8350\u5148\u7406\u89e3\u7a0b\u5e8f\u7684\u6267\u884c\u8fc7\u7a0b\uff0c\u518d\u5f00\u59cb\u5b9e\u9a8c\uff0c\u7531\u4e8e COUNTER_INIT \u7684\u503c\u8f83\u5927\uff0c\u56e0\u6b64\u6ce2\u5f62\u53ef\u80fd\u4f1a\u5f88\u957f\uff0c\u53ef\u4ee5\u5728\u4eff\u771f\u65f6\u5c06 Vivado \u4e2d\u6307\u5b9a\u8fd0\u884c\u65f6\u95f4\u589e\u52a0\u5230\u4e00\u4e2a\u8f83\u5927\u7684\u503c\uff0c\u5982 10,000 us\uff0c\u7136\u540e\u6bcf\u6b21\u8fd0\u884c\u76f8\u5e94\u7684\u65f6\u95f4\uff0c\u5173\u6ce8 gp \u5bc4\u5b58\u5668\u7684\u503c\u662f\u5426\u5982\u9884\u671f\u7684\u53d8\u5316\u3002 \u5b9e\u9a8c\u4e2d csr[c/s/w] \u6307\u4ee4\u8f83\u5c11\uff0c\u5728\u8c03\u8bd5\u65f6\u53ef\u4ee5\u5148\u5173\u6ce8 _start \u51fd\u6570\u4e2d\u8be5\u6307\u4ee4\u7684\u6b63\u786e\u6027\u3002 \u5728\u8c03\u8bd5\u65f6\u53ef\u4ee5\u624b\u52a8\u8ddf\u8e2a\u7b2c\u4e00\u6b21\u7531task0\u5207\u6362\u5230task1\u7684\u5168\u8fc7\u7a0b\uff0c\u8fd9\u4e2a\u8fc7\u7a0b\u4e0d\u7b97\u7279\u522b\u957f\uff0c\u53ef\u4ee5\u624b\u52a8\u67e5\u770b\u6267\u884c\u6d41\u4e0e\u5173\u952e\u5bc4\u5b58\u5668\u7684\u503c\uff0c\u8fd9\u91cc\u6bd4\u8f83\u91cd\u8981\u7684\u5bc4\u5b58\u5668\u662f a5 \uff0c\u5728\u6267\u884c\u5230\u51fd\u6570 proc \u4e2d\u65f6\uff0c a5 \u5bc4\u5b58\u5668\u5b58\u50a8\u7684\u662f current->counter \uff0c\u53ef\u4ee5\u901a\u8fc7 a5 \u7684\u53d8\u5316\u5927\u81f4\u89c2\u5bdf\u5230\u7a0b\u5e8f\u8fd0\u884c\u8fc7\u7a0b\u3002\u786e\u4fdd\u4e0a\u8ff0\u8fc7\u7a0b\u6b63\u786e\u540e\u518d\u6dfb\u52a0 gp \u5bc4\u5b58\u5668\u67e5\u770b\uff0c gp \u5bc4\u5b58\u5668\u5b58\u50a8\u7684\u662f 0x100 + task_id \uff0c\u89c2\u5bdf\u662f\u5426\u662f\u4ece\u5c0f\u5230\u5927\u5faa\u73af\u53d8\u5316\uff0c\u5373\u53ef\u9a8c\u8bc1\u4eff\u771f\u662f\u5426\u901a\u8fc7\u3002 \u5b9e\u73b0\u65f6\u9700\u8981\u540c\u5b66\u4eec\u8003\u8651RAM\u7684\u5927\u5c0f\u95ee\u9898\uff0c\u672c\u6b21\u5b9e\u9a8c\u7684\u6570\u636e\u6bb5\u5730\u5740\u4f4d\u4e8e [0x500, 0x500 + 0x100 * task_id] \uff0c\u9700\u8981\u6269\u5927RAM\u7684\u5927\u5c0f\uff0c\u8bf7\u540c\u5b66\u4eec\u8c03\u6574\u597d\u76f8\u5173\u7684\u5bbd\u5ea6\u95ee\u9898\u3002 \u6ce8\u610f\u5728\u8fdb\u7a0b\u7b2c\u4e00\u6b21\u88ab\u8c03\u5ea6\u65f6\u4e0d\u4f1a\u4fee\u6539 gp \u7684\u503c\u3002 5 \u5b9e\u9a8c\u6b65\u9aa4\uff08\u8fdb\u9636\uff09 5.1 \u51c6\u5907\u5de5\u4f5c \u5c06 kernel.sim \u6362\u6210 build-advance \u4e0b\u7684\u6587\u4ef6\u5373\u53ef\u3002\u8fdb\u9636\u7248\u5728 counter = 0x555 \u65f6\u4f1a\u6267\u884c\u4e00\u6761\u672a\u5b9a\u4e49\u6307\u4ee4\uff0c\u89e6\u53d1\u5f02\u5e38\u540e kernel \u4f1a\u901a\u8fc7\u8f6f\u4ef6\u5c06 gp \u7684\u503c\u6539\u5199\u4e3a mcause \u7684\u503c\uff0c\u5373\u4e0d\u9700\u8981\u901a\u8fc7\u786c\u4ef6\u5b9e\u73b0\u8fd9\u4e00\u8981\u6c42\uff0c\u53ea\u9700\u8981\u5b9e\u73b0\u65b0\u589e\u7684CSR\u5bc4\u5b58\u5668\u548c\u5f02\u5e38\u5224\u65ad\u903b\u8f91\u5373\u53ef\u3002 5.2 \u589e\u52a0 CSR \u5bc4\u5b58\u5668 mcause(Machine Cause Register)\u5bc4\u5b58\u5668\u4fdd\u5b58\u4e86\u53d1\u751f\u5f02\u5e38\u7684\u539f\u56e0\uff0c\u5f53\u53d1\u751f\u4e86\u53d8\u5316\u4e3aM\u6a21\u5f0f\u5904\u7406\u7684\u5f02\u5e38\u65f6\uff0cmcause\u5bc4\u5b58\u5668\u5e94\u5f53\u5199\u5165\u53d1\u751f\u5f02\u5e38\u7684\u539f\u56e0\uff0c\u5728privileged\u624b\u518c\u4e2d\u53ef\u4ee5\u67e5\u770bRISCV\u5bf9\u4e0d\u540c\u7684 Interrupt \u548c Exception \u89c4\u5b9a\u7684\u7f16\u53f7\u3002 5.3 \u589e\u52a0\u5f02\u5e38\u5904\u7406\u903b\u8f91 illegal instruction\uff1a\u5f53\u8bfb\u53d6\u5230\u975e\u6cd5\u6307\u4ee4\u65f6\uff0c\u89e6\u53d1\u8be5\u5f02\u5e38\uff0c\u8df3\u8f6c\u81f3mtvec\uff0c\u4fdd\u5b58mepc\u548cmcause\u3002 6 \u9a8c\u6536\u4e0e\u63d0\u4ea4\u8981\u6c42 \u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u672c\u6b21\u4f5c\u4e1a\u662f\u786c\u4ef6\u5b9e\u9a8c\uff0c\u56e0\u6b64 \u9700\u8981 \u9a8c\u6536\u3002\u9a8c\u6536\u65f6\u8bf7\u5c06 gp \u5bc4\u5b58\u5668\u548c pc \u7684\u503c\u8f93\u51fa\u5230\u677f\u5b50\u4e0a\uff0c\u65b9\u4fbf\u6211\u4eec\u67e5\u770b\u3002\u800c\u5728\u5b66\u5728\u6d59\u5927\u4e0a\u7684\u63d0\u4ea4\u4e0e\u4e4b\u524d\u786c\u4ef6\u5b9e\u9a8c\u4e00\u81f4\u53ea\u9700\u8981\u5b9e\u9a8c\u62a5\u544a\u5373\u53ef\uff0c\u65e0\u9700\u63d0\u4ea4\u4ee3\u7801\u3002\u9a8c\u6536\u7684\u4e24\u79cd\u8981\u6c42\u5982\u4e0b \u57fa\u672c\u8981\u6c42\uff1a\u5b9e\u73b0M\u7279\u6743\u6001\uff0c\u589e\u52a0\u6307\u4ee4 ecall, mret, csr/[s/w/c/] \uff0c\u589e\u52a0CSR\u5bc4\u5b58\u5668 mtvec, mepc, mstatus \uff0c\u5b9e\u73b0\u5f02\u5e38\u673a\u5236\uff08\u53ef\u4ee5\u62ff\u5230\u5168\u90e8\u5206\u6570\uff09 \u9ad8\u9636\u8981\u6c42\uff1a\u7f16\u8bd1\u8fd0\u884cADVANCE kernel\uff0c\u589e\u52a0CSR\u5bc4\u5b58\u5668 mcause \uff0c\u589e\u52a0 illegal instruction \u5f02\u5e38\uff08\u53ef\u4ee5\u62ff\u5230\u5168\u90e8\u5206\u6570\u548c\u989d\u5916\u7684 bonus\uff09 \u7531\u4e8e\u75ab\u60c5\u539f\u56e0\uff0c\u672c\u6b21\u7684\u9a8c\u6536\u5c06\u4f1a\u91c7\u7528\u7ebf\u4e0a\u9a8c\u6536\u7684\u65b9\u5f0f\u8fdb\u884c\uff0c\u5927\u5bb6\u79c1\u6233\u4efb\u4f55\u4e00\u4f4d\u52a9\u6559\u5373\u53ef\uff0c\u5177\u4f53\u8981\u6c42\u5982\u4e0b\uff1a \u9996\u5148\u8bf4\u660e\u4f60\u662f\u5426\u505a\u4e86 bonus \uff0c\u7136\u540e\u62cd\u6444\u4e0a\u677f\u7684\u89c6\u9891\uff0c\u5f00\u542f\u8fde\u7eed\u8fd0\u884c\u6a21\u5f0f\uff08\u5373\u5c06 switch[15] \u62e8\u4e0a\u53bb\uff09\uff0c\u9996\u5148\u5c55\u793a pc \u7684\u53d8\u5316\u60c5\u51b5\uff08\u5927\u6982\u5341\u51e0\u79d2\uff09\uff0c\u7136\u540e\u505c\u6b62\u8fde\u7eed\u8fd0\u884c\u6a21\u5f0f\u5e76\u6309\u4e0b reset \u952e\uff0c\u63a7\u5236\u677f\u5b50\u8f93\u51fa gp \u5bc4\u5b58\u5668\u7684\u503c\uff0c\u518d\u5f00\u542f\u8fde\u7eed\u8fd0\u884c\u6a21\u5f0f\uff0c\u5c55\u793a gp \u5bc4\u5b58\u5668\u53d8\u5316\u7684\u60c5\u51b5\uff08\u5927\u6982\u5341\u51e0\u79d2\uff09\u3002\u4e0a\u677f\u89c6\u9891\u5230\u6b64\u7ed3\u675f \u7136\u540e\u8bf7\u5f55\u5236\u4e00\u4e2a\u8bb2\u89e3\u4ee3\u7801\u5b9e\u73b0\u7684\u89c6\u9891\uff0c\u8bf7\u4f7f\u7528\u76f8\u5e94\u7684\u5f55\u5c4f\u8f6f\u4ef6\u5f55\u5236\u81ea\u5df1\u7684\u5c4f\u5e55\uff08\u8bf7\u4e0d\u8981\u4f7f\u7528\u624b\u673a\u62cd\u6444\u7535\u8111\u5c4f\u5e55\uff09\uff0c\u5e76\u7ed3\u5408\u81ea\u5df1\u7684\u4ee3\u7801\u8bb2\u8bb2\u81ea\u5df1\u7684\u5927\u81f4\u5b9e\u73b0\u8fc7\u7a0b\uff08\u4e5f\u53ef\u4ee5\u901a\u8fc7\u753b\u56fe\u7684\u65b9\u5f0f\u8f85\u52a9\u8bb2\u89e3\uff09\u3002\u8bf7\u4fdd\u8bc1\u81ea\u5df1\u7684\u8bb2\u89e3\u6e05\u695a\u4e14\u5b8c\u6574\uff0c\u5426\u5219\u6211\u4eec\u53ef\u80fd\u4f1a\u901a\u8fc7\u8bed\u97f3\u901a\u8bdd\u5e76\u8981\u6c42\u5171\u4eab\u5c4f\u5e55\u7684\u65b9\u5f0f\u8fdb\u884c\u63d0\u95ee\u3002 \u5982\u679c\u5b9e\u5728\u6ca1\u6709\u5f55\u5236\u6761\u4ef6\uff0c\u4e5f\u53ef\u628a\u81ea\u5df1\u7684\u4ee3\u7801\u622a\u56fe\u53d1\u7ed9\u6211\u4eec\uff0c\u6211\u4eec\u4f1a\u9488\u5bf9\u4f60\u7684\u4ee3\u7801\u8fdb\u884c\u76f8\u5e94\u7684\u63d0\u95ee\uff0c\u5982\u679c\u80fd\u51c6\u786e\u4e14\u53ca\u65f6\u7684\u56de\u7b54\u51fa\u95ee\u9898\u5373\u53ef\u901a\u8fc7\u9a8c\u6536\u3002 \u9664\u6b64\u4e4b\u5916\uff0c\u518d\u6b21\u63d0\u9192\u5b9e\u9a8c\u62a5\u544a\u4e2d \u9700\u8981 \u5bf9\u4eff\u771f\u7684\u7ed3\u679c\u8fdb\u884c\u622a\u56fe\u5e76\u4f5c\u4ee5\u7b80\u8981\u7684\u8bf4\u660e\uff0c\u5426\u5219\u53ef\u80fd\u4f1a\u88ab\u6263\u53bb\u76f8\u5e94\u7684\u5206\u6570","title":"\u5b9e\u9a8c\u6307\u5bfc\u4e03"},{"location":"lab7/#7","text":"","title":"\u5b9e\u9a8c 7\uff1a\u7efc\u5408\u5b9e\u9a8c"},{"location":"lab7/#1","text":"\u5b66\u4e60 OS \u5728\u786c\u4ef6\u5c42\u9762\u7684\u62bd\u8c61 \u5b8c\u5584\u81ea\u5df1\u7684 CPU Core\uff0c\u8fd0\u884c\u8d77\u4e00\u4e2a\u7b80\u6613 ELF \u7a0b\u5e8f\uff1aNaive Kernel","title":"1 \u5b9e\u9a8c\u76ee\u7684"},{"location":"lab7/#2","text":"HDL \uff1aVerilog IDE \uff1aVivado \u5f00\u53d1\u677f \uff1aNexys A7 \u8f6f\u4ef6\u8f85\u52a9\u73af\u5883 \uff1aUbuntu 20.04, 22.04","title":"2 \u5b9e\u9a8c\u73af\u5883"},{"location":"lab7/#3","text":"\u5728\u7cfb\u7edf\u4e8c\u8d2f\u901a\u8bfe\u7a0b\u7684\u5b66\u4e60\u4e2d\uff0c\u6211\u4eec\u65e2\u5b66\u4e60\u4e86\u786c\u4ef6\u7cfb\u7edf\uff08\u4f53\u7cfb\u7ed3\u6784\uff09\u4e5f\u5b66\u4e60\u4e86\u8f6f\u4ef6\u7cfb\u7edf\uff08\u64cd\u4f5c\u7cfb\u7edf\uff09\u3002\u5728\u8fd9\u6700\u540e\u4e00\u4e2a\u5b9e\u9a8c\u4e2d\uff0c\u6211\u4eec\u8981\u5c1d\u8bd5\u5c06\u4e00\u4e2a\u7b80\u6613\u7684 32 \u4f4d ELF \u7a0b\u5e8f\uff1aNaive Kernel \u8fd0\u884c\u5728\u81ea\u5df1\u7f16\u5199\u7684 CPU Core \u4e0a\u3002 Naive Kernel\u4ee3\u7801\uff0c\u5b9e\u73b0\u7684\u529f\u80fd\u7c7b\u4f3c\u4e8e lab6 \u4e2d\u7684\u5185\u5bb9\uff0c\u521d\u59cb\u5316\u591a\u4e2a\u8fdb\u7a0b\uff0c\u5f85\u65f6\u95f4\u7247\u8017\u5c3d\u540e\u8fdb\u884c\u8c03\u5ea6\uff0c\u5728\u57fa\u7840\u8981\u6c42\u4e2d\u53ea\u4f1a\u53d1\u751f\u8c03\u5ea6\u5bfc\u81f4\u7684\u5f02\u5e38\uff0c\u6309\u7167 lab6 \u4e2d\u7684\u8c03\u5ea6\u903b\u8f91 trap_handler -> traps -> schedule -> switch_to -> __switch_to \u987a\u5e8f\u6267\u884c\u3002 \u4e3a\u4e86\u964d\u4f4e\u5b9e\u9a8c\u96be\u5ea6\uff0cNaive Kernel \u5e76\u4e0d\u80fd\u7b97\u5f97\u4e0a\u4e00\u4e2a \u771f\u6b63 \u7684\u64cd\u4f5c\u7cfb\u7edf\uff0c\u6bd4\u5982\uff1a Naive Kernel \u53ea\u6709\u4e00\u4e2a\u7279\u6743\u6001\uff08Machine Mode\uff09 Naive Kernel \u7684\u4e2d\u65ad\u6808\u662f\u6bcf\u4e2a\u8fdb\u7a0b\u81ea\u5df1\u7ef4\u62a4\u7684 Naive Kernel \u8fdb\u7a0b\u51fa\u8ba9\u65f6\u95f4\u7247\u7684\u65b9\u5f0f\u662f\u81ea\u5df1\u51cf\u5c11\u8fdb\u7a0b\u7279\u6709\u7684 Counter\uff0c\u800c\u5e76\u4e0d\u662f\u901a\u8fc7\u5916\u90e8\u7684\u65f6\u949f\u4e2d\u65ad ... Naive Kernel \u4e0d\u4f7f\u7528\u4e32\u53e3\u6216\u5176\u4ed6\u534f\u8bae\u4e0e\u5916\u754c\u901a\u4fe1\uff0c\u800c\u662f\u4f7f\u7528 gp \u5bc4\u5b58\u5668\u6765\u6807\u5fd7\u5f53\u524d\u7684\u8fd0\u884c\u72b6\u6001\uff1a \u5f53\u8fdb\u7a0b\u5207\u6362\u540e\uff0cgp \u7684\u503c\u66f4\u65b0\u4e3a 0x100 + task-id \u5f53\u5904\u7406\u4e86 unimp \u6307\u4ee4\u5e26\u6765\u7684 Illegal Instruction \u5f02\u5e38\u540e\uff0cgp \u7684\u503c\u66f4\u65b0\u4e3a mcause \u7684\u503c\uff08\u8fdb\u9636\u7248\uff09","title":"3 \u80cc\u666f\u4ecb\u7ecd"},{"location":"lab7/#4","text":"\u9996\u5148\u9700\u8981\u6e05\u695a\uff0c\u672c\u6b21\u7684\u5b9e\u9a8c\u7684\u4e3b\u8981\u5de5\u4f5c\u662f\u57fa\u4e8e\u6211\u4eec\u5728 lab2 \u4e2d\u5b8c\u6210\u7684\u6d41\u6c34\u7ebf CPU \u8fdb\u884c\u7684\u3002","title":"4 \u5b9e\u9a8c\u6b65\u9aa4"},{"location":"lab7/#41","text":"\u9996\u5148\u4ece\u4ed3\u5e93\u4e2d\u540c\u6b65\u5982\u4e0b\u4ee3\u7801 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 lab7 \u251c\u2500\u2500 kernel \u2502 \u251c\u2500\u2500 Makefile \u2502 \u251c\u2500\u2500 build-advance \u2502 \u2502 \u251c\u2500\u2500 head.o \u2502 \u2502 \u251c\u2500\u2500 kernel.bin \u2502 \u2502 \u251c\u2500\u2500 kernel.coe \u2502 \u2502 \u251c\u2500\u2500 kernel.dump \u2502 \u2502 \u251c\u2500\u2500 kernel.elf \u2502 \u2502 \u251c\u2500\u2500 kernel.sim \u2502 \u2502 \u251c\u2500\u2500 main.o \u2502 \u2502 \u2514\u2500\u2500 sim.elf \u2502 \u251c\u2500\u2500 build-normal \u2502 \u2502 \u251c\u2500\u2500 head.o \u2502 \u2502 \u251c\u2500\u2500 kernel.bin \u2502 \u2502 \u251c\u2500\u2500 kernel.coe \u2502 \u2502 \u251c\u2500\u2500 kernel.dump \u2502 \u2502 \u251c\u2500\u2500 kernel.elf \u2502 \u2502 \u251c\u2500\u2500 kernel.sim \u2502 \u2502 \u251c\u2500\u2500 main.o \u2502 \u2502 \u2514\u2500\u2500 sim.elf \u2502 \u251c\u2500\u2500 head.S \u2502 \u251c\u2500\u2500 kernel.lds \u2502 \u251c\u2500\u2500 main.c \u2502 \u251c\u2500\u2500 main.h \u2502 \u2514\u2500\u2500 sim.lds \u2514\u2500\u2500 memory \u251c\u2500\u2500 myRam.v \u2514\u2500\u2500 myRom.v \u5728 lab7 \u4e0b\u6709\u4e24\u4e2a\u5b50\u6587\u4ef6\u5939\uff0c\u5176\u4e2d memory \u662f\u8981\u6dfb\u52a0\u5728 Vivado \u5de5\u7a0b\u4e2d\u7684 .v \u6587\u4ef6\uff0c kernel \u5219\u662f\u8981\u8fd0\u884c\u5728\u6211\u4eec\u81ea\u5df1\u7f16\u5199\u7684 CPU Core \u4e0a\u7684\u7a0b\u5e8f memory/myRom.v \u6587\u4ef6\u7684\u5185\u5bb9\u5982\u4e0b\u6240\u793a 1 2 3 4 5 6 7 8 9 10 11 12 13 module myRom ( input [ 10 : 0 ] address , output [ 31 : 0 ] out ); reg [ 31 : 0 ] rom [ 0 : 2047 ]; localparam FILE_PATH = \"kernel.sim\" ; // \u4fee\u6539\u4e3a\u4f60\u7684 kernel.sim \u7684\u8def\u5f84 initial begin $readmemh ( FILE_PATH , rom ); end assign out = rom [ address ]; endmodule \u4e4b\u524d\u6211\u4eec\u91c7\u7528\u7684\u662f\u901a\u8fc7 .coe \u6587\u4ef6\u7684\u65b9\u5f0f\u6765\u5b8c\u6210 IP \u6838\u4e2d\u7684\u6570\u636e\u88c5\u8f7d\uff0c\u4f46\u4e8b\u5b9e\u4e0a\uff0c .coe \u6587\u4ef6\u4e0d\u591f\u7075\u6d3b\uff0c\u6bcf\u6b21\u4fee\u6539 .coe \u6587\u4ef6\uff0c\u90fd\u8981\u91cd\u65b0\u751f\u4ea7 IP \u6838\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u5728\u672c\u6b21\u5b9e\u9a8c\u4e2d\u5c06\u91c7\u7528 $readmemh \u7cfb\u7edf\u51fd\u6570\u521d\u59cb\u5316\u6307\u4ee4\u6570\u636e\uff0c\u5e76\u91c7\u7528\u5bc4\u5b58\u5668\u6570\u7ec4\u4ee3\u66ff\u539f\u6765\u7684 IP \u6838\u3002\u8fd9\u6837\uff0c\u6bcf\u6b21\u9700\u8981\u52a0\u8f7d\u65b0\u7684\u6587\u4ef6\u65f6\uff0c\u6211\u4eec\u53ea\u9700\u5bf9\u53d8\u91cf FILE_PATH \u4fee\u6539\u4e3a\u76f8\u5e94\u7684\u8def\u5f84\u5373\u53ef\u3002 $readmemh \u4f1a\u81ea\u52a8\u4ece\u76f8\u5e94\u7684\u6587\u4ef6\u4e2d\u52a0\u8f7d\u6700\u65b0\u7684\u6570\u636e\u3002 \u8bf7\u5728\u5de5\u7a0b\u7684\u9002\u5f53\u4f4d\u7f6e\u6dfb\u52a0\u5982\u4e0b\u4ee3\u7801\uff0c\u7528\u4e8e\u5c06 myRom \u5b9e\u4f8b\u5316\uff0c\u5e76\u5c06\u539f\u6765\u7684\u7528 Block Memory Generator \u751f\u6210\u7684 IP \u6838\u7684\u5b9e\u4f8b\u5316\u4ee3\u7801\u6ce8\u91ca\u6389 1 2 3 4 myRom rom_unit ( . address ( pc_out [ 12 : 2 ]), . out ( inst ) ); \u9664\u6b64\u4e4b\u5916\uff0c\u8bf7\u4eff\u7167\u4e0a\u8ff0\u8fc7\u7a0b\u5c06 memory/myRam.v \u4e5f\u6dfb\u52a0\u5230\u9879\u76ee\u4e2d\u3002 \u800c\u5728 kernel \u6587\u4ef6\u5939\u4e0b build-advance \u548c build-normal \u5206\u522b\u662f\u505a bonus \u548c\u4e0d\u505a bonus \u7f16\u8bd1\u51fa\u7684\u6587\u4ef6\u3002\u8bf7\u5c06 build-normal \u76ee\u5f55\u4e0b\u7684 kernel.sim \u52a0\u8f7d\u5230\u7a0b\u5e8f\u4e2d\uff0c\u800c\u76f8\u5e94\u7684\u6c47\u7f16\u6587\u4ef6\u6211\u4eec\u53ef\u4ee5\u67e5\u770b kernel.dump \u800c head.S , main.c , main.h \u5219\u662f\u7a0b\u5e8f\u7684\u6e90\u4ee3\u7801\uff0c\u8bf7\u540c\u5b66\u4eec\u5728\u5b9e\u9a8c\u5f00\u59cb\u524d\u52a1\u7406\u89e3\u6e90\u4ee3\u7801\u3002 \u5728\u7f16\u8bd1\u5f97\u5230\u7684\u4ee3\u7801\u4e2d\u53ef\u80fd\u4f1a\u51fa\u73b0\u6211\u4eec\u4e4b\u524d\u6ca1\u6709\u8981\u6c42\u5b9e\u73b0\u7684\u6307\u4ee4\uff0c\u5982 auipc \uff0c\u9700\u8981\u540c\u5b66\u4eec\u6839\u636e\u5b9e\u9645\u60c5\u51b5\u5728\u672c\u6b21\u5b9e\u9a8c\u4e2d\u8865\u8db3\uff0c\u76f8\u5e94\u7684\u6307\u4ee4\u8bf7\u53c2\u8003 spec \u624b\u518c\u5b9e\u73b0\u3002 \u7531\u4e8e\u4e0a\u677f\u548c QEMU \u8c03\u8bd5 Naive Kernel \u9700\u8981\u4e0d\u540c\u7684\u5185\u5b58\u8d77\u59cb\u5730\u5740\uff08\u4e0a\u677f\u7684\u5730\u5740\u4ece 0x0 \u5f00\u59cb\uff0cQEMU \u8c03\u8bd5\u7684\u5730\u5740\u4ece 0x80000000 \u5f00\u59cb\uff09\uff0c\u6211\u4eec\u901a\u8fc7 lds \u6587\u4ef6\u63a7\u5236\u4e86\u52a0\u8f7d\u5730\u5740\u3002\u5728\u76f8\u5e94 build \u6587\u4ef6\u5939\u4e0b\u7684 sim.elf \u662f\u4f9b QEMU \u8c03\u8bd5\u7528\u7684 ELF\u3002 \u7531\u4e8e\u672c\u6b21\u5b9e\u9a8c\u7684\u4ee3\u7801\u91cf\u8f83\u5927\uff0c\u8c03\u8bd5\u8d77\u6765\u4f1a\u6709\u4e00\u5b9a\u96be\u5ea6\uff0c\u5efa\u8bae\u540c\u5b66\u4eec\u5728\u51fa\u73b0\u95ee\u9898\u65f6\u4ece\u67d0\u4e00\u6761\u6216\u8005\u67d0\u4e00\u7c7b\u6307\u4ee4\u53ef\u80fd\u51fa\u9519\u5206\u6790\uff0c\u4e00\u5b9a\u8981\u5148\u786e\u4fdd\u8981\u6c42\u5b9e\u73b0\u7684\u6307\u4ee4\u90fd\u53ef\u4ee5\u6b63\u5e38\u6267\u884c\uff0c\u518d\u8ddf\u8e2a\u6ce2\u5f62\u8c03\u8bd5\u3002","title":"4.1 \u51c6\u5907\u5de5\u4f5c"},{"location":"lab7/#42-qemu","text":"\u7531\u4e8e\u76f8\u5e94\u7684\u5de5\u5177\u94fe\u914d\u7f6e\u8d77\u6765\u5341\u5206\u9ebb\u70e6\uff0c\u56e0\u6b64\u6211\u4eec\u5df2\u7ecf\u5e2e\u5927\u5bb6\u505a\u597d\u4e86\u7f16\u8bd1\u7684\u5de5\u4f5c\uff0c\u4f46\u662f\uff0c\u6211\u4eec\u4ecd\u7136\u53ef\u4ee5\u5229\u7528 QEMU \u8fdb\u884c\u8c03\u8bd5 Naive Kernel \u4e0d\u9700\u8981\u4f7f\u7528 OpenSBI \u4f5c\u4e3a Bootloader\uff0c\u56e0\u6b64\u5728 QEMU \u9009\u9879\u4e2d\u4f7f\u7528 -bios \u800c\u975e -kernel \u6765\u52a0\u8f7d ELF \u6587\u4ef6\u3002\u56e0\u6b64\u4e3a\u4e86\u8c03\u8bd5 Naive Kernel\uff0c\u4f7f\u7528\u5982\u4e0b\u547d\u4ee4\uff1a 1 $ qemu-system-riscv32 -nographic -machine virt -bios path/to/sim.elf -S -s \u5176\u4ed6\u6d41\u7a0b\u5747\u4e0e\u4e4b\u524d\u7684\u5b9e\u9a8c\u76f8\u4f3c\u3002","title":"4.2 QEMU \u8fd0\u884c\u4e0e\u8c03\u8bd5"},{"location":"lab7/#43-csr","text":"\u672c\u6b21\u5b9e\u9a8c\u9700\u8981\u65b0\u589e\u81f3\u5c113\u4e2aCSR\u5bc4\u5b58\u5668\uff1amtvec, mepc, mstatus\uff0c\u4ee5\u4fdd\u8bc1\u7a0b\u5e8f\u7684\u6b63\u786e\u6267\u884c\u3002CSR\u5bc4\u5b58\u5668\u7684\u957f\u5ea6\u4e3a MXLEN-bit \uff0c\u5728\u672c\u6b21\u5b9e\u9a8c\u4e2d\u53d6 MXLEN \u7684\u503c\u4e3a 32 \u3002\u6211\u4eec\u63a8\u8350\u5c06CSR\u5bc4\u5b58\u5668\u5c01\u88c5\u5728\u4e00\u4e2a\u72ec\u7acb\u7684CSR\u6a21\u5757\uff08module\uff09\u4e2d\uff0c\u5c06\u5b9e\u73b0\u7684CSR\u5bc4\u5b58\u5668\u901a\u8fc7\u63a5\u53e3\u4e0e\u6d41\u6c34\u7ebfCPU\u8fdb\u884c\u4ea4\u4e92\u3002 \u4e0b\u9762\u662f3\u4e2a\u5bc4\u5b58\u5668\u7684\u7b80\u8981\u4ecb\u7ecd\uff0c\u6211\u4eec\u5728\u5b9e\u9a8c\u4e2d\u53ea\u8981\u6c42\u5b9e\u73b0\u67d0\u4e9b\u5bc4\u5b58\u5668\u7684\u90e8\u5206\u529f\u80fd\uff0c\u5982\u679c\u60f3\u8981\u4e86\u89e3\u5b8c\u6574\u7684\u5904\u7406\u673a\u5236\u53ef\u4ee5\u53c2\u8003\u5b98\u65b9\u624b\u518c\u3002 mtvec(Machine Trap-Vector Base-Address Register)\u5bc4\u5b58\u5668\u662f\u53ef\u8bfb\u53ef\u5199\u5bc4\u5b58\u5668\uff0c\u5b58\u50a8\u5f02\u5e38\u5904\u7406\u4ee3\u7801\u7684\u5730\u5740\uff0c\u672c\u6b21\u5b9e\u9a8c\u53ea\u9700\u8981\u5b9e\u73b0 Direct \u6a21\u5f0f\uff0c\u5373\u53d1\u751f\u5f02\u5e38\u65f6\u8df3\u8f6c\u5230mtvec\u6240\u6307\u5411\u7684\u5730\u5740\u8fdb\u884c\u5904\u7406\u3002 mepc(Machine Exception Program Counter)\u5bc4\u5b58\u5668\u662f\u53ef\u8bfb\u53ef\u5199\u5bc4\u5b58\u5668\uff0c\u5b58\u50a8\u53d1\u751f\u5f02\u5e38\u65f6\u7684\u5730\u5740\u3002 mstatus(Machine Status Register)\u5bc4\u5b58\u5668\u662f\u53ef\u8bfb\u53ef\u5199\u5bc4\u5b58\u5668\uff0c\u5b58\u50a8M\u6a21\u5f0f\u4e0b\u7684\u5f02\u5e38\u76f8\u5173\u7684\u4fe1\u606f\uff0c\u5728\u672c\u6b21\u5b9e\u9a8c\u4e2d\u6211\u4eec\u53ea\u9700\u8981\u5b9e\u73b0\u5176\u4e2d\u7684 MIE(3) \u5373\u53ef\u3002","title":"4.3 \u589e\u52a0 CSR \u5bc4\u5b58\u5668"},{"location":"lab7/#44","text":"csrr[w/s/c][i]\u662f\u5bf9\u4e8eCSR\u5bc4\u5b58\u5668\u8fdb\u884c\u8bfb\u5199\u64cd\u4f5c\u7684\u6307\u4ee4\uff0c\u8fd9\u91cc\u4ee5 csrrw rd, csr, rs \u4e3e\u4f8b\u8bf4\u660e\uff0ccsrrw\u7684\u6307\u4ee4\u542b\u4e49\u662fAtomic Read/Write CSR\uff0c\u539f\u5b50\u5730\u8bfb\u5199CSR\u5bc4\u5b58\u5668\uff0c\u5373\u539f\u5b50\u6027\u5730\u5b8c\u6210 gpr[rd] = csr, csr = gpr[rs] \u4e00\u8bfb\u4e00\u5199\u4e24\u4e2a\u64cd\u4f5c\u3002\u4e0e\u4e4b\u76f8\u7c7b\u4f3c\uff0ccsrrs\u5373set\u64cd\u4f5c gpr[rd] = csr, csr = csr | gpr[rs] \uff0ccsrrc\u5373clear\u64cd\u4f5c gpr[rd] = csr, csr = csr & ~gpr[rs] \uff0c[i]\u5373\u4e3a\u7acb\u5373\u6570\u6307\u4ee4\uff0c\u66f4\u591a\u76f8\u5173\u7684\u7ec6\u8282\u53ef\u4ee5\u53c2\u8003 RISCV\u5b98\u7f51 \u3002 ecall\u6307\u4ee4\u7684\u542b\u4e49\u662f\u5411\u6267\u884c\u73af\u5883\u53d1\u51fa\u8bf7\u6c42\uff0c\u6211\u4eec\u5728 lab4~6 \u4e2d\u5b9e\u73b0\u7684 sbi_ecall \u5c31\u662f\u901a\u8fc7 ecall \u5411\u6743\u9650\u66f4\u9ad8\u7684M\u6a21\u5f0f\u53d1\u9001\u8bf7\u6c42\uff0c\u5b8c\u6210\u7c7b\u4f3c\u4e8e\u6253\u5370\u5b57\u7b26\uff0c\u8bbe\u7f6e\u65f6\u949f\u8ba1\u65f6\u7b49\u3002\u5728\u672c\u6b21\u5b9e\u9a8c\u4e2d\uff0c\u6211\u4eec\u53ea\u5b9e\u73b0M\u6a21\u5f0f\uff0c\u5728\u6267\u884c\u6307\u4ee4 ecall \u540e\u4f1a\u89e6\u53d1\u5f02\u5e38 Environmrnt call from M-mode \uff0c\u9700\u8981\u5bf9\u76f8\u5173\u5bc4\u5b58\u5668\u8fdb\u884c\u8bbe\u7f6e\u5e76\u8df3\u8f6c\u5230\u5f02\u5e38\u5904\u7406\u5730\u5740\u3002 mret\u6307\u4ee4\u7684\u542b\u4e49\u662f\u4eceM\u6a21\u5f0f\u7684Trap\u4e0b\u8fd4\u56de\uff0c\u5728\u672c\u6b21\u5b9e\u9a8c\u4e2d\uff0c\u6211\u4eec\u53ea\u5b9e\u73b0M\u6a21\u5f0f\uff0c\u56e0\u6b64\u65e0\u9700\u8003\u8651\u6240\u5904\u6a21\u5f0f\u7684\u53d8\u5316\uff0c\u5728\u6267\u884c\u6307\u4ee4 mret \u540e\u4f1a\u4eceTrap\u4e2d\u8fd4\u56de\u5230\u6b63\u5e38\u7684\u4ee3\u7801\u6267\u884c\u6d41\u4e2d\uff0c\u5373\u5bc4\u5b58\u5668 mepc \u6240\u50a8\u5b58\u7684\u5730\u5740\u3002\uff08\u8bf7\u601d\u8003\u5f53\u53d1\u751f\u5f02\u5e38\u548c\u4e2d\u65ad\u65f6\uff0c\u8fd4\u56de\u5730\u5740\u6709\u4ec0\u4e48\u533a\u522b\uff09 \u63d0\u793a\uff1a\u5728 csrr[w/s/c][i] \u6307\u4ee4\u4e2d\u4f1a\u51fa\u73b0\u6570\u636e\u5192\u9669\uff0c\u8fd9\u91cc\u63a8\u8350\u4f7f\u7528 stall \u7684\u65b9\u5f0f\u5904\u7406\u76f8\u5e94\u7684\u5192\u9669\u3002","title":"4.4 \u589e\u52a0\u7279\u6743\u6001\u6307\u4ee4"},{"location":"lab7/#45","text":"\u5f02\u5e38\u5904\u7406\u903b\u8f91\u4e0e\u63a7\u5236\u8df3\u8f6c\u7c7b\u4f3c\uff0c\u76f8\u4f3c\u70b9\u662f\u4ee5\u6d41\u6c34\u7ebf\u5185\u90e8\u7684\u89c6\u89d2\u6765\u770b\u90fd\u662f\u8df3\u8f6c\u5230\u4e00\u4e2a\u5730\u5740\u7ee7\u7eed\u6267\u884c\uff0c\u53ea\u4e0d\u8fc7\u5f02\u5e38\u662f\u8df3\u8f6c\u5230mtvec\u5bc4\u5b58\u5668\u6240\u5728\u7684\u5730\u5740\uff0c\u4e0d\u540c\u4e4b\u5904\u5728\u4e8eCSR\u6a21\u5757\u5185\u90e8\u7684\u5904\u7406\uff0c\u5f02\u5e38\u4f1a\u5bfc\u81f4\u76f8\u5173\u7684CSR\u5bc4\u5b58\u5668\u72b6\u6001\u53d1\u751f\u53d8\u5316\u3002\u5728\u672c\u6b21\u5b9e\u9a8c\u4e2d\uff0c\u6211\u4eec\u53ea\u5b9e\u73b0M\u6a21\u5f0f\uff0c\u4ee5\u53ca\u6700\u57fa\u672c\u7684\u4e09\u4e2aCSR\u5bc4\u5b58\u5668\uff0c\u5f53\u53d1\u751f ecall \u5f02\u5e38\u65f6\uff0c\u4f1a\u5bfc\u81f4 mepc \u5bc4\u5b58\u5668\u53d1\u751f\u53d8\u5316\uff0c\u5f53\u6267\u884c mret \u65f6\uff0c\u9700\u8981\u8fd4\u56de mepc \u6240\u6307\u5411\u7684\u5730\u5740\u3002 \u8fd9\u91cc\u8981\u6ce8\u610f\u5f02\u5e38\u7684\u673a\u5236\u8bbe\u8ba1\uff0c\u5148\u601d\u8003\u597d\u5f02\u5e38\u5728\u54ea\u4e2a\u9636\u6bb5\u5224\u65ad\uff0c\u5728\u5f02\u5e38\u53d1\u751f\u65f6\u54ea\u4e9b\u6307\u4ee4\u5e94\u8be5\u88ab\u6267\u884c\uff0c\u54ea\u4e9b\u6307\u4ee4\u4e0d\u8be5\u88ab\u6267\u884c\uff0c\u4ee5\u53ca\u6d41\u6c34\u7ebf\u7684\u5237\u65b0\uff0c\u4f20\u9012\u7b49\u95ee\u9898\u3002 CSR\u6a21\u5757\u7684\u57fa\u672c\u529f\u80fd\u662f\u5bf9CSR\u5bc4\u5b58\u5668\u8fdb\u884c\u8bfb\u5199\uff0c\u9700\u8981\u7684\u63a5\u53e3\u5373\u4e3a csr_write \u4f7f\u80fd, addr CSR\u7f16\u53f7, din, dout \u6570\u636e\u7aef\u53e3\u3002\u8003\u8651\u5230 ecall \u547d\u4ee4\u6267\u884c\u65f6\u9700\u8981\u8df3\u8f6c\u5230 mtvec \u5e76\u5c06\u5f53\u524d\u7684 pc \u5199\u5165 mepc \uff0c\u56e0\u6b64\u8fd8\u9700\u8981 ecall \u4fe1\u53f7\u7aef\u53e3\uff0c pc \u8f93\u5165\u7aef\u53e3\u548c mepc \u5199\u7aef\u53e3\uff0c\u5982\u679c\u5b9e\u73b0\u4e86\u9ad8\u9636\u7684\u529f\u80fd\u5219\u8fd8\u9700\u8981\u589e\u52a0 mcause \u7684\u5199\u7aef\u53e3\u3002","title":"4.5 \u589e\u52a0\u5f02\u5e38\u5904\u7406\u903b\u8f91"},{"location":"lab7/#46","text":"\u672c\u6b21\u5b9e\u9a8c\u4e2d\u6211\u4eec\u5c06\u6d4b\u8bd5\u6587\u4ef6\u7684\u6307\u4ee4\u6570\u63d0\u5347\u4e86\u82e5\u5e72\u500d\uff0c\u4e5f\u4f7f\u5f97\u8c03\u8bd5\u96be\u5ea6\u589e\u5927\u4e86\u8bb8\u591a\uff0c\u6211\u4eec\u7ed9\u51fa\u4ee5\u4e0b\u51e0\u70b9\u53c2\u8003\u5efa\u8bae\uff1a \u63a8\u8350\u5148\u7406\u89e3\u7a0b\u5e8f\u7684\u6267\u884c\u8fc7\u7a0b\uff0c\u518d\u5f00\u59cb\u5b9e\u9a8c\uff0c\u7531\u4e8e COUNTER_INIT \u7684\u503c\u8f83\u5927\uff0c\u56e0\u6b64\u6ce2\u5f62\u53ef\u80fd\u4f1a\u5f88\u957f\uff0c\u53ef\u4ee5\u5728\u4eff\u771f\u65f6\u5c06 Vivado \u4e2d\u6307\u5b9a\u8fd0\u884c\u65f6\u95f4\u589e\u52a0\u5230\u4e00\u4e2a\u8f83\u5927\u7684\u503c\uff0c\u5982 10,000 us\uff0c\u7136\u540e\u6bcf\u6b21\u8fd0\u884c\u76f8\u5e94\u7684\u65f6\u95f4\uff0c\u5173\u6ce8 gp \u5bc4\u5b58\u5668\u7684\u503c\u662f\u5426\u5982\u9884\u671f\u7684\u53d8\u5316\u3002 \u5b9e\u9a8c\u4e2d csr[c/s/w] \u6307\u4ee4\u8f83\u5c11\uff0c\u5728\u8c03\u8bd5\u65f6\u53ef\u4ee5\u5148\u5173\u6ce8 _start \u51fd\u6570\u4e2d\u8be5\u6307\u4ee4\u7684\u6b63\u786e\u6027\u3002 \u5728\u8c03\u8bd5\u65f6\u53ef\u4ee5\u624b\u52a8\u8ddf\u8e2a\u7b2c\u4e00\u6b21\u7531task0\u5207\u6362\u5230task1\u7684\u5168\u8fc7\u7a0b\uff0c\u8fd9\u4e2a\u8fc7\u7a0b\u4e0d\u7b97\u7279\u522b\u957f\uff0c\u53ef\u4ee5\u624b\u52a8\u67e5\u770b\u6267\u884c\u6d41\u4e0e\u5173\u952e\u5bc4\u5b58\u5668\u7684\u503c\uff0c\u8fd9\u91cc\u6bd4\u8f83\u91cd\u8981\u7684\u5bc4\u5b58\u5668\u662f a5 \uff0c\u5728\u6267\u884c\u5230\u51fd\u6570 proc \u4e2d\u65f6\uff0c a5 \u5bc4\u5b58\u5668\u5b58\u50a8\u7684\u662f current->counter \uff0c\u53ef\u4ee5\u901a\u8fc7 a5 \u7684\u53d8\u5316\u5927\u81f4\u89c2\u5bdf\u5230\u7a0b\u5e8f\u8fd0\u884c\u8fc7\u7a0b\u3002\u786e\u4fdd\u4e0a\u8ff0\u8fc7\u7a0b\u6b63\u786e\u540e\u518d\u6dfb\u52a0 gp \u5bc4\u5b58\u5668\u67e5\u770b\uff0c gp \u5bc4\u5b58\u5668\u5b58\u50a8\u7684\u662f 0x100 + task_id \uff0c\u89c2\u5bdf\u662f\u5426\u662f\u4ece\u5c0f\u5230\u5927\u5faa\u73af\u53d8\u5316\uff0c\u5373\u53ef\u9a8c\u8bc1\u4eff\u771f\u662f\u5426\u901a\u8fc7\u3002 \u5b9e\u73b0\u65f6\u9700\u8981\u540c\u5b66\u4eec\u8003\u8651RAM\u7684\u5927\u5c0f\u95ee\u9898\uff0c\u672c\u6b21\u5b9e\u9a8c\u7684\u6570\u636e\u6bb5\u5730\u5740\u4f4d\u4e8e [0x500, 0x500 + 0x100 * task_id] \uff0c\u9700\u8981\u6269\u5927RAM\u7684\u5927\u5c0f\uff0c\u8bf7\u540c\u5b66\u4eec\u8c03\u6574\u597d\u76f8\u5173\u7684\u5bbd\u5ea6\u95ee\u9898\u3002 \u6ce8\u610f\u5728\u8fdb\u7a0b\u7b2c\u4e00\u6b21\u88ab\u8c03\u5ea6\u65f6\u4e0d\u4f1a\u4fee\u6539 gp \u7684\u503c\u3002","title":"4.6 \u6ce2\u5f62\u4eff\u771f\u8c03\u8bd5"},{"location":"lab7/#5","text":"","title":"5 \u5b9e\u9a8c\u6b65\u9aa4\uff08\u8fdb\u9636\uff09"},{"location":"lab7/#51","text":"\u5c06 kernel.sim \u6362\u6210 build-advance \u4e0b\u7684\u6587\u4ef6\u5373\u53ef\u3002\u8fdb\u9636\u7248\u5728 counter = 0x555 \u65f6\u4f1a\u6267\u884c\u4e00\u6761\u672a\u5b9a\u4e49\u6307\u4ee4\uff0c\u89e6\u53d1\u5f02\u5e38\u540e kernel \u4f1a\u901a\u8fc7\u8f6f\u4ef6\u5c06 gp \u7684\u503c\u6539\u5199\u4e3a mcause \u7684\u503c\uff0c\u5373\u4e0d\u9700\u8981\u901a\u8fc7\u786c\u4ef6\u5b9e\u73b0\u8fd9\u4e00\u8981\u6c42\uff0c\u53ea\u9700\u8981\u5b9e\u73b0\u65b0\u589e\u7684CSR\u5bc4\u5b58\u5668\u548c\u5f02\u5e38\u5224\u65ad\u903b\u8f91\u5373\u53ef\u3002","title":"5.1 \u51c6\u5907\u5de5\u4f5c"},{"location":"lab7/#52-csr","text":"mcause(Machine Cause Register)\u5bc4\u5b58\u5668\u4fdd\u5b58\u4e86\u53d1\u751f\u5f02\u5e38\u7684\u539f\u56e0\uff0c\u5f53\u53d1\u751f\u4e86\u53d8\u5316\u4e3aM\u6a21\u5f0f\u5904\u7406\u7684\u5f02\u5e38\u65f6\uff0cmcause\u5bc4\u5b58\u5668\u5e94\u5f53\u5199\u5165\u53d1\u751f\u5f02\u5e38\u7684\u539f\u56e0\uff0c\u5728privileged\u624b\u518c\u4e2d\u53ef\u4ee5\u67e5\u770bRISCV\u5bf9\u4e0d\u540c\u7684 Interrupt \u548c Exception \u89c4\u5b9a\u7684\u7f16\u53f7\u3002","title":"5.2 \u589e\u52a0 CSR \u5bc4\u5b58\u5668"},{"location":"lab7/#53","text":"illegal instruction\uff1a\u5f53\u8bfb\u53d6\u5230\u975e\u6cd5\u6307\u4ee4\u65f6\uff0c\u89e6\u53d1\u8be5\u5f02\u5e38\uff0c\u8df3\u8f6c\u81f3mtvec\uff0c\u4fdd\u5b58mepc\u548cmcause\u3002","title":"5.3 \u589e\u52a0\u5f02\u5e38\u5904\u7406\u903b\u8f91"},{"location":"lab7/#6","text":"\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u672c\u6b21\u4f5c\u4e1a\u662f\u786c\u4ef6\u5b9e\u9a8c\uff0c\u56e0\u6b64 \u9700\u8981 \u9a8c\u6536\u3002\u9a8c\u6536\u65f6\u8bf7\u5c06 gp \u5bc4\u5b58\u5668\u548c pc \u7684\u503c\u8f93\u51fa\u5230\u677f\u5b50\u4e0a\uff0c\u65b9\u4fbf\u6211\u4eec\u67e5\u770b\u3002\u800c\u5728\u5b66\u5728\u6d59\u5927\u4e0a\u7684\u63d0\u4ea4\u4e0e\u4e4b\u524d\u786c\u4ef6\u5b9e\u9a8c\u4e00\u81f4\u53ea\u9700\u8981\u5b9e\u9a8c\u62a5\u544a\u5373\u53ef\uff0c\u65e0\u9700\u63d0\u4ea4\u4ee3\u7801\u3002\u9a8c\u6536\u7684\u4e24\u79cd\u8981\u6c42\u5982\u4e0b \u57fa\u672c\u8981\u6c42\uff1a\u5b9e\u73b0M\u7279\u6743\u6001\uff0c\u589e\u52a0\u6307\u4ee4 ecall, mret, csr/[s/w/c/] \uff0c\u589e\u52a0CSR\u5bc4\u5b58\u5668 mtvec, mepc, mstatus \uff0c\u5b9e\u73b0\u5f02\u5e38\u673a\u5236\uff08\u53ef\u4ee5\u62ff\u5230\u5168\u90e8\u5206\u6570\uff09 \u9ad8\u9636\u8981\u6c42\uff1a\u7f16\u8bd1\u8fd0\u884cADVANCE kernel\uff0c\u589e\u52a0CSR\u5bc4\u5b58\u5668 mcause \uff0c\u589e\u52a0 illegal instruction \u5f02\u5e38\uff08\u53ef\u4ee5\u62ff\u5230\u5168\u90e8\u5206\u6570\u548c\u989d\u5916\u7684 bonus\uff09 \u7531\u4e8e\u75ab\u60c5\u539f\u56e0\uff0c\u672c\u6b21\u7684\u9a8c\u6536\u5c06\u4f1a\u91c7\u7528\u7ebf\u4e0a\u9a8c\u6536\u7684\u65b9\u5f0f\u8fdb\u884c\uff0c\u5927\u5bb6\u79c1\u6233\u4efb\u4f55\u4e00\u4f4d\u52a9\u6559\u5373\u53ef\uff0c\u5177\u4f53\u8981\u6c42\u5982\u4e0b\uff1a \u9996\u5148\u8bf4\u660e\u4f60\u662f\u5426\u505a\u4e86 bonus \uff0c\u7136\u540e\u62cd\u6444\u4e0a\u677f\u7684\u89c6\u9891\uff0c\u5f00\u542f\u8fde\u7eed\u8fd0\u884c\u6a21\u5f0f\uff08\u5373\u5c06 switch[15] \u62e8\u4e0a\u53bb\uff09\uff0c\u9996\u5148\u5c55\u793a pc \u7684\u53d8\u5316\u60c5\u51b5\uff08\u5927\u6982\u5341\u51e0\u79d2\uff09\uff0c\u7136\u540e\u505c\u6b62\u8fde\u7eed\u8fd0\u884c\u6a21\u5f0f\u5e76\u6309\u4e0b reset \u952e\uff0c\u63a7\u5236\u677f\u5b50\u8f93\u51fa gp \u5bc4\u5b58\u5668\u7684\u503c\uff0c\u518d\u5f00\u542f\u8fde\u7eed\u8fd0\u884c\u6a21\u5f0f\uff0c\u5c55\u793a gp \u5bc4\u5b58\u5668\u53d8\u5316\u7684\u60c5\u51b5\uff08\u5927\u6982\u5341\u51e0\u79d2\uff09\u3002\u4e0a\u677f\u89c6\u9891\u5230\u6b64\u7ed3\u675f \u7136\u540e\u8bf7\u5f55\u5236\u4e00\u4e2a\u8bb2\u89e3\u4ee3\u7801\u5b9e\u73b0\u7684\u89c6\u9891\uff0c\u8bf7\u4f7f\u7528\u76f8\u5e94\u7684\u5f55\u5c4f\u8f6f\u4ef6\u5f55\u5236\u81ea\u5df1\u7684\u5c4f\u5e55\uff08\u8bf7\u4e0d\u8981\u4f7f\u7528\u624b\u673a\u62cd\u6444\u7535\u8111\u5c4f\u5e55\uff09\uff0c\u5e76\u7ed3\u5408\u81ea\u5df1\u7684\u4ee3\u7801\u8bb2\u8bb2\u81ea\u5df1\u7684\u5927\u81f4\u5b9e\u73b0\u8fc7\u7a0b\uff08\u4e5f\u53ef\u4ee5\u901a\u8fc7\u753b\u56fe\u7684\u65b9\u5f0f\u8f85\u52a9\u8bb2\u89e3\uff09\u3002\u8bf7\u4fdd\u8bc1\u81ea\u5df1\u7684\u8bb2\u89e3\u6e05\u695a\u4e14\u5b8c\u6574\uff0c\u5426\u5219\u6211\u4eec\u53ef\u80fd\u4f1a\u901a\u8fc7\u8bed\u97f3\u901a\u8bdd\u5e76\u8981\u6c42\u5171\u4eab\u5c4f\u5e55\u7684\u65b9\u5f0f\u8fdb\u884c\u63d0\u95ee\u3002 \u5982\u679c\u5b9e\u5728\u6ca1\u6709\u5f55\u5236\u6761\u4ef6\uff0c\u4e5f\u53ef\u628a\u81ea\u5df1\u7684\u4ee3\u7801\u622a\u56fe\u53d1\u7ed9\u6211\u4eec\uff0c\u6211\u4eec\u4f1a\u9488\u5bf9\u4f60\u7684\u4ee3\u7801\u8fdb\u884c\u76f8\u5e94\u7684\u63d0\u95ee\uff0c\u5982\u679c\u80fd\u51c6\u786e\u4e14\u53ca\u65f6\u7684\u56de\u7b54\u51fa\u95ee\u9898\u5373\u53ef\u901a\u8fc7\u9a8c\u6536\u3002 \u9664\u6b64\u4e4b\u5916\uff0c\u518d\u6b21\u63d0\u9192\u5b9e\u9a8c\u62a5\u544a\u4e2d \u9700\u8981 \u5bf9\u4eff\u771f\u7684\u7ed3\u679c\u8fdb\u884c\u622a\u56fe\u5e76\u4f5c\u4ee5\u7b80\u8981\u7684\u8bf4\u660e\uff0c\u5426\u5219\u53ef\u80fd\u4f1a\u88ab\u6263\u53bb\u76f8\u5e94\u7684\u5206\u6570","title":"6 \u9a8c\u6536\u4e0e\u63d0\u4ea4\u8981\u6c42"}]}